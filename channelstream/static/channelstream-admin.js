/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/channelstream-admin/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./bower_components/font-roboto/roboto.html":
/*!**************************************************!*\
  !*** ./bower_components/font-roboto/roboto.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<link rel=stylesheet type=text/css href=\\\"https://fonts.googleapis.com/css?family=Roboto+Mono:400,700|Roboto:400,300,300italic,400italic,500,500italic,700,700italic\\\" crossorigin=anonymous>\");\n\n//# sourceURL=webpack:///./bower_components/font-roboto/roboto.html?");

/***/ }),

/***/ "./bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html":
/*!*******************************************************************************!*\
  !*** ./bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Chrome uses an older version of DOM Level 3 Keyboard Events\n   *\n   * Most keys are labeled as text, but some are Unicode codepoints.\n   * Values taken from: http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/keyset.html#KeySet-Set\n   */\n\n  var KEY_IDENTIFIER = {\n    'U+0008': 'backspace',\n    'U+0009': 'tab',\n    'U+001B': 'esc',\n    'U+0020': 'space',\n    'U+007F': 'del'\n  };\n\n  /**\n   * Special table for KeyboardEvent.keyCode.\n   * KeyboardEvent.keyIdentifier is better, and KeyBoardEvent.key is even better\n   * than that.\n   *\n   * Values from: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.keyCode#Value_of_keyCode\n   */\n  var KEY_CODE = {\n    8: 'backspace',\n    9: 'tab',\n    13: 'enter',\n    27: 'esc',\n    33: 'pageup',\n    34: 'pagedown',\n    35: 'end',\n    36: 'home',\n    32: 'space',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down',\n    46: 'del',\n    106: '*'\n  };\n\n  /**\n   * MODIFIER_KEYS maps the short name for modifier keys used in a key\n   * combo string to the property name that references those same keys\n   * in a KeyboardEvent instance.\n   */\n  var MODIFIER_KEYS = {\n    'shift': 'shiftKey',\n    'ctrl': 'ctrlKey',\n    'alt': 'altKey',\n    'meta': 'metaKey'\n  };\n\n  /**\n   * KeyboardEvent.key is mostly represented by printable character made by\n   * the keyboard, with unprintable keys labeled nicely.\n   *\n   * However, on OS X, Alt+char can make a Unicode character that follows an\n   * Apple-specific mapping. In this case, we fall back to .keyCode.\n   */\n  var KEY_CHAR = /[a-z0-9*]/;\n\n  /**\n   * Matches a keyIdentifier string.\n   */\n  var IDENT_CHAR = /U\\+/;\n\n  /**\n   * Matches arrow keys in Gecko 27.0+\n   */\n  var ARROW_KEY = /^arrow/;\n\n  /**\n   * Matches space keys everywhere (notably including IE10's exceptional name\n   * `spacebar`).\n   */\n  var SPACE_KEY = /^space(bar)?/;\n\n  /**\n   * Matches ESC key.\n   *\n   * Value from: http://w3c.github.io/uievents-key/#key-Escape\n   */\n  var ESC_KEY = /^escape$/;\n\n  /**\n   * Transforms the key.\n   * @param {string} key The KeyBoardEvent.key\n   * @param {Boolean} [noSpecialChars] Limits the transformation to\n   * alpha-numeric characters.\n   */\n  function transformKey(key, noSpecialChars) {\n    var validKey = '';\n    if (key) {\n      var lKey = key.toLowerCase();\n      if (lKey === ' ' || SPACE_KEY.test(lKey)) {\n        validKey = 'space';\n      } else if (ESC_KEY.test(lKey)) {\n        validKey = 'esc';\n      } else if (lKey.length == 1) {\n        if (!noSpecialChars || KEY_CHAR.test(lKey)) {\n          validKey = lKey;\n        }\n      } else if (ARROW_KEY.test(lKey)) {\n        validKey = lKey.replace('arrow', '');\n      } else if (lKey == 'multiply') {\n        // numpad '*' can map to Multiply on IE/Windows\n        validKey = '*';\n      } else {\n        validKey = lKey;\n      }\n    }\n    return validKey;\n  }\n\n  function transformKeyIdentifier(keyIdent) {\n    var validKey = '';\n    if (keyIdent) {\n      if (keyIdent in KEY_IDENTIFIER) {\n        validKey = KEY_IDENTIFIER[keyIdent];\n      } else if (IDENT_CHAR.test(keyIdent)) {\n        keyIdent = parseInt(keyIdent.replace('U+', '0x'), 16);\n        validKey = String.fromCharCode(keyIdent).toLowerCase();\n      } else {\n        validKey = keyIdent.toLowerCase();\n      }\n    }\n    return validKey;\n  }\n\n  function transformKeyCode(keyCode) {\n    var validKey = '';\n    if (Number(keyCode)) {\n      if (keyCode >= 65 && keyCode <= 90) {\n        // ascii a-z\n        // lowercase is 32 offset from uppercase\n        validKey = String.fromCharCode(32 + keyCode);\n      } else if (keyCode >= 112 && keyCode <= 123) {\n        // function keys f1-f12\n        validKey = 'f' + (keyCode - 112 + 1);\n      } else if (keyCode >= 48 && keyCode <= 57) {\n        // top 0-9 keys\n        validKey = String(keyCode - 48);\n      } else if (keyCode >= 96 && keyCode <= 105) {\n        // num pad 0-9\n        validKey = String(keyCode - 96);\n      } else {\n        validKey = KEY_CODE[keyCode];\n      }\n    }\n    return validKey;\n  }\n\n  /**\n    * Calculates the normalized key for a KeyboardEvent.\n    * @param {KeyboardEvent} keyEvent\n    * @param {Boolean} [noSpecialChars] Set to true to limit keyEvent.key\n    * transformation to alpha-numeric chars. This is useful with key\n    * combinations like shift + 2, which on FF for MacOS produces\n    * keyEvent.key = @\n    * To get 2 returned, set noSpecialChars = true\n    * To get @ returned, set noSpecialChars = false\n   */\n  function normalizedKeyForEvent(keyEvent, noSpecialChars) {\n    // Fall back from .key, to .detail.key for artifical keyboard events,\n    // and then to deprecated .keyIdentifier and .keyCode.\n    if (keyEvent.key) {\n      return transformKey(keyEvent.key, noSpecialChars);\n    }\n    if (keyEvent.detail && keyEvent.detail.key) {\n      return transformKey(keyEvent.detail.key, noSpecialChars);\n    }\n    return transformKeyIdentifier(keyEvent.keyIdentifier) || transformKeyCode(keyEvent.keyCode) || '';\n  }\n\n  function keyComboMatchesEvent(keyCombo, event) {\n    // For combos with modifiers we support only alpha-numeric keys\n    var keyEvent = normalizedKeyForEvent(event, keyCombo.hasModifiers);\n    return keyEvent === keyCombo.key && (!keyCombo.hasModifiers || !!event.shiftKey === !!keyCombo.shiftKey && !!event.ctrlKey === !!keyCombo.ctrlKey && !!event.altKey === !!keyCombo.altKey && !!event.metaKey === !!keyCombo.metaKey);\n  }\n\n  function parseKeyComboString(keyComboString) {\n    if (keyComboString.length === 1) {\n      return {\n        combo: keyComboString,\n        key: keyComboString,\n        event: 'keydown'\n      };\n    }\n    return keyComboString.split('+').reduce(function (parsedKeyCombo, keyComboPart) {\n      var eventParts = keyComboPart.split(':');\n      var keyName = eventParts[0];\n      var event = eventParts[1];\n\n      if (keyName in MODIFIER_KEYS) {\n        parsedKeyCombo[MODIFIER_KEYS[keyName]] = true;\n        parsedKeyCombo.hasModifiers = true;\n      } else {\n        parsedKeyCombo.key = keyName;\n        parsedKeyCombo.event = event || 'keydown';\n      }\n\n      return parsedKeyCombo;\n    }, {\n      combo: keyComboString.split(':').shift()\n    });\n  }\n\n  function parseEventString(eventString) {\n    return eventString.trim().split(' ').map(function (keyComboString) {\n      return parseKeyComboString(keyComboString);\n    });\n  }\n\n  /**\n   * `Polymer.IronA11yKeysBehavior` provides a normalized interface for processing\n   * keyboard commands that pertain to [WAI-ARIA best practices](http://www.w3.org/TR/wai-aria-practices/#kbd_general_binding).\n   * The element takes care of browser differences with respect to Keyboard events\n   * and uses an expressive syntax to filter key presses.\n   *\n   * Use the `keyBindings` prototype property to express what combination of keys\n   * will trigger the callback. A key binding has the format\n   * `\"KEY+MODIFIER:EVENT\": \"callback\"` (`\"KEY\": \"callback\"` or\n   * `\"KEY:EVENT\": \"callback\"` are valid as well). Some examples:\n   *\n   *      keyBindings: {\n   *        'space': '_onKeydown', // same as 'space:keydown'\n   *        'shift+tab': '_onKeydown',\n   *        'enter:keypress': '_onKeypress',\n   *        'esc:keyup': '_onKeyup'\n   *      }\n   *\n   * The callback will receive with an event containing the following information in `event.detail`:\n   *\n   *      _onKeydown: function(event) {\n   *        console.log(event.detail.combo); // KEY+MODIFIER, e.g. \"shift+tab\"\n   *        console.log(event.detail.key); // KEY only, e.g. \"tab\"\n   *        console.log(event.detail.event); // EVENT, e.g. \"keydown\"\n   *        console.log(event.detail.keyboardEvent); // the original KeyboardEvent\n   *      }\n   *\n   * Use the `keyEventTarget` attribute to set up event handlers on a specific\n   * node.\n   *\n   * See the [demo source code](https://github.com/PolymerElements/iron-a11y-keys-behavior/blob/master/demo/x-key-aware.html)\n   * for an example.\n   *\n   * @demo demo/index.html\n   * @polymerBehavior\n   */\n  Polymer.IronA11yKeysBehavior = {\n    properties: {\n      /**\n       * The EventTarget that will be firing relevant KeyboardEvents. Set it to\n       * `null` to disable the listeners.\n       * @type {?EventTarget}\n       */\n      keyEventTarget: {\n        type: Object,\n        value: function value() {\n          return this;\n        }\n      },\n\n      /**\n       * If true, this property will cause the implementing element to\n       * automatically stop propagation on any handled KeyboardEvents.\n       */\n      stopKeyboardEventPropagation: {\n        type: Boolean,\n        value: false\n      },\n\n      _boundKeyHandlers: {\n        type: Array,\n        value: function value() {\n          return [];\n        }\n      },\n\n      // We use this due to a limitation in IE10 where instances will have\n      // own properties of everything on the \"prototype\".\n      _imperativeKeyBindings: {\n        type: Object,\n        value: function value() {\n          return {};\n        }\n      }\n    },\n\n    observers: ['_resetKeyEventListeners(keyEventTarget, _boundKeyHandlers)'],\n\n    /**\n     * To be used to express what combination of keys  will trigger the relative\n     * callback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`\n     * @type {!Object}\n     */\n    keyBindings: {},\n\n    registered: function registered() {\n      this._prepKeyBindings();\n    },\n\n    attached: function attached() {\n      this._listenKeyEventListeners();\n    },\n\n    detached: function detached() {\n      this._unlistenKeyEventListeners();\n    },\n\n    /**\n     * Can be used to imperatively add a key binding to the implementing\n     * element. This is the imperative equivalent of declaring a keybinding\n     * in the `keyBindings` prototype property.\n     *\n     * @param {string} eventString\n     * @param {string} handlerName\n     */\n    addOwnKeyBinding: function addOwnKeyBinding(eventString, handlerName) {\n      this._imperativeKeyBindings[eventString] = handlerName;\n      this._prepKeyBindings();\n      this._resetKeyEventListeners();\n    },\n\n    /**\n     * When called, will remove all imperatively-added key bindings.\n     */\n    removeOwnKeyBindings: function removeOwnKeyBindings() {\n      this._imperativeKeyBindings = {};\n      this._prepKeyBindings();\n      this._resetKeyEventListeners();\n    },\n\n    /**\n     * Returns true if a keyboard event matches `eventString`.\n     *\n     * @param {KeyboardEvent} event\n     * @param {string} eventString\n     * @return {boolean}\n     */\n    keyboardEventMatchesKeys: function keyboardEventMatchesKeys(event, eventString) {\n      var keyCombos = parseEventString(eventString);\n      for (var i = 0; i < keyCombos.length; ++i) {\n        if (keyComboMatchesEvent(keyCombos[i], event)) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    _collectKeyBindings: function _collectKeyBindings() {\n      var keyBindings = this.behaviors.map(function (behavior) {\n        return behavior.keyBindings;\n      });\n\n      if (keyBindings.indexOf(this.keyBindings) === -1) {\n        keyBindings.push(this.keyBindings);\n      }\n\n      return keyBindings;\n    },\n\n    _prepKeyBindings: function _prepKeyBindings() {\n      this._keyBindings = {};\n\n      this._collectKeyBindings().forEach(function (keyBindings) {\n        for (var eventString in keyBindings) {\n          this._addKeyBinding(eventString, keyBindings[eventString]);\n        }\n      }, this);\n\n      for (var eventString in this._imperativeKeyBindings) {\n        this._addKeyBinding(eventString, this._imperativeKeyBindings[eventString]);\n      }\n\n      // Give precedence to combos with modifiers to be checked first.\n      for (var eventName in this._keyBindings) {\n        this._keyBindings[eventName].sort(function (kb1, kb2) {\n          var b1 = kb1[0].hasModifiers;\n          var b2 = kb2[0].hasModifiers;\n          return b1 === b2 ? 0 : b1 ? -1 : 1;\n        });\n      }\n    },\n\n    _addKeyBinding: function _addKeyBinding(eventString, handlerName) {\n      parseEventString(eventString).forEach(function (keyCombo) {\n        this._keyBindings[keyCombo.event] = this._keyBindings[keyCombo.event] || [];\n\n        this._keyBindings[keyCombo.event].push([keyCombo, handlerName]);\n      }, this);\n    },\n\n    _resetKeyEventListeners: function _resetKeyEventListeners() {\n      this._unlistenKeyEventListeners();\n\n      if (this.isAttached) {\n        this._listenKeyEventListeners();\n      }\n    },\n\n    _listenKeyEventListeners: function _listenKeyEventListeners() {\n      if (!this.keyEventTarget) {\n        return;\n      }\n      Object.keys(this._keyBindings).forEach(function (eventName) {\n        var keyBindings = this._keyBindings[eventName];\n        var boundKeyHandler = this._onKeyBindingEvent.bind(this, keyBindings);\n\n        this._boundKeyHandlers.push([this.keyEventTarget, eventName, boundKeyHandler]);\n\n        this.keyEventTarget.addEventListener(eventName, boundKeyHandler);\n      }, this);\n    },\n\n    _unlistenKeyEventListeners: function _unlistenKeyEventListeners() {\n      var keyHandlerTuple;\n      var keyEventTarget;\n      var eventName;\n      var boundKeyHandler;\n\n      while (this._boundKeyHandlers.length) {\n        // My kingdom for block-scope binding and destructuring assignment..\n        keyHandlerTuple = this._boundKeyHandlers.pop();\n        keyEventTarget = keyHandlerTuple[0];\n        eventName = keyHandlerTuple[1];\n        boundKeyHandler = keyHandlerTuple[2];\n\n        keyEventTarget.removeEventListener(eventName, boundKeyHandler);\n      }\n    },\n\n    _onKeyBindingEvent: function _onKeyBindingEvent(keyBindings, event) {\n      if (this.stopKeyboardEventPropagation) {\n        event.stopPropagation();\n      }\n\n      // if event has been already prevented, don't do anything\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      for (var i = 0; i < keyBindings.length; i++) {\n        var keyCombo = keyBindings[i][0];\n        var handlerName = keyBindings[i][1];\n        if (keyComboMatchesEvent(keyCombo, event)) {\n          this._triggerKeyHandler(keyCombo, handlerName, event);\n          // exit the loop if eventDefault was prevented\n          if (event.defaultPrevented) {\n            return;\n          }\n        }\n      }\n    },\n\n    _triggerKeyHandler: function _triggerKeyHandler(keyCombo, handlerName, keyboardEvent) {\n      var detail = Object.create(keyCombo);\n      detail.keyboardEvent = keyboardEvent;\n      var event = new CustomEvent(keyCombo.event, {\n        detail: detail,\n        cancelable: true\n      });\n      this[handlerName].call(this, event);\n      if (event.defaultPrevented) {\n        keyboardEvent.preventDefault();\n      }\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html?");

/***/ }),

/***/ "./bower_components/iron-ajax/iron-ajax.html":
/*!***************************************************!*\
  !*** ./bower_components/iron-ajax/iron-ajax.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ./iron-request.html */ \"./bower_components/iron-ajax/iron-request.html\");\n\n'use strict';\n\nPolymer({\n\n  is: 'iron-ajax',\n\n  /**\n   * Fired before a request is sent.\n   *\n   * @event iron-ajax-presend\n   */\n\n  /**\n   * Fired when a request is sent.\n   *\n   * @event request\n   * @event iron-ajax-request\n   */\n\n  /**\n   * Fired when a response is received.\n   *\n   * @event response\n   * @event iron-ajax-response\n   */\n\n  /**\n   * Fired when an error is received.\n   *\n   * @event error\n   * @event iron-ajax-error\n   */\n\n  hostAttributes: {\n    hidden: true\n  },\n\n  properties: {\n    /**\n     * The URL target of the request.\n     */\n    url: {\n      type: String\n    },\n\n    /**\n     * An object that contains query parameters to be appended to the\n     * specified `url` when generating a request. If you wish to set the body\n     * content when making a POST request, you should use the `body` property\n     * instead.\n     */\n    params: {\n      type: Object,\n      value: function value() {\n        return {};\n      }\n    },\n\n    /**\n     * The HTTP method to use such as 'GET', 'POST', 'PUT', or 'DELETE'.\n     * Default is 'GET'.\n     */\n    method: {\n      type: String,\n      value: 'GET'\n    },\n\n    /**\n     * HTTP request headers to send.\n     *\n     * Example:\n     *\n     *     <iron-ajax\n     *         auto\n     *         url=\"http://somesite.com\"\n     *         headers='{\"X-Requested-With\": \"XMLHttpRequest\"}'\n     *         handle-as=\"json\"></iron-ajax>\n     *\n     * Note: setting a `Content-Type` header here will override the value\n     * specified by the `contentType` property of this element.\n     */\n    headers: {\n      type: Object,\n      value: function value() {\n        return {};\n      }\n    },\n\n    /**\n     * Content type to use when sending data. If the `contentType` property\n     * is set and a `Content-Type` header is specified in the `headers`\n     * property, the `headers` property value will take precedence.\n     *\n     * Varies the handling of the `body` param.\n     */\n    contentType: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * Body content to send with the request, typically used with \"POST\"\n     * requests.\n     *\n     * If body is a string it will be sent unmodified.\n     *\n     * If Content-Type is set to a value listed below, then\n     * the body will be encoded accordingly.\n     *\n     *    * `content-type=\"application/json\"`\n     *      * body is encoded like `{\"foo\":\"bar baz\",\"x\":1}`\n     *    * `content-type=\"application/x-www-form-urlencoded\"`\n     *      * body is encoded like `foo=bar+baz&x=1`\n     *\n     * Otherwise the body will be passed to the browser unmodified, and it\n     * will handle any encoding (e.g. for FormData, Blob, ArrayBuffer).\n     *\n     * @type (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object)\n     */\n    body: {\n      type: Object,\n      value: null\n    },\n\n    /**\n     * Toggle whether XHR is synchronous or asynchronous. Don't change this\n     * to true unless You Know What You Are Doing™.\n     */\n    sync: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Specifies what data to store in the `response` property, and\n     * to deliver as `event.detail.response` in `response` events.\n     *\n     * One of:\n     *\n     *    `text`: uses `XHR.responseText`.\n     *\n     *    `xml`: uses `XHR.responseXML`.\n     *\n     *    `json`: uses `XHR.responseText` parsed as JSON.\n     *\n     *    `arraybuffer`: uses `XHR.response`.\n     *\n     *    `blob`: uses `XHR.response`.\n     *\n     *    `document`: uses `XHR.response`.\n     */\n    handleAs: {\n      type: String,\n      value: 'json'\n    },\n\n    /**\n     * Set the withCredentials flag on the request.\n     */\n    withCredentials: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Set the timeout flag on the request.\n     */\n    timeout: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * If true, automatically performs an Ajax request when either `url` or\n     * `params` changes.\n     */\n    auto: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * If true, error messages will automatically be logged to the console.\n     */\n    verbose: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * The most recent request made by this iron-ajax element.\n     */\n    lastRequest: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * True while lastRequest is in flight.\n     */\n    loading: {\n      type: Boolean,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * lastRequest's response.\n     *\n     * Note that lastResponse and lastError are set when lastRequest finishes,\n     * so if loading is true, then lastResponse and lastError will correspond\n     * to the result of the previous request.\n     *\n     * The type of the response is determined by the value of `handleAs` at\n     * the time that the request was generated.\n     *\n     * @type {Object}\n     */\n    lastResponse: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * lastRequest's error, if any.\n     *\n     * @type {Object}\n     */\n    lastError: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * An Array of all in-flight requests originating from this iron-ajax\n     * element.\n     */\n    activeRequests: {\n      type: Array,\n      notify: true,\n      readOnly: true,\n      value: function value() {\n        return [];\n      }\n    },\n\n    /**\n     * Length of time in milliseconds to debounce multiple automatically generated requests.\n     */\n    debounceDuration: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n\n    /**\n     * Prefix to be stripped from a JSON response before parsing it.\n     *\n     * In order to prevent an attack using CSRF with Array responses\n     * (http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx/)\n     * many backends will mitigate this by prefixing all JSON response bodies\n     * with a string that would be nonsensical to a JavaScript parser.\n     *\n     */\n    jsonPrefix: {\n      type: String,\n      value: ''\n    },\n\n    /**\n     * By default, iron-ajax's events do not bubble. Setting this attribute will cause its\n     * request and response events as well as its iron-ajax-request, -response,  and -error\n     * events to bubble to the window object. The vanilla error event never bubbles when\n     * using shadow dom even if this.bubbles is true because a scoped flag is not passed with\n     * it (first link) and because the shadow dom spec did not used to allow certain events,\n     * including events named error, to leak outside of shadow trees (second link).\n     * https://www.w3.org/TR/shadow-dom/#scoped-flag\n     * https://www.w3.org/TR/2015/WD-shadow-dom-20151215/#events-that-are-not-leaked-into-ancestor-trees\n     */\n    bubbles: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Changes the [`completes`](iron-request#property-completes) promise chain \n     * from `generateRequest` to reject with an object\n     * containing the original request, as well an error message.\n     * If false (default), the promise rejects with an error message only.\n     */\n    rejectWithRequest: {\n      type: Boolean,\n      value: false\n    },\n\n    _boundHandleResponse: {\n      type: Function,\n      value: function value() {\n        return this._handleResponse.bind(this);\n      }\n    }\n  },\n\n  observers: ['_requestOptionsChanged(url, method, params.*, headers, contentType, ' + 'body, sync, handleAs, jsonPrefix, withCredentials, timeout, auto)'],\n\n  /**\n   * The query string that should be appended to the `url`, serialized from\n   * the current value of `params`.\n   *\n   * @return {string}\n   */\n  get queryString() {\n    var queryParts = [];\n    var param;\n    var value;\n\n    for (param in this.params) {\n      value = this.params[param];\n      param = window.encodeURIComponent(param);\n\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          queryParts.push(param + '=' + window.encodeURIComponent(value[i]));\n        }\n      } else if (value !== null) {\n        queryParts.push(param + '=' + window.encodeURIComponent(value));\n      } else {\n        queryParts.push(param);\n      }\n    }\n\n    return queryParts.join('&');\n  },\n\n  /**\n   * The `url` with query string (if `params` are specified), suitable for\n   * providing to an `iron-request` instance.\n   *\n   * @return {string}\n   */\n  get requestUrl() {\n    var queryString = this.queryString;\n    var url = this.url || '';\n\n    if (queryString) {\n      var bindingChar = url.indexOf('?') >= 0 ? '&' : '?';\n      return url + bindingChar + queryString;\n    }\n\n    return url;\n  },\n\n  /**\n   * An object that maps header names to header values, first applying the\n   * the value of `Content-Type` and then overlaying the headers specified\n   * in the `headers` property.\n   *\n   * @return {Object}\n   */\n  get requestHeaders() {\n    var headers = {};\n    var contentType = this.contentType;\n    if (contentType == null && typeof this.body === 'string') {\n      contentType = 'application/x-www-form-urlencoded';\n    }\n    if (contentType) {\n      headers['content-type'] = contentType;\n    }\n    var header;\n\n    if (_typeof(this.headers) === 'object') {\n      for (header in this.headers) {\n        headers[header] = this.headers[header].toString();\n      }\n    }\n\n    return headers;\n  },\n\n  /**\n   * Request options suitable for generating an `iron-request` instance based\n   * on the current state of the `iron-ajax` instance's properties.\n   *\n   * @return {{\n   *   url: string,\n   *   method: (string|undefined),\n   *   async: (boolean|undefined),\n   *   body: (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),\n   *   headers: (Object|undefined),\n   *   handleAs: (string|undefined),\n   *   jsonPrefix: (string|undefined),\n   *   withCredentials: (boolean|undefined)}}\n   */\n  toRequestOptions: function toRequestOptions() {\n    return {\n      url: this.requestUrl || '',\n      method: this.method,\n      headers: this.requestHeaders,\n      body: this.body,\n      async: !this.sync,\n      handleAs: this.handleAs,\n      jsonPrefix: this.jsonPrefix,\n      withCredentials: this.withCredentials,\n      timeout: this.timeout,\n      rejectWithRequest: this.rejectWithRequest\n    };\n  },\n\n  /**\n   * Performs an AJAX request to the specified URL.\n   *\n   * @return {!IronRequestElement}\n   */\n  generateRequest: function generateRequest() {\n    var request = /** @type {!IronRequestElement} */document.createElement('iron-request');\n    var requestOptions = this.toRequestOptions();\n\n    this.push('activeRequests', request);\n\n    request.completes.then(this._boundHandleResponse).catch(this._handleError.bind(this, request)).then(this._discardRequest.bind(this, request));\n\n    var evt = this.fire('iron-ajax-presend', {\n      request: request,\n      options: requestOptions\n    }, { bubbles: this.bubbles, cancelable: true });\n\n    if (evt.defaultPrevented) {\n      request.abort();\n      request.rejectCompletes(request);\n      return request;\n    }\n\n    request.send(requestOptions);\n\n    this._setLastRequest(request);\n    this._setLoading(true);\n\n    this.fire('request', {\n      request: request,\n      options: requestOptions\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n\n    this.fire('iron-ajax-request', {\n      request: request,\n      options: requestOptions\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n\n    return request;\n  },\n\n  _handleResponse: function _handleResponse(request) {\n    if (request === this.lastRequest) {\n      this._setLastResponse(request.response);\n      this._setLastError(null);\n      this._setLoading(false);\n    }\n    this.fire('response', request, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n    this.fire('iron-ajax-response', request, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n  },\n\n  _handleError: function _handleError(request, error) {\n    if (this.verbose) {\n      Polymer.Base._error(error);\n    }\n\n    if (request === this.lastRequest) {\n      this._setLastError({\n        request: request,\n        error: error,\n        status: request.xhr.status,\n        statusText: request.xhr.statusText,\n        response: request.xhr.response\n      });\n      this._setLastResponse(null);\n      this._setLoading(false);\n    }\n\n    // Tests fail if this goes after the normal this.fire('error', ...)\n    this.fire('iron-ajax-error', {\n      request: request,\n      error: error\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n\n    this.fire('error', {\n      request: request,\n      error: error\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n  },\n\n  _discardRequest: function _discardRequest(request) {\n    var requestIndex = this.activeRequests.indexOf(request);\n\n    if (requestIndex > -1) {\n      this.splice('activeRequests', requestIndex, 1);\n    }\n  },\n\n  _requestOptionsChanged: function _requestOptionsChanged() {\n    this.debounce('generate-request', function () {\n      if (this.url == null) {\n        return;\n      }\n\n      if (this.auto) {\n        this.generateRequest();\n      }\n    }, this.debounceDuration);\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/iron-ajax/iron-ajax.html?");

/***/ }),

/***/ "./bower_components/iron-ajax/iron-request.html":
/*!******************************************************!*\
  !*** ./bower_components/iron-ajax/iron-request.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n'use strict';\n\nPolymer({\n  is: 'iron-request',\n\n  hostAttributes: {\n    hidden: true\n  },\n\n  properties: {\n\n    /**\n     * A reference to the XMLHttpRequest instance used to generate the\n     * network request.\n     *\n     * @type {XMLHttpRequest}\n     */\n    xhr: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function value() {\n        return new XMLHttpRequest();\n      }\n    },\n\n    /**\n     * A reference to the parsed response body, if the `xhr` has completely\n     * resolved.\n     *\n     * @type {*}\n     * @default null\n     */\n    response: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function value() {\n        return null;\n      }\n    },\n\n    /**\n     * A reference to the status code, if the `xhr` has completely resolved.\n     */\n    status: {\n      type: Number,\n      notify: true,\n      readOnly: true,\n      value: 0\n    },\n\n    /**\n     * A reference to the status text, if the `xhr` has completely resolved.\n     */\n    statusText: {\n      type: String,\n      notify: true,\n      readOnly: true,\n      value: ''\n    },\n\n    /**\n     * A promise that resolves when the `xhr` response comes back, or rejects\n     * if there is an error before the `xhr` completes.\n     * The resolve callback is called with the original request as an argument.\n     * By default, the reject callback is called with an `Error` as an argument.\n     * If `rejectWithRequest` is true, the reject callback is called with an\n     * object with two keys: `request`, the original request, and `error`, the\n     * error object.\n     *\n     * @type {Promise}\n     */\n    completes: {\n      type: Object,\n      readOnly: true,\n      notify: true,\n      value: function value() {\n        return new Promise(function (resolve, reject) {\n          this.resolveCompletes = resolve;\n          this.rejectCompletes = reject;\n        }.bind(this));\n      }\n    },\n\n    /**\n     * An object that contains progress information emitted by the XHR if\n     * available.\n     *\n     * @default {}\n     */\n    progress: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function value() {\n        return {};\n      }\n    },\n\n    /**\n     * Aborted will be true if an abort of the request is attempted.\n     */\n    aborted: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    },\n\n    /**\n     * Errored will be true if the browser fired an error event from the\n     * XHR object (mainly network errors).\n     */\n    errored: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    },\n\n    /**\n     * TimedOut will be true if the XHR threw a timeout event.\n     */\n    timedOut: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    }\n  },\n\n  /**\n   * Succeeded is true if the request succeeded. The request succeeded if it\n   * loaded without error, wasn't aborted, and the status code is ≥ 200, and\n   * < 300, or if the status code is 0.\n   *\n   * The status code 0 is accepted as a success because some schemes - e.g.\n   * file:// - don't provide status codes.\n   *\n   * @return {boolean}\n   */\n  get succeeded() {\n    if (this.errored || this.aborted || this.timedOut) {\n      return false;\n    }\n    var status = this.xhr.status || 0;\n\n    // Note: if we are using the file:// protocol, the status code will be 0\n    // for all outcomes (successful or otherwise).\n    return status === 0 || status >= 200 && status < 300;\n  },\n\n  /**\n   * Sends an HTTP request to the server and returns a promise (see the `completes`\n   * property for details).\n   *\n   * The handling of the `body` parameter will vary based on the Content-Type\n   * header. See the docs for iron-ajax's `body` property for details.\n   *\n   * @param {{\n   *   url: string,\n   *   method: (string|undefined),\n   *   async: (boolean|undefined),\n   *   body: (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),\n   *   headers: (Object|undefined),\n   *   handleAs: (string|undefined),\n   *   jsonPrefix: (string|undefined),\n   *   withCredentials: (boolean|undefined),\n   *   timeout: (Number|undefined),\n   *   rejectWithRequest: (boolean|undefined)}} options -\n   *   - url The url to which the request is sent.\n   *   - method The HTTP method to use, default is GET.\n   *   - async By default, all requests are sent asynchronously. To send synchronous requests,\n   *         set to false.\n   *   -  body The content for the request body for POST method.\n   *   -  headers HTTP request headers.\n   *   -  handleAs The response type. Default is 'text'.\n   *   -  withCredentials Whether or not to send credentials on the request. Default is false.\n   *   -  timeout - Timeout for request, in milliseconds.\n   *   -  rejectWithRequest Set to true to include the request object with promise rejections.\n   * @return {Promise}\n   */\n  send: function send(options) {\n    var xhr = this.xhr;\n\n    if (xhr.readyState > 0) {\n      return null;\n    }\n\n    xhr.addEventListener('progress', function (progress) {\n      this._setProgress({\n        lengthComputable: progress.lengthComputable,\n        loaded: progress.loaded,\n        total: progress.total\n      });\n    }.bind(this));\n\n    xhr.addEventListener('error', function (error) {\n      this._setErrored(true);\n      this._updateStatus();\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this));\n\n    xhr.addEventListener('timeout', function (error) {\n      this._setTimedOut(true);\n      this._updateStatus();\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this));\n\n    xhr.addEventListener('abort', function () {\n      this._setAborted(true);\n      this._updateStatus();\n      var error = new Error('Request aborted.');\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this));\n\n    // Called after all of the above.\n    xhr.addEventListener('loadend', function () {\n      this._updateStatus();\n      this._setResponse(this.parseResponse());\n\n      if (!this.succeeded) {\n        var error = new Error('The request failed with status code: ' + this.xhr.status);\n        var response = options.rejectWithRequest ? {\n          error: error,\n          request: this\n        } : error;\n        this.rejectCompletes(response);\n        return;\n      }\n\n      this.resolveCompletes(this);\n    }.bind(this));\n\n    this.url = options.url;\n    var isXHRAsync = options.async !== false;\n    xhr.open(options.method || 'GET', options.url, isXHRAsync);\n\n    var acceptType = {\n      'json': 'application/json',\n      'text': 'text/plain',\n      'html': 'text/html',\n      'xml': 'application/xml',\n      'arraybuffer': 'application/octet-stream'\n    }[options.handleAs];\n    var headers = options.headers || Object.create(null);\n    var newHeaders = Object.create(null);\n    for (var key in headers) {\n      newHeaders[key.toLowerCase()] = headers[key];\n    }\n    headers = newHeaders;\n\n    if (acceptType && !headers['accept']) {\n      headers['accept'] = acceptType;\n    }\n    Object.keys(headers).forEach(function (requestHeader) {\n      if (/[A-Z]/.test(requestHeader)) {\n        Polymer.Base._error('Headers must be lower case, got', requestHeader);\n      }\n      xhr.setRequestHeader(requestHeader, headers[requestHeader]);\n    }, this);\n\n    if (isXHRAsync) {\n      xhr.timeout = options.timeout;\n\n      var handleAs = options.handleAs;\n\n      // If a JSON prefix is present, the responseType must be 'text' or the\n      // browser won’t be able to parse the response.\n      if (!!options.jsonPrefix || !handleAs) {\n        handleAs = 'text';\n      }\n\n      // In IE, `xhr.responseType` is an empty string when the response\n      // returns. Hence, caching it as `xhr._responseType`.\n      xhr.responseType = xhr._responseType = handleAs;\n\n      // Cache the JSON prefix, if it exists.\n      if (!!options.jsonPrefix) {\n        xhr._jsonPrefix = options.jsonPrefix;\n      }\n    }\n\n    xhr.withCredentials = !!options.withCredentials;\n\n    var body = this._encodeBodyObject(options.body, headers['content-type']);\n\n    xhr.send(\n    /** @type {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|\n               null|string|undefined} */\n    body);\n\n    return this.completes;\n  },\n\n  /**\n   * Attempts to parse the response body of the XHR. If parsing succeeds,\n   * the value returned will be deserialized based on the `responseType`\n   * set on the XHR.\n   *\n   * @return {*} The parsed response,\n   * or undefined if there was an empty response or parsing failed.\n   */\n  parseResponse: function parseResponse() {\n    var xhr = this.xhr;\n    var responseType = xhr.responseType || xhr._responseType;\n    var preferResponseText = !this.xhr.responseType;\n    var prefixLen = xhr._jsonPrefix && xhr._jsonPrefix.length || 0;\n\n    try {\n      switch (responseType) {\n        case 'json':\n          // If the xhr object doesn't have a natural `xhr.responseType`,\n          // we can assume that the browser hasn't parsed the response for us,\n          // and so parsing is our responsibility. Likewise if response is\n          // undefined, as there's no way to encode undefined in JSON.\n          if (preferResponseText || xhr.response === undefined) {\n            // Try to emulate the JSON section of the response body section of\n            // the spec: https://xhr.spec.whatwg.org/#response-body\n            // That is to say, we try to parse as JSON, but if anything goes\n            // wrong return null.\n            try {\n              return JSON.parse(xhr.responseText);\n            } catch (_) {\n              return null;\n            }\n          }\n\n          return xhr.response;\n        case 'xml':\n          return xhr.responseXML;\n        case 'blob':\n        case 'document':\n        case 'arraybuffer':\n          return xhr.response;\n        case 'text':\n        default:\n          {\n            // If `prefixLen` is set, it implies the response should be parsed\n            // as JSON once the prefix of length `prefixLen` is stripped from\n            // it. Emulate the behavior above where null is returned on failure\n            // to parse.\n            if (prefixLen) {\n              try {\n                return JSON.parse(xhr.responseText.substring(prefixLen));\n              } catch (_) {\n                return null;\n              }\n            }\n            return xhr.responseText;\n          }\n      }\n    } catch (e) {\n      this.rejectCompletes(new Error('Could not parse response. ' + e.message));\n    }\n  },\n\n  /**\n   * Aborts the request.\n   */\n  abort: function abort() {\n    this._setAborted(true);\n    this.xhr.abort();\n  },\n\n  /**\n   * @param {*} body The given body of the request to try and encode.\n   * @param {?string} contentType The given content type, to infer an encoding\n   *     from.\n   * @return {*} Either the encoded body as a string, if successful,\n   *     or the unaltered body object if no encoding could be inferred.\n   */\n  _encodeBodyObject: function _encodeBodyObject(body, contentType) {\n    if (typeof body == 'string') {\n      return body; // Already encoded.\n    }\n    var bodyObj = /** @type {Object} */body;\n    switch (contentType) {\n      case 'application/json':\n        return JSON.stringify(bodyObj);\n      case 'application/x-www-form-urlencoded':\n        return this._wwwFormUrlEncode(bodyObj);\n    }\n    return body;\n  },\n\n  /**\n   * @param {Object} object The object to encode as x-www-form-urlencoded.\n   * @return {string} .\n   */\n  _wwwFormUrlEncode: function _wwwFormUrlEncode(object) {\n    if (!object) {\n      return '';\n    }\n    var pieces = [];\n    Object.keys(object).forEach(function (key) {\n      // TODO(rictic): handle array values here, in a consistent way with\n      //   iron-ajax params.\n      pieces.push(this._wwwFormUrlEncodePiece(key) + '=' + this._wwwFormUrlEncodePiece(object[key]));\n    }, this);\n    return pieces.join('&');\n  },\n\n  /**\n   * @param {*} str A key or value to encode as x-www-form-urlencoded.\n   * @return {string} .\n   */\n  _wwwFormUrlEncodePiece: function _wwwFormUrlEncodePiece(str) {\n    // Spec says to normalize newlines to \\r\\n and replace %20 spaces with +.\n    // jQuery does this as well, so this is likely to be widely compatible.\n    if (str === null || str === undefined || !str.toString) {\n      return '';\n    }\n\n    return encodeURIComponent(str.toString().replace(/\\r?\\n/g, '\\r\\n')).replace(/%20/g, '+');\n  },\n\n  /**\n   * Updates the status code and status text.\n   */\n  _updateStatus: function _updateStatus() {\n    this._setStatus(this.xhr.status);\n    this._setStatusText(this.xhr.statusText === undefined ? '' : this.xhr.statusText);\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/iron-ajax/iron-request.html?");

/***/ }),

/***/ "./bower_components/iron-behaviors/iron-button-state.html":
/*!****************************************************************!*\
  !*** ./bower_components/iron-behaviors/iron-button-state.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html */ \"./bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html\");\n\n__webpack_require__(/*! ./iron-control-state.html */ \"./bower_components/iron-behaviors/iron-control-state.html\");\n\n/**\n * @demo demo/index.html\n * @polymerBehavior Polymer.IronButtonState\n */\nPolymer.IronButtonStateImpl = {\n\n  properties: {\n\n    /**\n     * If true, the user is currently holding down the button.\n     */\n    pressed: {\n      type: Boolean,\n      readOnly: true,\n      value: false,\n      reflectToAttribute: true,\n      observer: '_pressedChanged'\n    },\n\n    /**\n     * If true, the button toggles the active state with each tap or press\n     * of the spacebar.\n     */\n    toggles: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n\n    /**\n     * If true, the button is a toggle and is currently in the active state.\n     */\n    active: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      reflectToAttribute: true\n    },\n\n    /**\n     * True if the element is currently being pressed by a \"pointer,\" which\n     * is loosely defined as mouse or touch input (but specifically excluding\n     * keyboard input).\n     */\n    pointerDown: {\n      type: Boolean,\n      readOnly: true,\n      value: false\n    },\n\n    /**\n     * True if the input device that caused the element to receive focus\n     * was a keyboard.\n     */\n    receivedFocusFromKeyboard: {\n      type: Boolean,\n      readOnly: true\n    },\n\n    /**\n     * The aria attribute to be set if the button is a toggle and in the\n     * active state.\n     */\n    ariaActiveAttribute: {\n      type: String,\n      value: 'aria-pressed',\n      observer: '_ariaActiveAttributeChanged'\n    }\n  },\n\n  listeners: {\n    down: '_downHandler',\n    up: '_upHandler',\n    tap: '_tapHandler'\n  },\n\n  observers: ['_focusChanged(focused)', '_activeChanged(active, ariaActiveAttribute)'],\n\n  keyBindings: {\n    'enter:keydown': '_asyncClick',\n    'space:keydown': '_spaceKeyDownHandler',\n    'space:keyup': '_spaceKeyUpHandler'\n  },\n\n  _mouseEventRe: /^mouse/,\n\n  _tapHandler: function _tapHandler() {\n    if (this.toggles) {\n      // a tap is needed to toggle the active state\n      this._userActivate(!this.active);\n    } else {\n      this.active = false;\n    }\n  },\n\n  _focusChanged: function _focusChanged(focused) {\n    this._detectKeyboardFocus(focused);\n\n    if (!focused) {\n      this._setPressed(false);\n    }\n  },\n\n  _detectKeyboardFocus: function _detectKeyboardFocus(focused) {\n    this._setReceivedFocusFromKeyboard(!this.pointerDown && focused);\n  },\n\n  // to emulate native checkbox, (de-)activations from a user interaction fire\n  // 'change' events\n  _userActivate: function _userActivate(active) {\n    if (this.active !== active) {\n      this.active = active;\n      this.fire('change');\n    }\n  },\n\n  _downHandler: function _downHandler(event) {\n    this._setPointerDown(true);\n    this._setPressed(true);\n    this._setReceivedFocusFromKeyboard(false);\n  },\n\n  _upHandler: function _upHandler() {\n    this._setPointerDown(false);\n    this._setPressed(false);\n  },\n\n  /**\n   * @param {!KeyboardEvent} event .\n   */\n  _spaceKeyDownHandler: function _spaceKeyDownHandler(event) {\n    var keyboardEvent = event.detail.keyboardEvent;\n    var target = Polymer.dom(keyboardEvent).localTarget;\n\n    // Ignore the event if this is coming from a focused light child, since that\n    // element will deal with it.\n    if (this.isLightDescendant( /** @type {Node} */target)) return;\n\n    keyboardEvent.preventDefault();\n    keyboardEvent.stopImmediatePropagation();\n    this._setPressed(true);\n  },\n\n  /**\n   * @param {!KeyboardEvent} event .\n   */\n  _spaceKeyUpHandler: function _spaceKeyUpHandler(event) {\n    var keyboardEvent = event.detail.keyboardEvent;\n    var target = Polymer.dom(keyboardEvent).localTarget;\n\n    // Ignore the event if this is coming from a focused light child, since that\n    // element will deal with it.\n    if (this.isLightDescendant( /** @type {Node} */target)) return;\n\n    if (this.pressed) {\n      this._asyncClick();\n    }\n    this._setPressed(false);\n  },\n\n  // trigger click asynchronously, the asynchrony is useful to allow one\n  // event handler to unwind before triggering another event\n  _asyncClick: function _asyncClick() {\n    this.async(function () {\n      this.click();\n    }, 1);\n  },\n\n  // any of these changes are considered a change to button state\n\n  _pressedChanged: function _pressedChanged(pressed) {\n    this._changedButtonState();\n  },\n\n  _ariaActiveAttributeChanged: function _ariaActiveAttributeChanged(value, oldValue) {\n    if (oldValue && oldValue != value && this.hasAttribute(oldValue)) {\n      this.removeAttribute(oldValue);\n    }\n  },\n\n  _activeChanged: function _activeChanged(active, ariaActiveAttribute) {\n    if (this.toggles) {\n      this.setAttribute(this.ariaActiveAttribute, active ? 'true' : 'false');\n    } else {\n      this.removeAttribute(this.ariaActiveAttribute);\n    }\n    this._changedButtonState();\n  },\n\n  _controlStateChanged: function _controlStateChanged() {\n    if (this.disabled) {\n      this._setPressed(false);\n    } else {\n      this._changedButtonState();\n    }\n  },\n\n  // provide hook for follow-on behaviors to react to button-state\n\n  _changedButtonState: function _changedButtonState() {\n    if (this._buttonStateChanged) {\n      this._buttonStateChanged(); // abstract\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nPolymer.IronButtonState = [Polymer.IronA11yKeysBehavior, Polymer.IronButtonStateImpl];\n\n//# sourceURL=webpack:///./bower_components/iron-behaviors/iron-button-state.html?");

/***/ }),

/***/ "./bower_components/iron-behaviors/iron-control-state.html":
/*!*****************************************************************!*\
  !*** ./bower_components/iron-behaviors/iron-control-state.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n/**\n * @demo demo/index.html\n * @polymerBehavior\n */\nPolymer.IronControlState = {\n\n  properties: {\n\n    /**\n     * If true, the element currently has focus.\n     */\n    focused: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      readOnly: true,\n      reflectToAttribute: true\n    },\n\n    /**\n     * If true, the user cannot interact with this element.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      observer: '_disabledChanged',\n      reflectToAttribute: true\n    },\n\n    _oldTabIndex: {\n      type: Number\n    },\n\n    _boundFocusBlurHandler: {\n      type: Function,\n      value: function value() {\n        return this._focusBlurHandler.bind(this);\n      }\n    },\n\n    __handleEventRetargeting: {\n      type: Boolean,\n      value: function value() {\n        return !this.shadowRoot && !Polymer.Element;\n      }\n    }\n  },\n\n  observers: ['_changedControlState(focused, disabled)'],\n\n  ready: function ready() {\n    this.addEventListener('focus', this._boundFocusBlurHandler, true);\n    this.addEventListener('blur', this._boundFocusBlurHandler, true);\n  },\n\n  _focusBlurHandler: function _focusBlurHandler(event) {\n    // In Polymer 2.0, the library takes care of retargeting events.\n    if (Polymer.Element) {\n      this._setFocused(event.type === 'focus');\n      return;\n    }\n\n    // NOTE(cdata):  if we are in ShadowDOM land, `event.target` will\n    // eventually become `this` due to retargeting; if we are not in\n    // ShadowDOM land, `event.target` will eventually become `this` due\n    // to the second conditional which fires a synthetic event (that is also\n    // handled). In either case, we can disregard `event.path`.\n    if (event.target === this) {\n      this._setFocused(event.type === 'focus');\n    } else if (this.__handleEventRetargeting) {\n      var target = /** @type {Node} */Polymer.dom(event).localTarget;\n      if (!this.isLightDescendant(target)) {\n        this.fire(event.type, { sourceEvent: event }, {\n          node: this,\n          bubbles: event.bubbles,\n          cancelable: event.cancelable\n        });\n      }\n    }\n  },\n\n  _disabledChanged: function _disabledChanged(disabled, old) {\n    this.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n    this.style.pointerEvents = disabled ? 'none' : '';\n    if (disabled) {\n      this._oldTabIndex = this.tabIndex;\n      this._setFocused(false);\n      this.tabIndex = -1;\n      this.blur();\n    } else if (this._oldTabIndex !== undefined) {\n      this.tabIndex = this._oldTabIndex;\n    }\n  },\n\n  _changedControlState: function _changedControlState() {\n    // _controlStateChanged is abstract, follow-on behaviors may implement it\n    if (this._controlStateChanged) {\n      this._controlStateChanged();\n    }\n  }\n\n};\n\n//# sourceURL=webpack:///./bower_components/iron-behaviors/iron-control-state.html?");

/***/ }),

/***/ "./bower_components/iron-collapse/iron-collapse.html":
/*!***********************************************************!*\
  !*** ./bower_components/iron-collapse/iron-collapse.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-resizable-behavior/iron-resizable-behavior.html */ \"./bower_components/iron-resizable-behavior/iron-resizable-behavior.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=iron-collapse> <template> <style>:host{display:block;transition-duration:var(--iron-collapse-transition-duration,300ms);-webkit-transition-duration:var(--iron-collapse-transition-duration,300ms);overflow:visible}:host(.iron-collapse-closed){display:none}:host(:not(.iron-collapse-opened)){overflow:hidden}</style> <slot></slot> </template> </dom-module>\");\n\nPolymer({\n\n  is: 'iron-collapse',\n\n  behaviors: [Polymer.IronResizableBehavior],\n\n  properties: {\n\n    /**\n     * If true, the orientation is horizontal; otherwise is vertical.\n     *\n     * @attribute horizontal\n     */\n    horizontal: {\n      type: Boolean,\n      value: false,\n      observer: '_horizontalChanged'\n    },\n\n    /**\n     * Set opened to true to show the collapse element and to false to hide it.\n     *\n     * @attribute opened\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      notify: true,\n      observer: '_openedChanged'\n    },\n\n    /**\n     * When true, the element is transitioning its opened state. When false,\n     * the element has finished opening/closing.\n     *\n     * @attribute transitioning\n     */\n    transitioning: {\n      type: Boolean,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * Set noAnimation to true to disable animations.\n     *\n     * @attribute noAnimation\n     */\n    noAnimation: {\n      type: Boolean\n    },\n\n    /**\n     * Stores the desired size of the collapse body.\n     * @private\n     */\n    _desiredSize: {\n      type: String,\n      value: ''\n    }\n  },\n\n  get dimension() {\n    return this.horizontal ? 'width' : 'height';\n  },\n\n  /**\n   * `maxWidth` or `maxHeight`.\n   * @private\n   */\n  get _dimensionMax() {\n    return this.horizontal ? 'maxWidth' : 'maxHeight';\n  },\n\n  /**\n   * `max-width` or `max-height`.\n   * @private\n   */\n  get _dimensionMaxCss() {\n    return this.horizontal ? 'max-width' : 'max-height';\n  },\n\n  hostAttributes: {\n    role: 'group',\n    'aria-hidden': 'true',\n    'aria-expanded': 'false'\n  },\n\n  listeners: {\n    transitionend: '_onTransitionEnd'\n  },\n\n  /**\n   * Toggle the opened state.\n   *\n   * @method toggle\n   */\n  toggle: function toggle() {\n    this.opened = !this.opened;\n  },\n\n  show: function show() {\n    this.opened = true;\n  },\n\n  hide: function hide() {\n    this.opened = false;\n  },\n\n  /**\n   * Updates the size of the element.\n   * @param {string} size The new value for `maxWidth`/`maxHeight` as css property value, usually `auto` or `0px`.\n   * @param {boolean=} animated if `true` updates the size with an animation, otherwise without.\n   */\n  updateSize: function updateSize(size, animated) {\n    // Consider 'auto' as '', to take full size.\n    size = size === 'auto' ? '' : size;\n\n    var willAnimate = animated && !this.noAnimation && this.isAttached && this._desiredSize !== size;\n\n    this._desiredSize = size;\n\n    this._updateTransition(false);\n    // If we can animate, must do some prep work.\n    if (willAnimate) {\n      // Animation will start at the current size.\n      var startSize = this._calcSize();\n      // For `auto` we must calculate what is the final size for the animation.\n      // After the transition is done, _transitionEnd will set the size back to `auto`.\n      if (size === '') {\n        this.style[this._dimensionMax] = '';\n        size = this._calcSize();\n      }\n      // Go to startSize without animation.\n      this.style[this._dimensionMax] = startSize;\n      // Force layout to ensure transition will go. Set scrollTop to itself\n      // so that compilers won't remove it.\n      this.scrollTop = this.scrollTop;\n      // Enable animation.\n      this._updateTransition(true);\n      // If final size is the same as startSize it will not animate.\n      willAnimate = size !== startSize;\n    }\n    // Set the final size.\n    this.style[this._dimensionMax] = size;\n    // If it won't animate, call transitionEnd to set correct classes.\n    if (!willAnimate) {\n      this._transitionEnd();\n    }\n  },\n\n  /**\n   * enableTransition() is deprecated, but left over so it doesn't break existing code.\n   * Please use `noAnimation` property instead.\n   *\n   * @method enableTransition\n   * @deprecated since version 1.0.4\n   */\n  enableTransition: function enableTransition(enabled) {\n    Polymer.Base._warn('`enableTransition()` is deprecated, use `noAnimation` instead.');\n    this.noAnimation = !enabled;\n  },\n\n  _updateTransition: function _updateTransition(enabled) {\n    this.style.transitionDuration = enabled && !this.noAnimation ? '' : '0s';\n  },\n\n  _horizontalChanged: function _horizontalChanged() {\n    this.style.transitionProperty = this._dimensionMaxCss;\n    var otherDimension = this._dimensionMax === 'maxWidth' ? 'maxHeight' : 'maxWidth';\n    this.style[otherDimension] = '';\n    this.updateSize(this.opened ? 'auto' : '0px', false);\n  },\n\n  _openedChanged: function _openedChanged() {\n    this.setAttribute('aria-expanded', this.opened);\n    this.setAttribute('aria-hidden', !this.opened);\n\n    this._setTransitioning(true);\n    this.toggleClass('iron-collapse-closed', false);\n    this.toggleClass('iron-collapse-opened', false);\n    this.updateSize(this.opened ? 'auto' : '0px', true);\n\n    // Focus the current collapse.\n    if (this.opened) {\n      this.focus();\n    }\n  },\n\n  _transitionEnd: function _transitionEnd() {\n    this.style[this._dimensionMax] = this._desiredSize;\n    this.toggleClass('iron-collapse-closed', !this.opened);\n    this.toggleClass('iron-collapse-opened', this.opened);\n    this._updateTransition(false);\n    this.notifyResize();\n    this._setTransitioning(false);\n  },\n\n  _onTransitionEnd: function _onTransitionEnd(event) {\n    if (Polymer.dom(event).rootTarget === this) {\n      this._transitionEnd();\n    }\n  },\n\n  _calcSize: function _calcSize() {\n    return this.getBoundingClientRect()[this.dimension] + 'px';\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/iron-collapse/iron-collapse.html?");

/***/ }),

/***/ "./bower_components/iron-flex-layout/iron-flex-layout.html":
/*!*****************************************************************!*\
  !*** ./bower_components/iron-flex-layout/iron-flex-layout.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<style>[hidden]{display:none!important}</style>\");\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--layout:{display:-ms-flexbox;display:-webkit-flex;display:flex};--layout-inline:{display:-ms-inline-flexbox;display:-webkit-inline-flex;display:inline-flex};--layout-horizontal:{@apply --layout;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row};--layout-horizontal-reverse:{@apply --layout;-ms-flex-direction:row-reverse;-webkit-flex-direction:row-reverse;flex-direction:row-reverse};--layout-vertical:{@apply --layout;-ms-flex-direction:column;-webkit-flex-direction:column;flex-direction:column};--layout-vertical-reverse:{@apply --layout;-ms-flex-direction:column-reverse;-webkit-flex-direction:column-reverse;flex-direction:column-reverse};--layout-wrap:{-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap};--layout-wrap-reverse:{-ms-flex-wrap:wrap-reverse;-webkit-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse};--layout-flex-auto:{-ms-flex:1 1 auto;-webkit-flex:1 1 auto;flex:1 1 auto};--layout-flex-none:{-ms-flex:none;-webkit-flex:none;flex:none};--layout-flex:{-ms-flex:1 1 .000000001px;-webkit-flex:1;flex:1;-webkit-flex-basis:.000000001px;flex-basis:.000000001px};--layout-flex-2:{-ms-flex:2;-webkit-flex:2;flex:2};--layout-flex-3:{-ms-flex:3;-webkit-flex:3;flex:3};--layout-flex-4:{-ms-flex:4;-webkit-flex:4;flex:4};--layout-flex-5:{-ms-flex:5;-webkit-flex:5;flex:5};--layout-flex-6:{-ms-flex:6;-webkit-flex:6;flex:6};--layout-flex-7:{-ms-flex:7;-webkit-flex:7;flex:7};--layout-flex-8:{-ms-flex:8;-webkit-flex:8;flex:8};--layout-flex-9:{-ms-flex:9;-webkit-flex:9;flex:9};--layout-flex-10:{-ms-flex:10;-webkit-flex:10;flex:10};--layout-flex-11:{-ms-flex:11;-webkit-flex:11;flex:11};--layout-flex-12:{-ms-flex:12;-webkit-flex:12;flex:12};--layout-start:{-ms-flex-align:start;-webkit-align-items:flex-start;align-items:flex-start};--layout-center:{-ms-flex-align:center;-webkit-align-items:center;align-items:center};--layout-end:{-ms-flex-align:end;-webkit-align-items:flex-end;align-items:flex-end};--layout-baseline:{-ms-flex-align:baseline;-webkit-align-items:baseline;align-items:baseline};--layout-start-justified:{-ms-flex-pack:start;-webkit-justify-content:flex-start;justify-content:flex-start};--layout-center-justified:{-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center};--layout-end-justified:{-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end};--layout-around-justified:{-ms-flex-pack:distribute;-webkit-justify-content:space-around;justify-content:space-around};--layout-justified:{-ms-flex-pack:justify;-webkit-justify-content:space-between;justify-content:space-between};--layout-center-center:{@apply --layout-center;@apply --layout-center-justified;};--layout-self-start:{-ms-align-self:flex-start;-webkit-align-self:flex-start;align-self:flex-start};--layout-self-center:{-ms-align-self:center;-webkit-align-self:center;align-self:center};--layout-self-end:{-ms-align-self:flex-end;-webkit-align-self:flex-end;align-self:flex-end};--layout-self-stretch:{-ms-align-self:stretch;-webkit-align-self:stretch;align-self:stretch};--layout-self-baseline:{-ms-align-self:baseline;-webkit-align-self:baseline;align-self:baseline};--layout-start-aligned:{-ms-flex-line-pack:start;-ms-align-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start};--layout-end-aligned:{-ms-flex-line-pack:end;-ms-align-content:flex-end;-webkit-align-content:flex-end;align-content:flex-end};--layout-center-aligned:{-ms-flex-line-pack:center;-ms-align-content:center;-webkit-align-content:center;align-content:center};--layout-between-aligned:{-ms-flex-line-pack:justify;-ms-align-content:space-between;-webkit-align-content:space-between;align-content:space-between};--layout-around-aligned:{-ms-flex-line-pack:distribute;-ms-align-content:space-around;-webkit-align-content:space-around;align-content:space-around};--layout-block:{display:block};--layout-invisible:{visibility:hidden!important};--layout-relative:{position:relative};--layout-fit:{position:absolute;top:0;right:0;bottom:0;left:0};--layout-scroll:{-webkit-overflow-scrolling:touch;overflow:auto};--layout-fullbleed:{margin:0;height:100vh};--layout-fixed-top:{position:fixed;top:0;left:0;right:0};--layout-fixed-right:{position:fixed;top:0;right:0;bottom:0};--layout-fixed-bottom:{position:fixed;right:0;bottom:0;left:0};--layout-fixed-left:{position:fixed;top:0;bottom:0;left:0};}</style> </custom-style>\");\n\n//# sourceURL=webpack:///./bower_components/iron-flex-layout/iron-flex-layout.html?");

/***/ }),

/***/ "./bower_components/iron-icon/iron-icon.html":
/*!***************************************************!*\
  !*** ./bower_components/iron-icon/iron-icon.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-meta/iron-meta.html */ \"./bower_components/iron-meta/iron-meta.html\");\n\n__webpack_require__(/*! ../iron-flex-layout/iron-flex-layout.html */ \"./bower_components/iron-flex-layout/iron-flex-layout.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=iron-icon> <template> <style>:host{@apply --layout-inline;@apply --layout-center-center;position:relative;vertical-align:middle;fill:var(--iron-icon-fill-color,currentcolor);stroke:var(--iron-icon-stroke-color,none);width:var(--iron-icon-width,24px);height:var(--iron-icon-height,24px);@apply --iron-icon;}:host([hidden]){display:none}</style> </template> </dom-module>\");\n\nPolymer({\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {\n      type: String\n    },\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {\n      type: String\n    },\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {\n      type: String\n    },\n\n    /**\n     * @type {!Polymer.IronMeta}\n     */\n    _meta: {\n      value: Polymer.Base.create('iron-meta', { type: 'iconset' })\n    }\n\n  },\n\n  observers: ['_updateIcon(_meta, isAttached)', '_updateIcon(theme, isAttached)', '_srcChanged(src, isAttached)', '_iconChanged(icon, isAttached)'],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function _iconChanged(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function _srcChanged(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function _usesIconset() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function _updateIcon() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        Polymer.dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === \"\") {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */this._meta.byKey(this._iconsetName);\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      Polymer.dom(this.root).appendChild(this._img);\n    }\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/iron-icon/iron-icon.html?");

/***/ }),

/***/ "./bower_components/iron-icons/iron-icons.html":
/*!*****************************************************!*\
  !*** ./bower_components/iron-icons/iron-icons.html ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../iron-icon/iron-icon.html */ \"./bower_components/iron-icon/iron-icon.html\");\n\n__webpack_require__(/*! ../iron-iconset-svg/iron-iconset-svg.html */ \"./bower_components/iron-iconset-svg/iron-iconset-svg.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<iron-iconset-svg name=icons size=24> <svg><defs> <g id=3d-rotation><path d=\\\"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z\\\"></path></g> <g id=accessibility><path d=\\\"M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z\\\"></path></g> <g id=accessible><circle cx=12 cy=4 r=2></circle><path d=\\\"M19 13v-2c-1.54.02-3.09-.75-4.07-1.83l-1.29-1.43c-.17-.19-.38-.34-.61-.45-.01 0-.01-.01-.02-.01H13c-.35-.2-.75-.3-1.19-.26C10.76 7.11 10 8.04 10 9.09V15c0 1.1.9 2 2 2h5v5h2v-5.5c0-1.1-.9-2-2-2h-3v-3.45c1.29 1.07 3.25 1.94 5 1.95zm-6.17 5c-.41 1.16-1.52 2-2.83 2-1.66 0-3-1.34-3-3 0-1.31.84-2.41 2-2.83V12.1c-2.28.46-4 2.48-4 4.9 0 2.76 2.24 5 5 5 2.42 0 4.44-1.72 4.9-4h-2.07z\\\"></path></g> <g id=account-balance><path d=\\\"M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z\\\"></path></g> <g id=account-balance-wallet><path d=\\\"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\\\"></path></g> <g id=account-box><path d=\\\"M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z\\\"></path></g> <g id=account-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\\\"></path></g> <g id=add><path d=\\\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\\\"></path></g> <g id=add-alert><path d=\\\"M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zm8.87-4.19V11c0-3.25-2.25-5.97-5.29-6.69v-.72C13.59 2.71 12.88 2 12 2s-1.59.71-1.59 1.59v.72C7.37 5.03 5.12 7.75 5.12 11v5.82L3 18.94V20h18v-1.06l-2.12-2.12zM16 13.01h-3v3h-2v-3H8V11h3V8h2v3h3v2.01z\\\"></path></g> <g id=add-box><path d=\\\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\\\"></path></g> <g id=add-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\\\"></path></g> <g id=add-circle-outline><path d=\\\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></g> <g id=add-shopping-cart><path d=\\\"M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z\\\"></path></g> <g id=alarm><path d=\\\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path></g> <g id=alarm-add><path d=\\\"M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z\\\"></path></g> <g id=alarm-off><path d=\\\"M12 6c3.87 0 7 3.13 7 7 0 .84-.16 1.65-.43 2.4l1.52 1.52c.58-1.19.91-2.51.91-3.92 0-4.97-4.03-9-9-9-1.41 0-2.73.33-3.92.91L9.6 6.43C10.35 6.16 11.16 6 12 6zm10-.28l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM2.92 2.29L1.65 3.57 2.98 4.9l-1.11.93 1.42 1.42 1.11-.94.8.8C3.83 8.69 3 10.75 3 13c0 4.97 4.02 9 9 9 2.25 0 4.31-.83 5.89-2.2l2.2 2.2 1.27-1.27L3.89 3.27l-.97-.98zm13.55 16.1C15.26 19.39 13.7 20 12 20c-3.87 0-7-3.13-7-7 0-1.7.61-3.26 1.61-4.47l9.86 9.86zM8.02 3.28L6.6 1.86l-.86.71 1.42 1.42.86-.71z\\\"></path></g> <g id=alarm-on><path d=\\\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1.46-5.47L8.41 12.4l-1.06 1.06 3.18 3.18 6-6-1.06-1.06-4.93 4.95z\\\"></path></g> <g id=all-out><path d=\\\"M16.21 4.16l4 4v-4zm4 12l-4 4h4zm-12 4l-4-4v4zm-4-12l4-4h-4zm12.95-.95c-2.73-2.73-7.17-2.73-9.9 0s-2.73 7.17 0 9.9 7.17 2.73 9.9 0 2.73-7.16 0-9.9zm-1.1 8.8c-2.13 2.13-5.57 2.13-7.7 0s-2.13-5.57 0-7.7 5.57-2.13 7.7 0 2.13 5.57 0 7.7z\\\"></path></g> <g id=android><path d=\\\"M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z\\\"></path></g> <g id=announcement><path d=\\\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z\\\"></path></g> <g id=apps><path d=\\\"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\\\"></path></g> <g id=archive><path d=\\\"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z\\\"></path></g> <g id=arrow-back><path d=\\\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\\\"></path></g> <g id=arrow-downward><path d=\\\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\\\"></path></g> <g id=arrow-drop-down><path d=\\\"M7 10l5 5 5-5z\\\"></path></g> <g id=arrow-drop-down-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z\\\"></path></g> <g id=arrow-drop-up><path d=\\\"M7 14l5-5 5 5z\\\"></path></g> <g id=arrow-forward><path d=\\\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\\\"></path></g> <g id=arrow-upward><path d=\\\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\\\"></path></g> <g id=aspect-ratio><path d=\\\"M19 12h-2v3h-3v2h5v-5zM7 9h3V7H5v5h2V9zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z\\\"></path></g> <g id=assessment><path d=\\\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\\\"></path></g> <g id=assignment><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\\\"></path></g> <g id=assignment-ind><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z\\\"></path></g> <g id=assignment-late><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\\\"></path></g> <g id=assignment-return><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm4 12h-4v3l-5-5 5-5v3h4v4z\\\"></path></g> <g id=assignment-returned><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 15l-5-5h3V9h4v4h3l-5 5z\\\"></path></g> <g id=assignment-turned-in><path d=\\\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\\\"></path></g> <g id=attachment><path d=\\\"M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z\\\"></path></g> <g id=autorenew><path d=\\\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\\\"></path></g> <g id=backspace><path d=\\\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z\\\"></path></g> <g id=backup><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\\\"></path></g> <g id=block><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\\\"></path></g> <g id=book><path d=\\\"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z\\\"></path></g> <g id=bookmark><path d=\\\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\\\"></path></g> <g id=bookmark-border><path d=\\\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\\\"></path></g> <g id=bug-report><path d=\\\"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z\\\"></path></g> <g id=build><path d=\\\"M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z\\\"></path></g> <g id=cached><path d=\\\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\\\"></path></g> <g id=camera-enhance><path d=\\\"M9 3L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2h-3.17L15 3H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-1l1.25-2.75L16 13l-2.75-1.25L12 9l-1.25 2.75L8 13l2.75 1.25z\\\"></path></g> <g id=cancel><path d=\\\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\\\"></path></g> <g id=card-giftcard><path d=\\\"M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\\\"></path></g> <g id=card-membership><path d=\\\"M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2zm0 13H4v-2h16v2zm0-5H4V4h16v6z\\\"></path></g> <g id=card-travel><path d=\\\"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\\\"></path></g> <g id=change-history><path d=\\\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\\\"></path></g> <g id=check><path d=\\\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\\\"></path></g> <g id=check-box><path d=\\\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\\\"></path></g> <g id=check-box-outline-blank><path d=\\\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\\"></path></g> <g id=check-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\\\"></path></g> <g id=chevron-left><path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"></path></g> <g id=chevron-right><path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"></path></g> <g id=chrome-reader-mode><path d=\\\"M13 12h7v1.5h-7zm0-2.5h7V11h-7zm0 5h7V16h-7zM21 4H3c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 15h-9V6h9v13z\\\"></path></g> <g id=class><path d=\\\"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z\\\"></path></g> <g id=clear><path d=\\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\\"></path></g> <g id=close><path d=\\\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\\\"></path></g> <g id=cloud><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\\\"></path></g> <g id=cloud-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.5 14H8c-1.66 0-3-1.34-3-3s1.34-3 3-3l.14.01C8.58 8.28 10.13 7 12 7c2.21 0 4 1.79 4 4h.5c1.38 0 2.5 1.12 2.5 2.5S17.88 16 16.5 16z\\\"></path></g> <g id=cloud-done><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z\\\"></path></g> <g id=cloud-download><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\\\"></path></g> <g id=cloud-off><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46C10.21 6.23 11.08 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z\\\"></path></g> <g id=cloud-queue><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71C7.37 7.69 9.48 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3s-1.34 3-3 3z\\\"></path></g> <g id=cloud-upload><path d=\\\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\\\"></path></g> <g id=code><path d=\\\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\\\"></path></g> <g id=compare-arrows><path d=\\\"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\\\"></path></g> <g id=content-copy><path d=\\\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\\\"></path></g> <g id=content-cut><path d=\\\"M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z\\\"></path></g> <g id=content-paste><path d=\\\"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\\\"></path></g> <g id=copyright><path d=\\\"M10.08 10.86c.05-.33.16-.62.3-.87s.34-.46.59-.62c.24-.15.54-.22.91-.23.23.01.44.05.63.13.2.09.38.21.52.36s.25.33.34.53.13.42.14.64h1.79c-.02-.47-.11-.9-.28-1.29s-.4-.73-.7-1.01-.66-.5-1.08-.66-.88-.23-1.39-.23c-.65 0-1.22.11-1.7.34s-.88.53-1.2.92-.56.84-.71 1.36S8 11.29 8 11.87v.27c0 .58.08 1.12.23 1.64s.39.97.71 1.35.72.69 1.2.91 1.05.34 1.7.34c.47 0 .91-.08 1.32-.23s.77-.36 1.08-.63.56-.58.74-.94.29-.74.3-1.15h-1.79c-.01.21-.06.4-.15.58s-.21.33-.36.46-.32.23-.52.3c-.19.07-.39.09-.6.1-.36-.01-.66-.08-.89-.23-.25-.16-.45-.37-.59-.62s-.25-.55-.3-.88-.08-.67-.08-1v-.27c0-.35.03-.68.08-1.01zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></g> <g id=create><path d=\\\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\\\"></path></g> <g id=create-new-folder><path d=\\\"M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z\\\"></path></g> <g id=credit-card><path d=\\\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\\\"></path></g> <g id=dashboard><path d=\\\"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\\\"></path></g> <g id=date-range><path d=\\\"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\\\"></path></g> <g id=delete><path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\\\"></path></g> <g id=delete-forever><path d=\\\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\\\"></path></g> <g id=delete-sweep><path d=\\\"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z\\\"></path></g> <g id=description><path d=\\\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\\\"></path></g> <g id=dns><path d=\\\"M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\\\"></path></g> <g id=done><path d=\\\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\\\"></path></g> <g id=done-all><path d=\\\"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\\\"></path></g> <g id=donut-large><path d=\\\"M11 5.08V2c-5 .5-9 4.81-9 10s4 9.5 9 10v-3.08c-3-.48-6-3.4-6-6.92s3-6.44 6-6.92zM18.97 11H22c-.47-5-4-8.53-9-9v3.08C16 5.51 18.54 8 18.97 11zM13 18.92V22c5-.47 8.53-4 9-9h-3.03c-.43 3-2.97 5.49-5.97 5.92z\\\"></path></g> <g id=donut-small><path d=\\\"M11 9.16V2c-5 .5-9 4.79-9 10s4 9.5 9 10v-7.16c-1-.41-2-1.52-2-2.84s1-2.43 2-2.84zM14.86 11H22c-.48-4.75-4-8.53-9-9v7.16c1 .3 1.52.98 1.86 1.84zM13 14.84V22c5-.47 8.52-4.25 9-9h-7.14c-.34.86-.86 1.54-1.86 1.84z\\\"></path></g> <g id=drafts><path d=\\\"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z\\\"></path></g> <g id=eject><path d=\\\"M5 17h14v2H5zm7-12L5.33 15h13.34z\\\"></path></g> <g id=error><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\\\"></path></g> <g id=error-outline><path d=\\\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"></path></g> <g id=euro-symbol><path d=\\\"M15 18.5c-2.51 0-4.68-1.42-5.76-3.5H15v-2H8.58c-.05-.33-.08-.66-.08-1s.03-.67.08-1H15V9H9.24C10.32 6.92 12.5 5.5 15 5.5c1.61 0 3.09.59 4.23 1.57L21 5.3C19.41 3.87 17.3 3 15 3c-3.92 0-7.24 2.51-8.48 6H3v2h3.06c-.04.33-.06.66-.06 1 0 .34.02.67.06 1H3v2h3.52c1.24 3.49 4.56 6 8.48 6 2.31 0 4.41-.87 6-2.3l-1.78-1.77c-1.13.98-2.6 1.57-4.22 1.57z\\\"></path></g> <g id=event><path d=\\\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\\\"></path></g> <g id=event-seat><path d=\\\"M4 18v3h3v-3h10v3h3v-6H4zm15-8h3v3h-3zM2 10h3v3H2zm15 3H7V5c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v8z\\\"></path></g> <g id=exit-to-app><path d=\\\"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\\"></path></g> <g id=expand-less><path d=\\\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\\\"></path></g> <g id=expand-more><path d=\\\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\\\"></path></g> <g id=explore><path d=\\\"M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z\\\"></path></g> <g id=extension><path d=\\\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z\\\"></path></g> <g id=face><path d=\\\"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\\\"></path></g> <g id=favorite><path d=\\\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\\\"></path></g> <g id=favorite-border><path d=\\\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\\\"></path></g> <g id=feedback><path d=\\\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z\\\"></path></g> <g id=file-download><path d=\\\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\\\"></path></g> <g id=file-upload><path d=\\\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\\\"></path></g> <g id=filter-list><path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\"></path></g> <g id=find-in-page><path d=\\\"M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z\\\"></path></g> <g id=find-replace><path d=\\\"M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z\\\"></path></g> <g id=fingerprint><path d=\\\"M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z\\\"></path></g> <g id=first-page><path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"></path></g> <g id=flag><path d=\\\"M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z\\\"></path></g> <g id=flight-land><path d=\\\"M2.5 19h19v2h-19zm7.18-5.73l4.35 1.16 5.31 1.42c.8.21 1.62-.26 1.84-1.06.21-.8-.26-1.62-1.06-1.84l-5.31-1.42-2.76-9.02L10.12 2v8.28L5.15 8.95l-.93-2.32-1.45-.39v5.17l1.6.43 5.31 1.43z\\\"></path></g> <g id=flight-takeoff><path d=\\\"M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 1.82 3.16.77 1.33 1.6-.43 5.31-1.42 4.35-1.16L21 11.49c.81-.23 1.28-1.05 1.07-1.85z\\\"></path></g> <g id=flip-to-back><path d=\\\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8c-1.11 0-2 .9-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.89 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12c0 1.1.89 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\\\"></path></g> <g id=flip-to-front><path d=\\\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.89 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9c-1.11 0-2 .9-2 2v10c0 1.1.89 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z\\\"></path></g> <g id=folder><path d=\\\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\\\"></path></g> <g id=folder-open><path d=\\\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\\\"></path></g> <g id=folder-shared><path d=\\\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-5 3c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8h-8v-1c0-1.33 2.67-2 4-2s4 .67 4 2v1z\\\"></path></g> <g id=font-download><path d=\\\"M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z\\\"></path></g> <g id=forward><path d=\\\"M12 8V4l8 8-8 8v-4H4V8z\\\"></path></g> <g id=fullscreen><path d=\\\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\\\"></path></g> <g id=fullscreen-exit><path d=\\\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\\\"></path></g> <g id=g-translate><path d=\\\"M20 5h-9.12L10 2H4c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h7l1 3h8c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zM7.17 14.59c-2.25 0-4.09-1.83-4.09-4.09s1.83-4.09 4.09-4.09c1.04 0 1.99.37 2.74 1.07l.07.06-1.23 1.18-.06-.05c-.29-.27-.78-.59-1.52-.59-1.31 0-2.38 1.09-2.38 2.42s1.07 2.42 2.38 2.42c1.37 0 1.96-.87 2.12-1.46H7.08V9.91h3.95l.01.07c.04.21.05.4.05.61 0 2.35-1.61 4-3.92 4zm6.03-1.71c.33.6.74 1.18 1.19 1.7l-.54.53-.65-2.23zm.77-.76h-.99l-.31-1.04h3.99s-.34 1.31-1.56 2.74c-.52-.62-.89-1.23-1.13-1.7zM21 20c0 .55-.45 1-1 1h-7l2-2-.81-2.77.92-.92L17.79 18l.73-.73-2.71-2.68c.9-1.03 1.6-2.25 1.92-3.51H19v-1.04h-3.64V9h-1.04v1.04h-1.96L11.18 6H20c.55 0 1 .45 1 1v13z\\\"></path></g> <g id=gavel><path d=\\\"M1 21h12v2H1zM5.245 8.07l2.83-2.827 14.14 14.142-2.828 2.828zM12.317 1l5.657 5.656-2.83 2.83-5.654-5.66zM3.825 9.485l5.657 5.657-2.828 2.828-5.657-5.657z\\\"></path></g> <g id=gesture><path d=\\\"M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z\\\"></path></g> <g id=get-app><path d=\\\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\\\"></path></g> <g id=gif><path d=\\\"M11.5 9H13v6h-1.5zM9 9H6c-.6 0-1 .5-1 1v4c0 .5.4 1 1 1h3c.6 0 1-.5 1-1v-2H8.5v1.5h-2v-3H10V10c0-.5-.4-1-1-1zm10 1.5V9h-4.5v6H16v-2h2v-1.5h-2v-1z\\\"></path></g> <g id=grade><path d=\\\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\\\"></path></g> <g id=group-work><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\\\"></path></g> <g id=help><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\\\"></path></g> <g id=help-outline><path d=\\\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\\\"></path></g> <g id=highlight-off><path d=\\\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></g> <g id=history><path d=\\\"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\\\"></path></g> <g id=home><path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\"></path></g> <g id=hourglass-empty><path d=\\\"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z\\\"></path></g> <g id=hourglass-full><path d=\\\"M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6z\\\"></path></g> <g id=http><path d=\\\"M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5zm0 2.5h-2v-1h2v1z\\\"></path></g> <g id=https><path d=\\\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\\\"></path></g> <g id=important-devices><path d=\\\"M23 11.01L18 11c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-9c0-.55-.45-.99-1-.99zM23 20h-5v-7h5v7zM20 2H2C.89 2 0 2.89 0 4v12c0 1.1.89 2 2 2h7v2H7v2h8v-2h-2v-2h2v-2H2V4h18v5h2V4c0-1.11-.9-2-2-2zm-8.03 7L11 6l-.97 3H7l2.47 1.76-.94 2.91 2.47-1.8 2.47 1.8-.94-2.91L15 9h-3.03z\\\"></path></g> <g id=inbox><path d=\\\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\\\"></path></g> <g id=indeterminate-check-box><path d=\\\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\\\"></path></g> <g id=info><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\\\"></path></g> <g id=info-outline><path d=\\\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\\\"></path></g> <g id=input><path d=\\\"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\\\"></path></g> <g id=invert-colors><path d=\\\"M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31C7.9 20.8 9.95 21.58 12 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z\\\"></path></g> <g id=label><path d=\\\"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z\\\"></path></g> <g id=label-outline><path d=\\\"M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z\\\"></path></g> <g id=language><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z\\\"></path></g> <g id=last-page><path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"></path></g> <g id=launch><path d=\\\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\\\"></path></g> <g id=lightbulb-outline><path d=\\\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\\\"></path></g> <g id=line-style><path d=\\\"M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z\\\"></path></g> <g id=line-weight><path d=\\\"M3 17h18v-2H3v2zm0 3h18v-1H3v1zm0-7h18v-3H3v3zm0-9v4h18V4H3z\\\"></path></g> <g id=link><path d=\\\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\\\"></path></g> <g id=list><path d=\\\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\\\"></path></g> <g id=lock><path d=\\\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\\\"></path></g> <g id=lock-open><path d=\\\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\\\"></path></g> <g id=lock-outline><path d=\\\"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z\\\"></path></g> <g id=low-priority><path d=\\\"M14 5h8v2h-8zm0 5.5h8v2h-8zm0 5.5h8v2h-8zM2 11.5C2 15.08 4.92 18 8.5 18H9v2l3-3-3-3v2h-.5C6.02 16 4 13.98 4 11.5S6.02 7 8.5 7H12V5H8.5C4.92 5 2 7.92 2 11.5z\\\"></path></g> <g id=loyalty><path d=\\\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7zm11.77 8.27L13 19.54l-4.27-4.27C8.28 14.81 8 14.19 8 13.5c0-1.38 1.12-2.5 2.5-2.5.69 0 1.32.28 1.77.74l.73.72.73-.73c.45-.45 1.08-.73 1.77-.73 1.38 0 2.5 1.12 2.5 2.5 0 .69-.28 1.32-.73 1.77z\\\"></path></g> <g id=mail><path d=\\\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\\\"></path></g> <g id=markunread><path d=\\\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\\\"></path></g> <g id=markunread-mailbox><path d=\\\"M20 6H10v6H8V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z\\\"></path></g> <g id=menu><path d=\\\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\\\"></path></g> <g id=more-horiz><path d=\\\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\\\"></path></g> <g id=more-vert><path d=\\\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\\\"></path></g> <g id=motorcycle><path d=\\\"M19.44 9.03L15.41 5H11v2h3.59l2 2H5c-2.8 0-5 2.2-5 5s2.2 5 5 5c2.46 0 4.45-1.69 4.9-4h1.65l2.77-2.77c-.21.54-.32 1.14-.32 1.77 0 2.8 2.2 5 5 5s5-2.2 5-5c0-2.65-1.97-4.77-4.56-4.97zM7.82 15C7.4 16.15 6.28 17 5 17c-1.63 0-3-1.37-3-3s1.37-3 3-3c1.28 0 2.4.85 2.82 2H5v2h2.82zM19 17c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\\\"></path></g> <g id=move-to-inbox><path d=\\\"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z\\\"></path></g> <g id=next-week><path d=\\\"M20 7h-4V5c0-.55-.22-1.05-.59-1.41C15.05 3.22 14.55 3 14 3h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zm1 13.5l-1-1 3-3-3-3 1-1 4 4-4 4z\\\"></path></g> <g id=note-add><path d=\\\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z\\\"></path></g> <g id=offline-pin><path d=\\\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z\\\"></path></g> <g id=opacity><path d=\\\"M17.66 8L12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8zM6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14H6z\\\"></path></g> <g id=open-in-browser><path d=\\\"M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z\\\"></path></g> <g id=open-in-new><path d=\\\"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\\\"></path></g> <g id=open-with><path d=\\\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\\\"></path></g> <g id=pageview><path d=\\\"M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z\\\"></path></g> <g id=pan-tool><path d=\\\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\\\"></path></g> <g id=payment><path d=\\\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\\\"></path></g> <g id=perm-camera-mic><path d=\\\"M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2.09c-2.83-.48-5-2.94-5-5.91h2c0 2.21 1.79 4 4 4s4-1.79 4-4h2c0 2.97-2.17 5.43-5 5.91V21h7c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-6 8c0 1.1-.9 2-2 2s-2-.9-2-2V9c0-1.1.9-2 2-2s2 .9 2 2v4z\\\"></path></g> <g id=perm-contact-calendar><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1z\\\"></path></g> <g id=perm-data-setting><path d=\\\"M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\\\"></path></g> <g id=perm-device-information><path d=\\\"M13 7h-2v2h2V7zm0 4h-2v6h2v-6zm4-9.99L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z\\\"></path></g> <g id=perm-identity><path d=\\\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\\\"></path></g> <g id=perm-media><path d=\\\"M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z\\\"></path></g> <g id=perm-phone-msg><path d=\\\"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM12 3v10l3-3h6V3h-9z\\\"></path></g> <g id=perm-scan-wifi><path d=\\\"M12 3C6.95 3 3.15 4.85 0 7.23L12 22 24 7.25C20.85 4.87 17.05 3 12 3zm1 13h-2v-6h2v6zm-2-8V6h2v2h-2z\\\"></path></g> <g id=pets><circle cx=4.5 cy=9.5 r=2.5></circle><circle cx=9 cy=5.5 r=2.5></circle><circle cx=15 cy=5.5 r=2.5></circle><circle cx=19.5 cy=9.5 r=2.5></circle><path d=\\\"M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8z\\\"></path></g> <g id=picture-in-picture><path d=\\\"M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z\\\"></path></g> <g id=picture-in-picture-alt><path d=\\\"M19 11h-8v6h8v-6zm4 8V4.98C23 3.88 22.1 3 21 3H3c-1.1 0-2 .88-2 1.98V19c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H3V4.97h18v14.05z\\\"></path></g> <g id=play-for-work><path d=\\\"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\\\"></path></g> <g id=polymer><path d=\\\"M19 4h-4L7.11 16.63 4.5 12 9 4H5L.5 12 5 20h4l7.89-12.63L19.5 12 15 20h4l4.5-8z\\\"></path></g> <g id=power-settings-new><path d=\\\"M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\\\"></path></g> <g id=pregnant-woman><path d=\\\"M9 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm7 9c-.01-1.34-.83-2.51-2-3 0-1.66-1.34-3-3-3s-3 1.34-3 3v7h2v5h3v-5h3v-4z\\\"></path></g> <g id=print><path d=\\\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\\\"></path></g> <g id=query-builder><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\\\"></path></g> <g id=question-answer><path d=\\\"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z\\\"></path></g> <g id=radio-button-checked><path d=\\\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"></path></g> <g id=radio-button-unchecked><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"></path></g> <g id=receipt><path d=\\\"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z\\\"></path></g> <g id=record-voice-over><circle cx=9 cy=9 r=4></circle><path d=\\\"M9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z\\\"></path></g> <g id=redeem><path d=\\\"M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\\\"></path></g> <g id=redo><path d=\\\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\\\"></path></g> <g id=refresh><path d=\\\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\\\"></path></g> <g id=remove><path d=\\\"M19 13H5v-2h14v2z\\\"></path></g> <g id=remove-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\\\"></path></g> <g id=remove-circle-outline><path d=\\\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"></path></g> <g id=remove-shopping-cart><path d=\\\"M22.73 22.73L2.77 2.77 2 2l-.73-.73L0 2.54l4.39 4.39 2.21 4.66-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h7.46l1.38 1.38c-.5.36-.83.95-.83 1.62 0 1.1.89 2 1.99 2 .67 0 1.26-.33 1.62-.84L21.46 24l1.27-1.27zM7.42 15c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h2.36l2 2H7.42zm8.13-2c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H6.54l9.01 9zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2z\\\"></path></g> <g id=reorder><path d=\\\"M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z\\\"></path></g> <g id=reply><path d=\\\"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\\\"></path></g> <g id=reply-all><path d=\\\"M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\\\"></path></g> <g id=report><path d=\\\"M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z\\\"></path></g> <g id=report-problem><path d=\\\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\\\"></path></g> <g id=restore><path d=\\\"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\\\"></path></g> <g id=restore-page><path d=\\\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm-2 16c-2.05 0-3.81-1.24-4.58-3h1.71c.63.9 1.68 1.5 2.87 1.5 1.93 0 3.5-1.57 3.5-3.5S13.93 9.5 12 9.5c-1.35 0-2.52.78-3.1 1.9l1.6 1.6h-4V9l1.3 1.3C8.69 8.92 10.23 8 12 8c2.76 0 5 2.24 5 5s-2.24 5-5 5z\\\"></path></g> <g id=room><path d=\\\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\\\"></path></g> <g id=rounded-corner><path d=\\\"M19 19h2v2h-2v-2zm0-2h2v-2h-2v2zM3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm0-4h2V3H3v2zm4 0h2V3H7v2zm8 16h2v-2h-2v2zm-4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm-8 0h2v-2H7v2zm-4 0h2v-2H3v2zM21 8c0-2.76-2.24-5-5-5h-5v2h5c1.65 0 3 1.35 3 3v5h2V8z\\\"></path></g> <g id=rowing><path d=\\\"M8.5 14.5L4 19l1.5 1.5L9 17h2l-2.5-2.5zM15 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 20.01L18 24l-2.99-3.01V19.5l-7.1-7.09c-.31.05-.61.07-.91.07v-2.16c1.66.03 3.61-.87 4.67-2.04l1.4-1.55c.19-.21.43-.38.69-.5.29-.14.62-.23.96-.23h.03C15.99 6.01 17 7.02 17 8.26v5.75c0 .84-.35 1.61-.92 2.16l-3.58-3.58v-2.27c-.63.52-1.43 1.02-2.29 1.39L16.5 18H18l3 3.01z\\\"></path></g> <g id=save><path d=\\\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\\\"></path></g> <g id=schedule><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\\\"></path></g> <g id=search><path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"></path></g> <g id=select-all><path d=\\\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z\\\"></path></g> <g id=send><path d=\\\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\\\"></path></g> <g id=settings><path d=\\\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\\\"></path></g> <g id=settings-applications><path d=\\\"M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-1.75 9c0 .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4 2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26 1.85c-.03.17-.18.3-.35.3h-2.8c-.17 0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34 0-.43-.15l-1.4-2.42c-.09-.15-.05-.34.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69 0-.23.02-.46.05-.68l-1.48-1.16c-.13-.11-.17-.3-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51 1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26 1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z\\\"></path></g> <g id=settings-backup-restore><path d=\\\"M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z\\\"></path></g> <g id=settings-bluetooth><path d=\\\"M11 24h2v-2h-2v2zm-4 0h2v-2H7v2zm8 0h2v-2h-2v2zm2.71-18.29L12 0h-1v7.59L6.41 3 5 4.41 10.59 10 5 15.59 6.41 17 11 12.41V20h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 3.83l1.88 1.88L13 7.59V3.83zm1.88 10.46L13 16.17v-3.76l1.88 1.88z\\\"></path></g> <g id=settings-brightness><path d=\\\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02zM8 16h2.5l1.5 1.5 1.5-1.5H16v-2.5l1.5-1.5-1.5-1.5V8h-2.5L12 6.5 10.5 8H8v2.5L6.5 12 8 13.5V16zm4-7c1.66 0 3 1.34 3 3s-1.34 3-3 3V9z\\\"></path></g> <g id=settings-cell><path d=\\\"M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM16 .01L8 0C6.9 0 6 .9 6 2v16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V2c0-1.1-.9-1.99-2-1.99zM16 16H8V4h8v12z\\\"></path></g> <g id=settings-ethernet><path d=\\\"M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z\\\"></path></g> <g id=settings-input-antenna><path d=\\\"M12 5c-3.87 0-7 3.13-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.87-3.13-7-7-7zm1 9.29c.88-.39 1.5-1.26 1.5-2.29 0-1.38-1.12-2.5-2.5-2.5S9.5 10.62 9.5 12c0 1.02.62 1.9 1.5 2.29v3.3L7.59 21 9 22.41l3-3 3 3L16.41 21 13 17.59v-3.3zM12 1C5.93 1 1 5.93 1 12h2c0-4.97 4.03-9 9-9s9 4.03 9 9h2c0-6.07-4.93-11-11-11z\\\"></path></g> <g id=settings-input-component><path d=\\\"M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z\\\"></path></g> <g id=settings-input-composite><path d=\\\"M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z\\\"></path></g> <g id=settings-input-hdmi><path d=\\\"M18 7V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v3H5v6l3 6v3h8v-3l3-6V7h-1zM8 4h8v3h-2V5h-1v2h-2V5h-1v2H8V4z\\\"></path></g> <g id=settings-input-svideo><path d=\\\"M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\\\"></path></g> <g id=settings-overscan><path d=\\\"M12.01 5.5L10 8h4l-1.99-2.5zM18 10v4l2.5-1.99L18 10zM6 10l-2.5 2.01L6 14v-4zm8 6h-4l2.01 2.5L14 16zm7-13H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z\\\"></path></g> <g id=settings-phone><path d=\\\"M13 9h-2v2h2V9zm4 0h-2v2h2V9zm3 6.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 9v2h2V9h-2z\\\"></path></g> <g id=settings-power><path d=\\\"M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z\\\"></path></g> <g id=settings-remote><path d=\\\"M15 9H9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V10c0-.55-.45-1-1-1zm-3 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM7.05 6.05l1.41 1.41C9.37 6.56 10.62 6 12 6s2.63.56 3.54 1.46l1.41-1.41C15.68 4.78 13.93 4 12 4s-3.68.78-4.95 2.05zM12 0C8.96 0 6.21 1.23 4.22 3.22l1.41 1.41C7.26 3.01 9.51 2 12 2s4.74 1.01 6.36 2.64l1.41-1.41C17.79 1.23 15.04 0 12 0z\\\"></path></g> <g id=settings-voice><path d=\\\"M7 24h2v-2H7v2zm5-11c1.66 0 2.99-1.34 2.99-3L15 4c0-1.66-1.34-3-3-3S9 2.34 9 4v6c0 1.66 1.34 3 3 3zm-1 11h2v-2h-2v2zm4 0h2v-2h-2v2zm4-14h-1.7c0 3-2.54 5.1-5.3 5.1S6.7 13 6.7 10H5c0 3.41 2.72 6.23 6 6.72V20h2v-3.28c3.28-.49 6-3.31 6-6.72z\\\"></path></g> <g id=shop><path d=\\\"M16 6V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H2v13c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6h-6zm-6-2h4v2h-4V4zM9 18V9l7.5 4L9 18z\\\"></path></g> <g id=shop-two><path d=\\\"M3 9H1v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2H3V9zm15-4V3c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H5v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2V5h-5zm-6-2h4v2h-4V3zm0 12V8l5.5 3-5.5 4z\\\"></path></g> <g id=shopping-basket><path d=\\\"M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\\\"></path></g> <g id=shopping-cart><path d=\\\"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\\\"></path></g> <g id=sort><path d=\\\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\\\"></path></g> <g id=speaker-notes><path d=\\\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 14H6v-2h2v2zm0-3H6V9h2v2zm0-3H6V6h2v2zm7 6h-5v-2h5v2zm3-3h-8V9h8v2zm0-3h-8V6h8v2z\\\"></path></g> <g id=speaker-notes-off><path d=\\\"M10.54 11l-.54-.54L7.54 8 6 6.46 2.38 2.84 1.27 1.73 0 3l2.01 2.01L2 22l4-4h9l5.73 5.73L22 22.46 17.54 18l-7-7zM8 14H6v-2h2v2zm-2-3V9l2 2H6zm14-9H4.08L10 7.92V6h8v2h-7.92l1 1H18v2h-4.92l6.99 6.99C21.14 17.95 22 17.08 22 16V4c0-1.1-.9-2-2-2z\\\"></path></g> <g id=spellcheck><path d=\\\"M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z\\\"></path></g> <g id=star><path d=\\\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\\\"></path></g> <g id=star-border><path d=\\\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\\\"></path></g> <g id=star-half><path d=\\\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\\\"></path></g> <g id=stars><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z\\\"></path></g> <g id=store><path d=\\\"M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z\\\"></path></g> <g id=subdirectory-arrow-left><path d=\\\"M11 9l1.42 1.42L8.83 14H18V4h2v12H8.83l3.59 3.58L11 21l-6-6 6-6z\\\"></path></g> <g id=subdirectory-arrow-right><path d=\\\"M19 15l-6 6-1.42-1.42L15.17 16H4V4h2v10h9.17l-3.59-3.58L13 9l6 6z\\\"></path></g> <g id=subject><path d=\\\"M14 17H4v2h10v-2zm6-8H4v2h16V9zM4 15h16v-2H4v2zM4 5v2h16V5H4z\\\"></path></g> <g id=supervisor-account><path d=\\\"M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z\\\"></path></g> <g id=swap-horiz><path d=\\\"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\\\"></path></g> <g id=swap-vert><path d=\\\"M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z\\\"></path></g> <g id=swap-vertical-circle><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z\\\"></path></g> <g id=system-update-alt><path d=\\\"M12 16.5l4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z\\\"></path></g> <g id=tab><path d=\\\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z\\\"></path></g> <g id=tab-unselected><path d=\\\"M1 9h2V7H1v2zm0 4h2v-2H1v2zm0-8h2V3c-1.1 0-2 .9-2 2zm8 16h2v-2H9v2zm-8-4h2v-2H1v2zm2 4v-2H1c0 1.1.9 2 2 2zM21 3h-8v6h10V5c0-1.1-.9-2-2-2zm0 14h2v-2h-2v2zM9 5h2V3H9v2zM5 21h2v-2H5v2zM5 5h2V3H5v2zm16 16c1.1 0 2-.9 2-2h-2v2zm0-8h2v-2h-2v2zm-8 8h2v-2h-2v2zm4 0h2v-2h-2v2z\\\"></path></g> <g id=text-format><path d=\\\"M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z\\\"></path></g> <g id=theaters><path d=\\\"M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z\\\"></path></g> <g id=thumb-down><path d=\\\"M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z\\\"></path></g> <g id=thumb-up><path d=\\\"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z\\\"></path></g> <g id=thumbs-up-down><path d=\\\"M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm10.5 4h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5z\\\"></path></g> <g id=timeline><path d=\\\"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z\\\"></path></g> <g id=toc><path d=\\\"M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z\\\"></path></g> <g id=today><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"></path></g> <g id=toll><path d=\\\"M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zM3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z\\\"></path></g> <g id=touch-app><path d=\\\"M9 11.24V7.5C9 6.12 10.12 5 11.5 5S14 6.12 14 7.5v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z\\\"></path></g> <g id=track-changes><path d=\\\"M19.07 4.93l-1.41 1.41C19.1 7.79 20 9.79 20 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z\\\"></path></g> <g id=translate><path d=\\\"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z\\\"></path></g> <g id=trending-down><path d=\\\"M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\\\"></path></g> <g id=trending-flat><path d=\\\"M22 12l-4-4v3H3v2h15v3z\\\"></path></g> <g id=trending-up><path d=\\\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\\\"></path></g> <g id=turned-in><path d=\\\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z\\\"></path></g> <g id=turned-in-not><path d=\\\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\\\"></path></g> <g id=unarchive><path d=\\\"M20.55 5.22l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.15.55L3.46 5.22C3.17 5.57 3 6.01 3 6.5V19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.49-.17-.93-.45-1.28zM12 9.5l5.5 5.5H14v2h-4v-2H6.5L12 9.5zM5.12 5l.82-1h12l.93 1H5.12z\\\"></path></g> <g id=undo><path d=\\\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\\\"></path></g> <g id=unfold-less><path d=\\\"M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z\\\"></path></g> <g id=unfold-more><path d=\\\"M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z\\\"></path></g> <g id=update><path d=\\\"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79 2.73 2.71 7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58 3.51-3.47 9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\\\"></path></g> <g id=verified-user><path d=\\\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\\\"></path></g> <g id=view-agenda><path d=\\\"M20 13H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm0-10H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z\\\"></path></g> <g id=view-array><path d=\\\"M4 18h3V5H4v13zM18 5v13h3V5h-3zM8 18h9V5H8v13z\\\"></path></g> <g id=view-carousel><path d=\\\"M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z\\\"></path></g> <g id=view-column><path d=\\\"M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z\\\"></path></g> <g id=view-day><path d=\\\"M2 21h19v-3H2v3zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 3v3h19V3H2z\\\"></path></g> <g id=view-headline><path d=\\\"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\\\"></path></g> <g id=view-list><path d=\\\"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\\\"></path></g> <g id=view-module><path d=\\\"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\\\"></path></g> <g id=view-quilt><path d=\\\"M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z\\\"></path></g> <g id=view-stream><path d=\\\"M4 18h17v-6H4v6zM4 5v6h17V5H4z\\\"></path></g> <g id=view-week><path d=\\\"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\\\"></path></g> <g id=visibility><path d=\\\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\\\"></path></g> <g id=visibility-off><path d=\\\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\\\"></path></g> <g id=warning><path d=\\\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\\\"></path></g> <g id=watch-later><path d=\\\"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3z\\\"></path></g> <g id=weekend><path d=\\\"M21 10c-1.1 0-2 .9-2 2v3H5v-3c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2zm-3-5H6c-1.1 0-2 .9-2 2v2.15c1.16.41 2 1.51 2 2.82V14h12v-2.03c0-1.3.84-2.4 2-2.82V7c0-1.1-.9-2-2-2z\\\"></path></g> <g id=work><path d=\\\"M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z\\\"></path></g> <g id=youtube-searched-for><path d=\\\"M17.01 14h-.8l-.27-.27c.98-1.14 1.57-2.61 1.57-4.23 0-3.59-2.91-6.5-6.5-6.5s-6.5 3-6.5 6.5H2l3.84 4 4.16-4H6.51C6.51 7 8.53 5 11.01 5s4.5 2.01 4.5 4.5c0 2.48-2.02 4.5-4.5 4.5-.65 0-1.26-.14-1.82-.38L7.71 15.1c.97.57 2.09.9 3.3.9 1.61 0 3.08-.59 4.22-1.57l.27.27v.79l5.01 4.99L22 19l-4.99-5z\\\"></path></g> <g id=zoom-in><path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zm2.5-4h-2v2H9v-2H7V9h2V7h1v2h2v1z\\\"></path></g> <g id=zoom-out><path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\\\"></path></g> </defs></svg> </iron-iconset-svg>\");\n\n//# sourceURL=webpack:///./bower_components/iron-icons/iron-icons.html?");

/***/ }),

/***/ "./bower_components/iron-icons/social-icons.html":
/*!*******************************************************!*\
  !*** ./bower_components/iron-icons/social-icons.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../iron-icon/iron-icon.html */ \"./bower_components/iron-icon/iron-icon.html\");\n\n__webpack_require__(/*! ../iron-iconset-svg/iron-iconset-svg.html */ \"./bower_components/iron-iconset-svg/iron-iconset-svg.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<iron-iconset-svg name=social size=24> <svg><defs> <g id=cake><path d=\\\"M12 6c1.11 0 2-.9 2-2 0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm4.6 9.99l-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01zM18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9z\\\"></path></g> <g id=domain><path d=\\\"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\\\"></path></g> <g id=group><path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\"></path></g> <g id=group-add><path d=\\\"M8 10H5V7H3v3H0v2h3v3h2v-3h3v-2zm10 1c1.66 0 2.99-1.34 2.99-3S19.66 5 18 5c-.32 0-.63.05-.91.14.57.81.9 1.79.9 2.86s-.34 2.04-.9 2.86c.28.09.59.14.91.14zm-5 0c1.66 0 2.99-1.34 2.99-3S14.66 5 13 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm6.62 2.16c.83.73 1.38 1.66 1.38 2.84v2h3v-2c0-1.54-2.37-2.49-4.38-2.84zM13 13c-2 0-6 1-6 3v2h12v-2c0-2-4-3-6-3z\\\"></path></g> <g id=location-city><path d=\\\"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\"></path></g> <g id=mood><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\\\"></path></g> <g id=mood-bad><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 3c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z\\\"></path></g> <g id=notifications><path d=\\\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\\\"></path></g> <g id=notifications-active><path d=\\\"M7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42zM18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2v-5zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2z\\\"></path></g> <g id=notifications-none><path d=\\\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\\\"></path></g> <g id=notifications-off><path d=\\\"M20 18.69L7.84 6.14 5.27 3.49 4 4.76l2.8 2.8v.01c-.52.99-.8 2.16-.8 3.42v5l-2 2v1h13.73l2 2L21 19.72l-1-1.03zM12 22c1.11 0 2-.89 2-2h-4c0 1.11.89 2 2 2zm6-7.32V11c0-3.08-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.15.03-.29.08-.42.12-.1.03-.2.07-.3.11h-.01c-.01 0-.01 0-.02.01-.23.09-.46.2-.68.31 0 0-.01 0-.01.01L18 14.68z\\\"></path></g> <g id=notifications-paused><path d=\\\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.93 6 11v5l-2 2v1h16v-1l-2-2zm-3.5-6.2l-2.8 3.4h2.8V15h-5v-1.8l2.8-3.4H9.5V8h5v1.8z\\\"></path></g> <g id=pages><path d=\\\"M3 5v6h5L7 7l4 1V3H5c-1.1 0-2 .9-2 2zm5 8H3v6c0 1.1.9 2 2 2h6v-5l-4 1 1-4zm9 4l-4-1v5h6c1.1 0 2-.9 2-2v-6h-5l1 4zm2-14h-6v5l4-1-1 4h5V5c0-1.1-.9-2-2-2z\\\"></path></g> <g id=party-mode><path d=\\\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 3c1.63 0 3.06.79 3.98 2H12c-1.66 0-3 1.34-3 3 0 .35.07.69.18 1H7.1c-.06-.32-.1-.66-.1-1 0-2.76 2.24-5 5-5zm0 10c-1.63 0-3.06-.79-3.98-2H12c1.66 0 3-1.34 3-3 0-.35-.07-.69-.18-1h2.08c.07.32.1.66.1 1 0 2.76-2.24 5-5 5z\\\"></path></g> <g id=people><path d=\\\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\\\"></path></g> <g id=people-outline><path d=\\\"M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z\\\"></path></g> <g id=person><path d=\\\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\\\"></path></g> <g id=person-add><path d=\\\"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\\\"></path></g> <g id=person-outline><path d=\\\"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\\\"></path></g> <g id=plus-one><path d=\\\"M10 8H8v4H4v2h4v4h2v-4h4v-2h-4zm4.5-1.92V7.9l2.5-.5V18h2V5z\\\"></path></g> <g id=poll><path d=\\\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\\\"></path></g> <g id=public><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\\\"></path></g> <g id=school><path d=\\\"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z\\\"></path></g> <g id=sentiment-dissatisfied><circle cx=15.5 cy=9.5 r=1.5></circle><circle cx=8.5 cy=9.5 r=1.5></circle><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z\\\"></path></g> <g id=sentiment-neutral><path d=\\\"M9 14h6v1.5H9z\\\"></path><circle cx=15.5 cy=9.5 r=1.5></circle><circle cx=8.5 cy=9.5 r=1.5></circle><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"></path></g> <g id=sentiment-satisfied><circle cx=15.5 cy=9.5 r=1.5></circle><circle cx=8.5 cy=9.5 r=1.5></circle><path d=\\\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-4c-1.48 0-2.75-.81-3.45-2H6.88c.8 2.05 2.79 3.5 5.12 3.5s4.32-1.45 5.12-3.5h-1.67c-.7 1.19-1.97 2-3.45 2z\\\"></path></g> <g id=sentiment-very-dissatisfied><path d=\\\"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4.18-12.24l-1.06 1.06-1.06-1.06L13 8.82l1.06 1.06L13 10.94 14.06 12l1.06-1.06L16.18 12l1.06-1.06-1.06-1.06 1.06-1.06zM7.82 12l1.06-1.06L9.94 12 11 10.94 9.94 9.88 11 8.82 9.94 7.76 8.88 8.82 7.82 7.76 6.76 8.82l1.06 1.06-1.06 1.06zM12 14c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z\\\"></path></g> <g id=sentiment-very-satisfied><path d=\\\"M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-10.06L14.06 11l1.06-1.06L16.18 11l1.06-1.06-2.12-2.12zm-4.12 0L9.94 11 11 9.94 8.88 7.82 6.76 9.94 7.82 11zM12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\\\"></path></g> <g id=share><path d=\\\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\\\"></path></g> <g id=whatshot><path d=\\\"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z\\\"></path></g> </defs></svg> </iron-iconset-svg>\");\n\n//# sourceURL=webpack:///./bower_components/iron-icons/social-icons.html?");

/***/ }),

/***/ "./bower_components/iron-iconset-svg/iron-iconset-svg.html":
/*!*****************************************************************!*\
  !*** ./bower_components/iron-iconset-svg/iron-iconset-svg.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-meta/iron-meta.html */ \"./bower_components/iron-meta/iron-meta.html\");\n\n/**\n * The `iron-iconset-svg` element allows users to define their own icon sets\n * that contain svg icons. The svg icon elements should be children of the\n * `iron-iconset-svg` element. Multiple icons should be given distinct id's.\n *\n * Using svg elements to create icons has a few advantages over traditional\n * bitmap graphics like jpg or png. Icons that use svg are vector based so\n * they are resolution independent and should look good on any device. They\n * are stylable via css. Icons can be themed, colorized, and even animated.\n *\n * Example:\n *\n *     <iron-iconset-svg name=\"my-svg-icons\" size=\"24\">\n *       <svg>\n *         <defs>\n *           <g id=\"shape\">\n *             <rect x=\"12\" y=\"0\" width=\"12\" height=\"24\" />\n *             <circle cx=\"12\" cy=\"12\" r=\"12\" />\n *           </g>\n *         </defs>\n *       </svg>\n *     </iron-iconset-svg>\n *\n * This will automatically register the icon set \"my-svg-icons\" to the iconset\n * database.  To use these icons from within another element, make a\n * `iron-iconset` element and call the `byId` method\n * to retrieve a given iconset. To apply a particular icon inside an\n * element use the `applyIcon` method. For example:\n *\n *     iconset.applyIcon(iconNode, 'car');\n *\n * @element iron-iconset-svg\n * @demo demo/index.html\n * @implements {Polymer.Iconset}\n */\nPolymer({\n  is: 'iron-iconset-svg',\n\n  properties: {\n\n    /**\n     * The name of the iconset.\n     */\n    name: {\n      type: String,\n      observer: '_nameChanged'\n    },\n\n    /**\n     * The size of an individual icon. Note that icons must be square.\n     */\n    size: {\n      type: Number,\n      value: 24\n    },\n\n    /**\n     * Set to true to enable mirroring of icons where specified when they are\n     * stamped. Icons that should be mirrored should be decorated with a\n     * `mirror-in-rtl` attribute.\n     *\n     * NOTE: For performance reasons, direction will be resolved once per\n     * document per iconset, so moving icons in and out of RTL subtrees will\n     * not cause their mirrored state to change.\n     */\n    rtlMirroring: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Set to true to measure RTL based on the dir attribute on the body or\n     * html elements (measured on document.body or document.documentElement as\n     * available).\n     */\n    useGlobalRtlAttribute: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  created: function created() {\n    this._meta = new Polymer.IronMeta({ type: 'iconset', key: null, value: null });\n  },\n\n  attached: function attached() {\n    this.style.display = 'none';\n  },\n\n  /**\n   * Construct an array of all icon names in this iconset.\n   *\n   * @return {!Array} Array of icon names.\n   */\n  getIconNames: function getIconNames() {\n    this._icons = this._createIconMap();\n    return Object.keys(this._icons).map(function (n) {\n      return this.name + ':' + n;\n    }, this);\n  },\n\n  /**\n   * Applies an icon to the given element.\n   *\n   * An svg icon is prepended to the element's shadowRoot if it exists,\n   * otherwise to the element itself.\n   *\n   * If RTL mirroring is enabled, and the icon is marked to be mirrored in\n   * RTL, the element will be tested (once and only once ever for each\n   * iconset) to determine the direction of the subtree the element is in.\n   * This direction will apply to all future icon applications, although only\n   * icons marked to be mirrored will be affected.\n   *\n   * @method applyIcon\n   * @param {Element} element Element to which the icon is applied.\n   * @param {string} iconName Name of the icon to apply.\n   * @return {?Element} The svg element which renders the icon.\n   */\n  applyIcon: function applyIcon(element, iconName) {\n    // Remove old svg element\n    this.removeIcon(element);\n    // install new svg element\n    var svg = this._cloneIcon(iconName, this.rtlMirroring && this._targetIsRTL(element));\n    if (svg) {\n      // insert svg element into shadow root, if it exists\n      var pde = Polymer.dom(element.root || element);\n      pde.insertBefore(svg, pde.childNodes[0]);\n      return element._svgIcon = svg;\n    }\n    return null;\n  },\n\n  /**\n   * Remove an icon from the given element by undoing the changes effected\n   * by `applyIcon`.\n   *\n   * @param {Element} element The element from which the icon is removed.\n   */\n  removeIcon: function removeIcon(element) {\n    // Remove old svg element\n    if (element._svgIcon) {\n      Polymer.dom(element.root || element).removeChild(element._svgIcon);\n      element._svgIcon = null;\n    }\n  },\n\n  /**\n   * Measures and memoizes the direction of the element. Note that this\n   * measurement is only done once and the result is memoized for future\n   * invocations.\n   */\n  _targetIsRTL: function _targetIsRTL(target) {\n    if (this.__targetIsRTL == null) {\n      if (this.useGlobalRtlAttribute) {\n        var globalElement = document.body && document.body.hasAttribute('dir') ? document.body : document.documentElement;\n\n        this.__targetIsRTL = globalElement.getAttribute('dir') === 'rtl';\n      } else {\n        if (target && target.nodeType !== Node.ELEMENT_NODE) {\n          target = target.host;\n        }\n\n        this.__targetIsRTL = target && window.getComputedStyle(target)['direction'] === 'rtl';\n      }\n    }\n\n    return this.__targetIsRTL;\n  },\n\n  /**\n   *\n   * When name is changed, register iconset metadata\n   *\n   */\n  _nameChanged: function _nameChanged() {\n    this._meta.value = null;\n    this._meta.key = this.name;\n    this._meta.value = this;\n\n    this.async(function () {\n      this.fire('iron-iconset-added', this, { node: window });\n    });\n  },\n\n  /**\n   * Create a map of child SVG elements by id.\n   *\n   * @return {!Object} Map of id's to SVG elements.\n   */\n  _createIconMap: function _createIconMap() {\n    // Objects chained to Object.prototype (`{}`) have members. Specifically,\n    // on FF there is a `watch` method that confuses the icon map, so we\n    // need to use a null-based object here.\n    var icons = Object.create(null);\n    Polymer.dom(this).querySelectorAll('[id]').forEach(function (icon) {\n      icons[icon.id] = icon;\n    });\n    return icons;\n  },\n\n  /**\n   * Produce installable clone of the SVG element matching `id` in this\n   * iconset, or `undefined` if there is no matching element.\n   *\n   * @return {Element} Returns an installable clone of the SVG element\n   * matching `id`.\n   */\n  _cloneIcon: function _cloneIcon(id, mirrorAllowed) {\n    // create the icon map on-demand, since the iconset itself has no discrete\n    // signal to know when it's children are fully parsed\n    this._icons = this._icons || this._createIconMap();\n    return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);\n  },\n\n  /**\n   * @param {Element} sourceSvg\n   * @param {number} size\n   * @param {Boolean} mirrorAllowed\n   * @return {Element}\n   */\n  _prepareSvgClone: function _prepareSvgClone(sourceSvg, size, mirrorAllowed) {\n    if (sourceSvg) {\n      var content = sourceSvg.cloneNode(true),\n          svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n          viewBox = content.getAttribute('viewBox') || '0 0 ' + size + ' ' + size,\n          cssText = 'pointer-events: none; display: block; width: 100%; height: 100%;';\n\n      if (mirrorAllowed && content.hasAttribute('mirror-in-rtl')) {\n        cssText += '-webkit-transform:scale(-1,1);transform:scale(-1,1);';\n      }\n\n      svg.setAttribute('viewBox', viewBox);\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n      // TODO(dfreedm): `pointer-events: none` works around https://crbug.com/370136\n      // TODO(sjmiles): inline style may not be ideal, but avoids requiring a shadow-root\n      svg.style.cssText = cssText;\n      svg.appendChild(content).removeAttribute('id');\n      return svg;\n    }\n    return null;\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/iron-iconset-svg/iron-iconset-svg.html?");

/***/ }),

/***/ "./bower_components/iron-image/iron-image.html":
/*!*****************************************************!*\
  !*** ./bower_components/iron-image/iron-image.html ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=iron-image> <template> <style>:host{display:inline-block;overflow:hidden;position:relative}#baseURIAnchor{display:none}#sizedImgDiv{position:absolute;top:0;right:0;bottom:0;left:0;display:none}#img{display:block;width:var(--iron-image-width,auto);height:var(--iron-image-height,auto)}:host([sizing]) #sizedImgDiv{display:block}:host([sizing]) #img{display:none}#placeholder{position:absolute;top:0;right:0;bottom:0;left:0;background-color:inherit;opacity:1;@apply --iron-image-placeholder;}#placeholder.faded-out{transition:opacity .5s linear;opacity:0}</style> <a id=baseURIAnchor href=#></a> <div id=sizedImgDiv role=img hidden$=[[_computeImgDivHidden(sizing)]] aria-hidden$=[[_computeImgDivARIAHidden(alt)]] aria-label$=\\\"[[_computeImgDivARIALabel(alt, src)]]\\\"></div> <img id=img alt$=[[alt]] hidden$=[[_computeImgHidden(sizing)]] crossorigin$=[[crossorigin]] on-load=_imgOnLoad on-error=_imgOnError> <div id=placeholder hidden$=\\\"[[_computePlaceholderHidden(preload, fade, loading, loaded)]]\\\" class$=\\\"[[_computePlaceholderClassName(preload, fade, loading, loaded)]]\\\"></div> </template> </dom-module>\");\n\nPolymer({\n  is: 'iron-image',\n\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {\n      type: String,\n      value: ''\n    },\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * CORS enabled images support: https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n     */\n    crossorigin: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * When true, the image is prevented from loading and any placeholder is\n     * shown.  This may be useful when a binding to the src property is known to\n     * be invalid, to prevent 404 requests.\n     */\n    preventLoad: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Sets a sizing option for the image.  Valid values are `contain` (full\n     * aspect ratio of the image is contained within the element and\n     * letterboxed) or `cover` (image is cropped in order to fully cover the\n     * bounds of the element), or `null` (default: image takes natural size).\n     */\n    sizing: {\n      type: String,\n      value: null,\n      reflectToAttribute: true\n    },\n\n    /**\n     * When a sizing option is used (`cover` or `contain`), this determines\n     * how the image is aligned within the element bounds.\n     */\n    position: {\n      type: String,\n      value: 'center'\n    },\n\n    /**\n     * When `true`, any change to the `src` property will cause the `placeholder`\n     * image to be shown until the new image has loaded.\n     */\n    preload: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * This image will be used as a background/placeholder until the src image has\n     * loaded.  Use of a data-URI for placeholder is encouraged for instant rendering.\n     */\n    placeholder: {\n      type: String,\n      value: null,\n      observer: '_placeholderChanged'\n    },\n\n    /**\n     * When `preload` is true, setting `fade` to true will cause the image to\n     * fade into place.\n     */\n    fade: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only value that tracks the loading state of the image when the `preload`\n     * option is used.\n     */\n    loading: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {\n      notify: true,\n      readOnly: true,\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also be\n     * set via CSS.\n     */\n    width: {\n      observer: '_widthChanged',\n      type: Number,\n      value: null\n    },\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also be\n     * set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {\n      observer: '_heightChanged',\n      type: Number,\n      value: null\n    }\n  },\n\n  observers: ['_transformChanged(sizing, position)', '_loadStateObserver(src, preventLoad)'],\n\n  created: function created() {\n    this._resolvedSrc = '';\n  },\n\n  _imgOnLoad: function _imgOnLoad() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _imgOnError: function _imgOnError() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computePlaceholderHidden: function _computePlaceholderHidden() {\n    return !this.preload || !this.fade && !this.loading && this.loaded;\n  },\n\n  _computePlaceholderClassName: function _computePlaceholderClassName() {\n    return this.preload && this.fade && !this.loading && this.loaded ? 'faded-out' : '';\n  },\n\n  _computeImgDivHidden: function _computeImgDivHidden() {\n    return !this.sizing;\n  },\n\n  _computeImgDivARIAHidden: function _computeImgDivARIAHidden() {\n    return this.alt === '' ? 'true' : undefined;\n  },\n\n  _computeImgDivARIALabel: function _computeImgDivARIALabel() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // Polymer.ResolveUrl.resolveUrl will resolve '' relative to a URL x to\n    // that URL x, but '' is the default for src.\n    if (this.src === '') {\n      return '';\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved.replace(/[?|#].*/g, '').split('/').pop();\n  },\n\n  _computeImgHidden: function _computeImgHidden() {\n    return !!this.sizing;\n  },\n\n  _widthChanged: function _widthChanged() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + 'px';\n  },\n\n  _heightChanged: function _heightChanged() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + 'px';\n  },\n\n  _loadStateObserver: function _loadStateObserver(src, preventLoad) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n\n    this._resolvedSrc = '';\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    if (src === '' || preventLoad) {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this._resolvedSrc = newResolvedSrc;\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage = 'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _placeholderChanged: function _placeholderChanged() {\n    this.$.placeholder.style.backgroundImage = this.placeholder ? 'url(\"' + this.placeholder + '\")' : '';\n  },\n\n  _transformChanged: function _transformChanged() {\n    var sizedImgDivStyle = this.$.sizedImgDiv.style;\n    var placeholderStyle = this.$.placeholder.style;\n\n    sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize = this.sizing;\n\n    sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition = this.sizing ? this.position : '';\n\n    sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat = this.sizing ? 'no-repeat' : '';\n  },\n\n  _resolveSrc: function _resolveSrc(testSrc) {\n    var resolved = Polymer.ResolveUrl.resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved[0] === '/') {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved = (location.origin || location.protocol + '//' + location.host) + resolved;\n    }\n    return resolved;\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/iron-image/iron-image.html?");

/***/ }),

/***/ "./bower_components/iron-meta/iron-meta.html":
/*!***************************************************!*\
  !*** ./bower_components/iron-meta/iron-meta.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n(function () {\n\n  /**\n   * @constructor\n   * @param {{type: (string|null), key: (string|null), value: *}} options\n   */\n  function IronMeta(options) {\n    this.type = options && options.type || 'default';\n    this.key = options && options.key;\n    if ('value' in options) {\n      this.value = options.value;\n    }\n  }\n\n  IronMeta.types = {};\n\n  IronMeta.prototype = {\n    get value() {\n      var type = this.type;\n      var key = this.key;\n\n      if (type && key) {\n        return IronMeta.types[type] && IronMeta.types[type][key];\n      }\n    },\n\n    set value(value) {\n      var type = this.type;\n      var key = this.key;\n\n      if (type && key) {\n        type = IronMeta.types[type] = IronMeta.types[type] || {};\n        if (value == null) {\n          delete type[key];\n        } else {\n          type[key] = value;\n        }\n      }\n    },\n\n    get list() {\n      var type = this.type;\n\n      if (type) {\n        var items = IronMeta.types[this.type];\n        if (!items) {\n          return [];\n        }\n\n        return Object.keys(items).map(function (key) {\n          return metaDatas[this.type][key];\n        }, this);\n      }\n    },\n\n    byKey: function byKey(key) {\n      this.key = key;\n      return this.value;\n    }\n  };\n\n  Polymer.IronMeta = IronMeta;\n\n  var metaDatas = Polymer.IronMeta.types;\n\n  Polymer({\n\n    is: 'iron-meta',\n\n    properties: {\n\n      /**\n       * The type of meta-data.  All meta-data of the same type is stored\n       * together.\n       * @type {string}\n       */\n      type: {\n        type: String,\n        value: 'default'\n      },\n\n      /**\n       * The key used to store `value` under the `type` namespace.\n       * @type {?string}\n       */\n      key: {\n        type: String\n      },\n\n      /**\n       * The meta-data to store or retrieve.\n       * @type {*}\n       */\n      value: {\n        type: String,\n        notify: true\n      },\n\n      /**\n       * If true, `value` is set to the iron-meta instance itself.\n       */\n      self: {\n        type: Boolean,\n        observer: '_selfChanged'\n      },\n\n      __meta: {\n        type: Boolean,\n        computed: '__computeMeta(type, key, value)'\n      }\n    },\n\n    hostAttributes: {\n      hidden: true\n    },\n\n    __computeMeta: function __computeMeta(type, key, value) {\n      var meta = new Polymer.IronMeta({\n        type: type,\n        key: key\n      });\n\n      if (value !== undefined && value !== meta.value) {\n        meta.value = value;\n      } else if (this.value !== meta.value) {\n        this.value = meta.value;\n      }\n\n      return meta;\n    },\n\n    get list() {\n      return this.__meta && this.__meta.list;\n    },\n\n    _selfChanged: function _selfChanged(self) {\n      if (self) {\n        this.value = this;\n      }\n    },\n\n    /**\n     * Retrieves meta data value by key.\n     *\n     * @method byKey\n     * @param {string} key The key of the meta-data to be returned.\n     * @return {*}\n     */\n    byKey: function byKey(key) {\n      return new Polymer.IronMeta({\n        type: this.type,\n        key: key\n      }).value;\n    }\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/iron-meta/iron-meta.html?");

/***/ }),

/***/ "./bower_components/iron-range-behavior/iron-range-behavior.html":
/*!***********************************************************************!*\
  !*** ./bower_components/iron-range-behavior/iron-range-behavior.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n/**\n* `iron-range-behavior` provides the behavior for something with a minimum to maximum range.\n*\n* @demo demo/index.html\n* @polymerBehavior\n*/\nPolymer.IronRangeBehavior = {\n\n  properties: {\n\n    /**\n     * The number that represents the current value.\n     */\n    value: {\n      type: Number,\n      value: 0,\n      notify: true,\n      reflectToAttribute: true\n    },\n\n    /**\n     * The number that indicates the minimum value of the range.\n     */\n    min: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n\n    /**\n     * The number that indicates the maximum value of the range.\n     */\n    max: {\n      type: Number,\n      value: 100,\n      notify: true\n    },\n\n    /**\n     * Specifies the value granularity of the range's value.\n     */\n    step: {\n      type: Number,\n      value: 1,\n      notify: true\n    },\n\n    /**\n     * Returns the ratio of the value.\n     */\n    ratio: {\n      type: Number,\n      value: 0,\n      readOnly: true,\n      notify: true\n    }\n  },\n\n  observers: ['_update(value, min, max, step)'],\n\n  _calcRatio: function _calcRatio(value) {\n    return (this._clampValue(value) - this.min) / (this.max - this.min);\n  },\n\n  _clampValue: function _clampValue(value) {\n    return Math.min(this.max, Math.max(this.min, this._calcStep(value)));\n  },\n\n  _calcStep: function _calcStep(value) {\n    // polymer/issues/2493\n    value = parseFloat(value);\n\n    if (!this.step) {\n      return value;\n    }\n\n    var numSteps = Math.round((value - this.min) / this.step);\n    if (this.step < 1) {\n      /**\n       * For small values of this.step, if we calculate the step using\n       * `Math.round(value / step) * step` we may hit a precision point issue\n       * eg. 0.1 * 0.2 =  0.020000000000000004\n       * http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n       *\n       * as a work around we can divide by the reciprocal of `step`\n       */\n      return numSteps / (1 / this.step) + this.min;\n    } else {\n      return numSteps * this.step + this.min;\n    }\n  },\n\n  _validateValue: function _validateValue() {\n    var v = this._clampValue(this.value);\n    this.value = this.oldValue = isNaN(v) ? this.oldValue : v;\n    return this.value !== v;\n  },\n\n  _update: function _update() {\n    this._validateValue();\n    this._setRatio(this._calcRatio(this.value) * 100);\n  }\n\n};\n\n//# sourceURL=webpack:///./bower_components/iron-range-behavior/iron-range-behavior.html?");

/***/ }),

/***/ "./bower_components/iron-resizable-behavior/iron-resizable-behavior.html":
/*!*******************************************************************************!*\
  !*** ./bower_components/iron-resizable-behavior/iron-resizable-behavior.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n/**\n * `IronResizableBehavior` is a behavior that can be used in Polymer elements to\n * coordinate the flow of resize events between \"resizers\" (elements that control the\n * size or hidden state of their children) and \"resizables\" (elements that need to be\n * notified when they are resized or un-hidden by their parents in order to take\n * action on their new measurements).\n *\n * Elements that perform measurement should add the `IronResizableBehavior` behavior to\n * their element definition and listen for the `iron-resize` event on themselves.\n * This event will be fired when they become showing after having been hidden,\n * when they are resized explicitly by another resizable, or when the window has been\n * resized.\n *\n * Note, the `iron-resize` event is non-bubbling.\n *\n * @polymerBehavior Polymer.IronResizableBehavior\n * @demo demo/index.html\n **/\nPolymer.IronResizableBehavior = {\n  properties: {\n    /**\n     * The closest ancestor element that implements `IronResizableBehavior`.\n     */\n    _parentResizable: {\n      type: Object,\n      observer: '_parentResizableChanged'\n    },\n\n    /**\n     * True if this element is currently notifying its descendant elements of\n     * resize.\n     */\n    _notifyingDescendant: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  listeners: {\n    'iron-request-resize-notifications': '_onIronRequestResizeNotifications'\n  },\n\n  created: function created() {\n    // We don't really need property effects on these, and also we want them\n    // to be created before the `_parentResizable` observer fires:\n    this._interestedResizables = [];\n    this._boundNotifyResize = this.notifyResize.bind(this);\n  },\n\n  attached: function attached() {\n    this._requestResizeNotifications();\n  },\n\n  detached: function detached() {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    } else {\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n\n    this._parentResizable = null;\n  },\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize: function notifyResize() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._interestedResizables.forEach(function (resizable) {\n      if (this.resizerShouldNotify(resizable)) {\n        this._notifyDescendant(resizable);\n      }\n    }, this);\n\n    this._fireResize();\n  },\n\n  /**\n   * Used to assign the closest resizable ancestor to this resizable\n   * if the ancestor detects a request for notifications.\n   */\n  assignParentResizable: function assignParentResizable(parentResizable) {\n    this._parentResizable = parentResizable;\n  },\n\n  /**\n   * Used to remove a resizable descendant from the list of descendants\n   * that should be notified of a resize change.\n   */\n  stopResizeNotificationsFor: function stopResizeNotificationsFor(target) {\n    var index = this._interestedResizables.indexOf(target);\n\n    if (index > -1) {\n      this._interestedResizables.splice(index, 1);\n      this.unlisten(target, 'iron-resize', '_onDescendantIronResize');\n    }\n  },\n\n  /**\n   * This method can be overridden to filter nested elements that should or\n   * should not be notified by the current element. Return true if an element\n   * should be notified, or false if it should not be notified.\n   *\n   * @param {HTMLElement} element A candidate descendant element that\n   * implements `IronResizableBehavior`.\n   * @return {boolean} True if the `element` should be notified of resize.\n   */\n  resizerShouldNotify: function resizerShouldNotify(element) {\n    return true;\n  },\n\n  _onDescendantIronResize: function _onDescendantIronResize(event) {\n    if (this._notifyingDescendant) {\n      event.stopPropagation();\n      return;\n    }\n\n    // NOTE(cdata): In ShadowDOM, event retargeting makes echoing of the\n    // otherwise non-bubbling event \"just work.\" We do it manually here for\n    // the case where Polymer is not using shadow roots for whatever reason:\n    if (!Polymer.Settings.useShadow) {\n      this._fireResize();\n    }\n  },\n\n  _fireResize: function _fireResize() {\n    this.fire('iron-resize', null, {\n      node: this,\n      bubbles: false\n    });\n  },\n\n  _onIronRequestResizeNotifications: function _onIronRequestResizeNotifications(event) {\n    var target = /** @type {!EventTarget} */Polymer.dom(event).rootTarget;\n    if (target === this) {\n      return;\n    }\n\n    if (this._interestedResizables.indexOf(target) === -1) {\n      this._interestedResizables.push(target);\n      this.listen(target, 'iron-resize', '_onDescendantIronResize');\n    }\n\n    target.assignParentResizable(this);\n    this._notifyDescendant(target);\n\n    event.stopPropagation();\n  },\n\n  _parentResizableChanged: function _parentResizableChanged(parentResizable) {\n    if (parentResizable) {\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n  },\n\n  _notifyDescendant: function _notifyDescendant(descendant) {\n    // NOTE(cdata): In IE10, attached is fired on children first, so it's\n    // important not to notify them if the parent is not attached yet (or\n    // else they will get redundantly notified when the parent attaches).\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._notifyingDescendant = true;\n    descendant.notifyResize();\n    this._notifyingDescendant = false;\n  },\n\n  _requestResizeNotifications: function _requestResizeNotifications() {\n    if (!this.isAttached) return;\n\n    // NOTE(valdrin) In CustomElements v1 with native HTMLImports, the order\n    // of imports affects the order of `attached` callbacks (see webcomponents/custom-elements#15).\n    // This might cause a child to notify parents too early (as the parent\n    // still has to be upgraded), resulting in a parent not able to keep track\n    // of the `_interestedResizables`. To solve this, we wait for the document\n    // to be done loading before firing the event.\n    if (document.readyState === 'loading') {\n      var _requestResizeNotifications = this._requestResizeNotifications.bind(this);\n      document.addEventListener('readystatechange', function readystatechanged() {\n        document.removeEventListener('readystatechange', readystatechanged);\n        _requestResizeNotifications();\n      });\n    } else {\n      this.fire('iron-request-resize-notifications', null, {\n        node: this,\n        bubbles: true,\n        cancelable: true\n      });\n\n      if (!this._parentResizable) {\n        window.addEventListener('resize', this._boundNotifyResize);\n        this.notifyResize();\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack:///./bower_components/iron-resizable-behavior/iron-resizable-behavior.html?");

/***/ }),

/***/ "./bower_components/neon-animation/animations/fade-in-animation.html":
/*!***************************************************************************!*\
  !*** ./bower_components/neon-animation/animations/fade-in-animation.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../neon-animation-behavior.html */ \"./bower_components/neon-animation/neon-animation-behavior.html\");\n\nPolymer({\n\n  is: 'fade-in-animation',\n\n  behaviors: [Polymer.NeonAnimationBehavior],\n\n  configure: function configure(config) {\n    var node = config.node;\n    this._effect = new KeyframeEffect(node, [{ 'opacity': '0' }, { 'opacity': '1' }], this.timingFromConfig(config));\n    return this._effect;\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/neon-animation/animations/fade-in-animation.html?");

/***/ }),

/***/ "./bower_components/neon-animation/animations/fade-out-animation.html":
/*!****************************************************************************!*\
  !*** ./bower_components/neon-animation/animations/fade-out-animation.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../neon-animation-behavior.html */ \"./bower_components/neon-animation/neon-animation-behavior.html\");\n\nPolymer({\n\n  is: 'fade-out-animation',\n\n  behaviors: [Polymer.NeonAnimationBehavior],\n\n  configure: function configure(config) {\n    var node = config.node;\n    this._effect = new KeyframeEffect(node, [{ 'opacity': '1' }, { 'opacity': '0' }], this.timingFromConfig(config));\n    return this._effect;\n  }\n\n});\n\n//# sourceURL=webpack:///./bower_components/neon-animation/animations/fade-out-animation.html?");

/***/ }),

/***/ "./bower_components/neon-animation/neon-animatable-behavior.html":
/*!***********************************************************************!*\
  !*** ./bower_components/neon-animation/neon-animatable-behavior.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n/**\n * `Polymer.NeonAnimatableBehavior` is implemented by elements containing animations for use with\n * elements implementing `Polymer.NeonAnimationRunnerBehavior`.\n * @polymerBehavior\n */\nPolymer.NeonAnimatableBehavior = {\n\n  properties: {\n\n    /**\n     * Animation configuration. See README for more info.\n     */\n    animationConfig: {\n      type: Object\n    },\n\n    /**\n     * Convenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\n     * manually if using this. The animated node is set to `this` if using this property.\n     */\n    entryAnimation: {\n      observer: '_entryAnimationChanged',\n      type: String\n    },\n\n    /**\n     * Convenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\n     * manually if using this. The animated node is set to `this` if using this property.\n     */\n    exitAnimation: {\n      observer: '_exitAnimationChanged',\n      type: String\n    }\n\n  },\n\n  _entryAnimationChanged: function _entryAnimationChanged() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['entry'] = [{\n      name: this.entryAnimation,\n      node: this\n    }];\n  },\n\n  _exitAnimationChanged: function _exitAnimationChanged() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['exit'] = [{\n      name: this.exitAnimation,\n      node: this\n    }];\n  },\n\n  _copyProperties: function _copyProperties(config1, config2) {\n    // shallowly copy properties from config2 to config1\n    for (var property in config2) {\n      config1[property] = config2[property];\n    }\n  },\n\n  _cloneConfig: function _cloneConfig(config) {\n    var clone = {\n      isClone: true\n    };\n    this._copyProperties(clone, config);\n    return clone;\n  },\n\n  _getAnimationConfigRecursive: function _getAnimationConfigRecursive(type, map, allConfigs) {\n    if (!this.animationConfig) {\n      return;\n    }\n\n    if (this.animationConfig.value && typeof this.animationConfig.value === 'function') {\n      this._warn(this._logf('playAnimation', \"Please put 'animationConfig' inside of your components 'properties' object instead of outside of it.\"));\n      return;\n    }\n\n    // type is optional\n    var thisConfig;\n    if (type) {\n      thisConfig = this.animationConfig[type];\n    } else {\n      thisConfig = this.animationConfig;\n    }\n\n    if (!Array.isArray(thisConfig)) {\n      thisConfig = [thisConfig];\n    }\n\n    // iterate animations and recurse to process configurations from child nodes\n    if (thisConfig) {\n      for (var config, index = 0; config = thisConfig[index]; index++) {\n        if (config.animatable) {\n          config.animatable._getAnimationConfigRecursive(config.type || type, map, allConfigs);\n        } else {\n          if (config.id) {\n            var cachedConfig = map[config.id];\n            if (cachedConfig) {\n              // merge configurations with the same id, making a clone lazily\n              if (!cachedConfig.isClone) {\n                map[config.id] = this._cloneConfig(cachedConfig);\n                cachedConfig = map[config.id];\n              }\n              this._copyProperties(cachedConfig, config);\n            } else {\n              // put any configs with an id into a map\n              map[config.id] = config;\n            }\n          } else {\n            allConfigs.push(config);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * An element implementing `Polymer.NeonAnimationRunnerBehavior` calls this method to configure\n   * an animation with an optional type. Elements implementing `Polymer.NeonAnimatableBehavior`\n   * should define the property `animationConfig`, which is either a configuration object\n   * or a map of animation type to array of configuration objects.\n   */\n  getAnimationConfig: function getAnimationConfig(type) {\n    var map = {};\n    var allConfigs = [];\n    this._getAnimationConfigRecursive(type, map, allConfigs);\n    // append the configurations saved in the map to the array\n    for (var key in map) {\n      allConfigs.push(map[key]);\n    }\n    return allConfigs;\n  }\n\n};\n\n//# sourceURL=webpack:///./bower_components/neon-animation/neon-animatable-behavior.html?");

/***/ }),

/***/ "./bower_components/neon-animation/neon-animation-behavior.html":
/*!**********************************************************************!*\
  !*** ./bower_components/neon-animation/neon-animation-behavior.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n/**\n * Use `Polymer.NeonAnimationBehavior` to implement an animation.\n * @polymerBehavior\n */\nPolymer.NeonAnimationBehavior = {\n\n  properties: {\n\n    /**\n     * Defines the animation timing.\n     */\n    animationTiming: {\n      type: Object,\n      value: function value() {\n        return {\n          duration: 500,\n          easing: 'cubic-bezier(0.4, 0, 0.2, 1)',\n          fill: 'both'\n        };\n      }\n    }\n\n  },\n\n  /**\n   * Can be used to determine that elements implement this behavior.\n   */\n  isNeonAnimation: true,\n\n  /**\n   * Do any animation configuration here.\n   */\n  // configure: function(config) {\n  // },\n\n  created: function created() {\n    if (!document.body.animate) {\n      console.warn('No web animations detected. This element will not' + ' function without a web animations polyfill.');\n    }\n  },\n\n  /**\n   * Returns the animation timing by mixing in properties from `config` to the defaults defined\n   * by the animation.\n   */\n  timingFromConfig: function timingFromConfig(config) {\n    if (config.timing) {\n      for (var property in config.timing) {\n        this.animationTiming[property] = config.timing[property];\n      }\n    }\n    return this.animationTiming;\n  },\n\n  /**\n   * Sets `transform` and `transformOrigin` properties along with the prefixed versions.\n   */\n  setPrefixedProperty: function setPrefixedProperty(node, property, value) {\n    var map = {\n      'transform': ['webkitTransform'],\n      'transformOrigin': ['mozTransformOrigin', 'webkitTransformOrigin']\n    };\n    var prefixes = map[property];\n    for (var prefix, index = 0; prefix = prefixes[index]; index++) {\n      node.style[prefix] = value;\n    }\n    node.style[property] = value;\n  },\n\n  /**\n   * Called when the animation finishes.\n   */\n  complete: function complete() {}\n\n};\n\n//# sourceURL=webpack:///./bower_components/neon-animation/neon-animation-behavior.html?");

/***/ }),

/***/ "./bower_components/neon-animation/neon-animation-runner-behavior.html":
/*!*****************************************************************************!*\
  !*** ./bower_components/neon-animation/neon-animation-runner-behavior.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ./neon-animatable-behavior.html */ \"./bower_components/neon-animation/neon-animatable-behavior.html\");\n\n/**\n * `Polymer.NeonAnimationRunnerBehavior` adds a method to run animations.\n *\n * @polymerBehavior Polymer.NeonAnimationRunnerBehavior\n */\nPolymer.NeonAnimationRunnerBehaviorImpl = {\n\n  _configureAnimations: function _configureAnimations(configs) {\n    var results = [];\n    if (configs.length > 0) {\n      for (var config, index = 0; config = configs[index]; index++) {\n        var neonAnimation = document.createElement(config.name);\n        // is this element actually a neon animation?\n        if (neonAnimation.isNeonAnimation) {\n          var result = null;\n          // configuration or play could fail if polyfills aren't loaded\n          try {\n            result = neonAnimation.configure(config);\n            // Check if we have an Effect rather than an Animation\n            if (typeof result.cancel != 'function') {\n              result = document.timeline.play(result);\n            }\n          } catch (e) {\n            result = null;\n            console.warn('Couldnt play', '(', config.name, ').', e);\n          }\n          if (result) {\n            results.push({\n              neonAnimation: neonAnimation,\n              config: config,\n              animation: result\n            });\n          }\n        } else {\n          console.warn(this.is + ':', config.name, 'not found!');\n        }\n      }\n    }\n    return results;\n  },\n\n  _shouldComplete: function _shouldComplete(activeEntries) {\n    var finished = true;\n    for (var i = 0; i < activeEntries.length; i++) {\n      if (activeEntries[i].animation.playState != 'finished') {\n        finished = false;\n        break;\n      }\n    }\n    return finished;\n  },\n\n  _complete: function _complete(activeEntries) {\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].neonAnimation.complete(activeEntries[i].config);\n    }\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.cancel();\n    }\n  },\n\n  /**\n   * Plays an animation with an optional `type`.\n   * @param {string=} type\n   * @param {!Object=} cookie\n   */\n  playAnimation: function playAnimation(type, cookie) {\n    var configs = this.getAnimationConfig(type);\n    if (!configs) {\n      return;\n    }\n    this._active = this._active || {};\n    if (this._active[type]) {\n      this._complete(this._active[type]);\n      delete this._active[type];\n    }\n\n    var activeEntries = this._configureAnimations(configs);\n\n    if (activeEntries.length == 0) {\n      this.fire('neon-animation-finish', cookie, { bubbles: false });\n      return;\n    }\n\n    this._active[type] = activeEntries;\n\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.onfinish = function () {\n        if (this._shouldComplete(activeEntries)) {\n          this._complete(activeEntries);\n          delete this._active[type];\n          this.fire('neon-animation-finish', cookie, { bubbles: false });\n        }\n      }.bind(this);\n    }\n  },\n\n  /**\n   * Cancels the currently running animations.\n   */\n  cancelAnimation: function cancelAnimation() {\n    for (var k in this._animations) {\n      this._animations[k].cancel();\n    }\n    this._animations = {};\n  }\n};\n\n/** @polymerBehavior Polymer.NeonAnimationRunnerBehavior */\nPolymer.NeonAnimationRunnerBehavior = [Polymer.NeonAnimatableBehavior, Polymer.NeonAnimationRunnerBehaviorImpl];\n\n//# sourceURL=webpack:///./bower_components/neon-animation/neon-animation-runner-behavior.html?");

/***/ }),

/***/ "./bower_components/paper-badge/paper-badge.html":
/*!*******************************************************!*\
  !*** ./bower_components/paper-badge/paper-badge.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-icon/iron-icon.html */ \"./bower_components/iron-icon/iron-icon.html\");\n\n__webpack_require__(/*! ../iron-flex-layout/iron-flex-layout.html */ \"./bower_components/iron-flex-layout/iron-flex-layout.html\");\n\n__webpack_require__(/*! ../iron-resizable-behavior/iron-resizable-behavior.html */ \"./bower_components/iron-resizable-behavior/iron-resizable-behavior.html\");\n\n__webpack_require__(/*! ../paper-styles/default-theme.html */ \"./bower_components/paper-styles/default-theme.html\");\n\n__webpack_require__(/*! ../paper-styles/typography.html */ \"./bower_components/paper-styles/typography.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-badge> <template> <style>:host{display:block;position:absolute;outline:0}:host([hidden]),[hidden]{display:none!important}iron-icon{--iron-icon-width:12px;--iron-icon-height:12px}.badge{@apply --layout;@apply --layout-center-center;@apply --paper-font-common-base;font-weight:400;font-size:11px;border-radius:50%;margin-left:var(--paper-badge-margin-left,0);margin-bottom:var(--paper-badge-margin-bottom,0);width:var(--paper-badge-width,20px);height:var(--paper-badge-height,20px);background-color:var(--paper-badge-background,var(--accent-color));opacity:var(--paper-badge-opacity,1);color:var(--paper-badge-text-color,#fff);@apply --paper-badge;}</style> <div class=badge> <iron-icon hidden$={{!_computeIsIconBadge(icon)}} icon={{icon}}></iron-icon> <span id=badge-text hidden$={{_computeIsIconBadge(icon)}}>{{label}}</span> </div> </template> </dom-module>\");\n\nPolymer({\n  is: 'paper-badge',\n\n  hostAttributes: {\n    role: 'status',\n    tabindex: 0\n  },\n\n  behaviors: [Polymer.IronResizableBehavior],\n\n  listeners: {\n    'iron-resize': 'updatePosition'\n  },\n\n  properties: {\n    /**\n     * The id of the element that the badge is anchored to. This element\n     * must be a sibling of the badge.\n     */\n    for: {\n      type: String,\n      observer: '_forChanged'\n    },\n\n    /**\n     * The label displayed in the badge. The label is centered, and ideally\n     * should have very few characters.\n     */\n    label: {\n      type: String,\n      observer: '_labelChanged'\n    },\n\n    /**\n     * An iron-icon ID. When given, the badge content will use an\n     * `<iron-icon>` element displaying the given icon ID rather than the\n     * label text. However, the label text will still be used for\n     * accessibility purposes.\n     */\n    icon: {\n      type: String,\n      value: ''\n    },\n\n    _boundNotifyResize: {\n      type: Function,\n      value: function value() {\n        return this.notifyResize.bind(this);\n      }\n    },\n\n    _boundUpdateTarget: {\n      type: Function,\n      value: function value() {\n        return this._updateTarget.bind(this);\n      }\n    }\n  },\n\n  attached: function attached() {\n    // Polymer 2.x does not have this.offsetParent defined by attached\n    requestAnimationFrame(this._boundUpdateTarget);\n  },\n\n  attributeChanged: function attributeChanged(name) {\n    if (name === 'hidden') {\n      this.updatePosition();\n    }\n  },\n\n  _forChanged: function _forChanged() {\n    // The first time the property is set is before the badge is attached,\n    // which means we're not ready to position it yet.\n    if (!this.isAttached) {\n      return;\n    }\n    this._updateTarget();\n  },\n\n  _labelChanged: function _labelChanged() {\n    this.setAttribute('aria-label', this.label);\n  },\n\n  _updateTarget: function _updateTarget() {\n    this._target = this.target;\n    requestAnimationFrame(this._boundNotifyResize);\n  },\n\n  _computeIsIconBadge: function _computeIsIconBadge(icon) {\n    return icon.length > 0;\n  },\n\n  /**\n   * Returns the target element that this badge is anchored to. It is\n   * either the element given by the `for` attribute, or the immediate parent\n   * of the badge.\n   */\n  get target() {\n    var parentNode = Polymer.dom(this).parentNode;\n    // If the parentNode is a document fragment, then we need to use the host.\n    var ownerRoot = Polymer.dom(this).getOwnerRoot();\n    var target;\n\n    if (this.for) {\n      target = Polymer.dom(ownerRoot).querySelector('#' + this.for);\n    } else {\n      target = parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE ? ownerRoot.host : parentNode;\n    }\n\n    return target;\n  },\n\n  /**\n   * Repositions the badge relative to its anchor element. This is called\n   * automatically when the badge is attached or an `iron-resize` event is\n   * fired (for exmaple if the window has resized, or your target is a\n   * custom element that implements IronResizableBehavior).\n   *\n   * You should call this in all other cases when the achor's position\n   * might have changed (for example, if it's visibility has changed, or\n   * you've manually done a page re-layout).\n   */\n  updatePosition: function updatePosition() {\n    if (!this._target || !this.offsetParent) {\n      return;\n    }\n\n    var parentRect = this.offsetParent.getBoundingClientRect();\n    var targetRect = this._target.getBoundingClientRect();\n    var thisRect = this.getBoundingClientRect();\n\n    this.style.left = targetRect.left - parentRect.left + (targetRect.width - thisRect.width / 2) + 'px';\n    this.style.top = targetRect.top - parentRect.top - thisRect.height / 2 + 'px';\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/paper-badge/paper-badge.html?");

/***/ }),

/***/ "./bower_components/paper-behaviors/paper-button-behavior.html":
/*!*********************************************************************!*\
  !*** ./bower_components/paper-behaviors/paper-button-behavior.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-behaviors/iron-button-state.html */ \"./bower_components/iron-behaviors/iron-button-state.html\");\n\n__webpack_require__(/*! ./paper-ripple-behavior.html */ \"./bower_components/paper-behaviors/paper-ripple-behavior.html\");\n\n/** @polymerBehavior Polymer.PaperButtonBehavior */\nPolymer.PaperButtonBehaviorImpl = {\n  properties: {\n    /**\n     * The z-depth of this element, from 0-5. Setting to 0 will remove the\n     * shadow, and each increasing number greater than 0 will be \"deeper\"\n     * than the last.\n     *\n     * @attribute elevation\n     * @type number\n     * @default 1\n     */\n    elevation: {\n      type: Number,\n      reflectToAttribute: true,\n      readOnly: true\n    }\n  },\n\n  observers: ['_calculateElevation(focused, disabled, active, pressed, receivedFocusFromKeyboard)', '_computeKeyboardClass(receivedFocusFromKeyboard)'],\n\n  hostAttributes: {\n    role: 'button',\n    tabindex: '0',\n    animated: true\n  },\n\n  _calculateElevation: function _calculateElevation() {\n    var e = 1;\n    if (this.disabled) {\n      e = 0;\n    } else if (this.active || this.pressed) {\n      e = 4;\n    } else if (this.receivedFocusFromKeyboard) {\n      e = 3;\n    }\n    this._setElevation(e);\n  },\n\n  _computeKeyboardClass: function _computeKeyboardClass(receivedFocusFromKeyboard) {\n    this.toggleClass('keyboard-focus', receivedFocusFromKeyboard);\n  },\n\n  /**\n   * In addition to `IronButtonState` behavior, when space key goes down,\n   * create a ripple down effect.\n   *\n   * @param {!KeyboardEvent} event .\n   */\n  _spaceKeyDownHandler: function _spaceKeyDownHandler(event) {\n    Polymer.IronButtonStateImpl._spaceKeyDownHandler.call(this, event);\n    // Ensure that there is at most one ripple when the space key is held down.\n    if (this.hasRipple() && this.getRipple().ripples.length < 1) {\n      this._ripple.uiDownAction();\n    }\n  },\n\n  /**\n   * In addition to `IronButtonState` behavior, when space key goes up,\n   * create a ripple up effect.\n   *\n   * @param {!KeyboardEvent} event .\n   */\n  _spaceKeyUpHandler: function _spaceKeyUpHandler(event) {\n    Polymer.IronButtonStateImpl._spaceKeyUpHandler.call(this, event);\n    if (this.hasRipple()) {\n      this._ripple.uiUpAction();\n    }\n  }\n};\n\n/** @polymerBehavior */\nPolymer.PaperButtonBehavior = [Polymer.IronButtonState, Polymer.IronControlState, Polymer.PaperRippleBehavior, Polymer.PaperButtonBehaviorImpl];\n\n//# sourceURL=webpack:///./bower_components/paper-behaviors/paper-button-behavior.html?");

/***/ }),

/***/ "./bower_components/paper-behaviors/paper-ripple-behavior.html":
/*!*********************************************************************!*\
  !*** ./bower_components/paper-behaviors/paper-ripple-behavior.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-behaviors/iron-button-state.html */ \"./bower_components/iron-behaviors/iron-button-state.html\");\n\n__webpack_require__(/*! ../paper-ripple/paper-ripple.html */ \"./bower_components/paper-ripple/paper-ripple.html\");\n\n/**\n * `Polymer.PaperRippleBehavior` dynamically implements a ripple\n * when the element has focus via pointer or keyboard.\n *\n * NOTE: This behavior is intended to be used in conjunction with and after\n * `Polymer.IronButtonState` and `Polymer.IronControlState`.\n *\n * @polymerBehavior Polymer.PaperRippleBehavior\n */\nPolymer.PaperRippleBehavior = {\n  properties: {\n    /**\n     * If true, the element will not produce a ripple effect when interacted\n     * with via the pointer.\n     */\n    noink: {\n      type: Boolean,\n      observer: '_noinkChanged'\n    },\n\n    /**\n     * @type {Element|undefined}\n     */\n    _rippleContainer: {\n      type: Object\n    }\n  },\n\n  /**\n   * Ensures a `<paper-ripple>` element is available when the element is\n   * focused.\n   */\n  _buttonStateChanged: function _buttonStateChanged() {\n    if (this.focused) {\n      this.ensureRipple();\n    }\n  },\n\n  /**\n   * In addition to the functionality provided in `IronButtonState`, ensures\n   * a ripple effect is created when the element is in a `pressed` state.\n   */\n  _downHandler: function _downHandler(event) {\n    Polymer.IronButtonStateImpl._downHandler.call(this, event);\n    if (this.pressed) {\n      this.ensureRipple(event);\n    }\n  },\n\n  /**\n   * Ensures this element contains a ripple effect. For startup efficiency\n   * the ripple effect is dynamically on demand when needed.\n   * @param {!Event=} optTriggeringEvent (optional) event that triggered the\n   * ripple.\n   */\n  ensureRipple: function ensureRipple(optTriggeringEvent) {\n    if (!this.hasRipple()) {\n      this._ripple = this._createRipple();\n      this._ripple.noink = this.noink;\n      var rippleContainer = this._rippleContainer || this.root;\n      if (rippleContainer) {\n        Polymer.dom(rippleContainer).appendChild(this._ripple);\n      }\n      if (optTriggeringEvent) {\n        // Check if the event happened inside of the ripple container\n        // Fall back to host instead of the root because distributed text\n        // nodes are not valid event targets\n        var domContainer = Polymer.dom(this._rippleContainer || this);\n        var target = Polymer.dom(optTriggeringEvent).rootTarget;\n        if (domContainer.deepContains( /** @type {Node} */target)) {\n          this._ripple.uiDownAction(optTriggeringEvent);\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the `<paper-ripple>` element used by this element to create\n   * ripple effects. The element's ripple is created on demand, when\n   * necessary, and calling this method will force the\n   * ripple to be created.\n   */\n  getRipple: function getRipple() {\n    this.ensureRipple();\n    return this._ripple;\n  },\n\n  /**\n   * Returns true if this element currently contains a ripple effect.\n   * @return {boolean}\n   */\n  hasRipple: function hasRipple() {\n    return Boolean(this._ripple);\n  },\n\n  /**\n   * Create the element's ripple effect via creating a `<paper-ripple>`.\n   * Override this method to customize the ripple element.\n   * @return {!PaperRippleElement} Returns a `<paper-ripple>` element.\n   */\n  _createRipple: function _createRipple() {\n    var element = /** @type {!PaperRippleElement} */document.createElement('paper-ripple');\n    return element;\n  },\n\n  _noinkChanged: function _noinkChanged(noink) {\n    if (this.hasRipple()) {\n      this._ripple.noink = noink;\n    }\n  }\n};\n\n//# sourceURL=webpack:///./bower_components/paper-behaviors/paper-ripple-behavior.html?");

/***/ }),

/***/ "./bower_components/paper-button/paper-button.html":
/*!*********************************************************!*\
  !*** ./bower_components/paper-button/paper-button.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-flex-layout/iron-flex-layout.html */ \"./bower_components/iron-flex-layout/iron-flex-layout.html\");\n\n__webpack_require__(/*! ../paper-behaviors/paper-button-behavior.html */ \"./bower_components/paper-behaviors/paper-button-behavior.html\");\n\n__webpack_require__(/*! ../paper-styles/element-styles/paper-material-styles.html */ \"./bower_components/paper-styles/element-styles/paper-material-styles.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-button> <template strip-whitespace=\\\"\\\"> <style include=paper-material-styles>:host{@apply --layout-inline;@apply --layout-center-center;position:relative;box-sizing:border-box;min-width:5.14em;margin:0 .29em;background:0 0;-webkit-tap-highlight-color:transparent;-webkit-tap-highlight-color:transparent;font:inherit;text-transform:uppercase;outline-width:0;border-radius:3px;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none;cursor:pointer;z-index:0;padding:.7em .57em;@apply --paper-font-common-base;@apply --paper-button;}:host([elevation=\\\"1\\\"]){@apply --paper-material-elevation-1;}:host([elevation=\\\"2\\\"]){@apply --paper-material-elevation-2;}:host([elevation=\\\"3\\\"]){@apply --paper-material-elevation-3;}:host([elevation=\\\"4\\\"]){@apply --paper-material-elevation-4;}:host([elevation=\\\"5\\\"]){@apply --paper-material-elevation-5;}:host([hidden]){display:none!important}:host([raised].keyboard-focus){font-weight:700;@apply --paper-button-raised-keyboard-focus;}:host(:not([raised]).keyboard-focus){font-weight:700;@apply --paper-button-flat-keyboard-focus;}:host([disabled]){background:#eaeaea;color:#a8a8a8;cursor:auto;pointer-events:none;@apply --paper-button-disabled;}:host([animated]){@apply --shadow-transition;}paper-ripple{color:var(--paper-button-ink-color)}</style> <slot></slot> </template> </dom-module>\");\n\nPolymer({\n  is: 'paper-button',\n\n  behaviors: [Polymer.PaperButtonBehavior],\n\n  properties: {\n    /**\n     * If true, the button should be styled with a shadow.\n     */\n    raised: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false,\n      observer: '_calculateElevation'\n    }\n  },\n\n  _calculateElevation: function _calculateElevation() {\n    if (!this.raised) {\n      this._setElevation(0);\n    } else {\n      Polymer.PaperButtonBehaviorImpl._calculateElevation.apply(this);\n    }\n  }\n\n  /**\n  Fired when the animation finishes.\n  This is useful if you want to wait until\n  the ripple animation finishes to perform some action.\n   @event transitionend\n  Event param: {{node: Object}} detail Contains the animated node.\n  */\n});\n\n//# sourceURL=webpack:///./bower_components/paper-button/paper-button.html?");

/***/ }),

/***/ "./bower_components/paper-card/paper-card.html":
/*!*****************************************************!*\
  !*** ./bower_components/paper-card/paper-card.html ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-flex-layout/iron-flex-layout.html */ \"./bower_components/iron-flex-layout/iron-flex-layout.html\");\n\n__webpack_require__(/*! ../iron-image/iron-image.html */ \"./bower_components/iron-image/iron-image.html\");\n\n__webpack_require__(/*! ../paper-styles/element-styles/paper-material-styles.html */ \"./bower_components/paper-styles/element-styles/paper-material-styles.html\");\n\n__webpack_require__(/*! ../paper-styles/default-theme.html */ \"./bower_components/paper-styles/default-theme.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-card> <template> <style include=paper-material-styles>:host{display:inline-block;position:relative;box-sizing:border-box;background-color:var(--paper-card-background-color,var(--primary-background-color));border-radius:2px;@apply --paper-font-common-base;@apply --paper-card;}[hidden]{display:none!important}.header{position:relative;border-top-left-radius:inherit;border-top-right-radius:inherit;overflow:hidden;@apply --paper-card-header;}.header iron-image{display:block;width:100%;--iron-image-width:100%;pointer-events:none;@apply --paper-card-header-image;}.header .title-text{padding:16px;font-size:24px;font-weight:400;color:var(--paper-card-header-color,#000);@apply --paper-card-header-text;}.header .title-text.over-image{position:absolute;bottom:0;@apply --paper-card-header-image-text;}:host ::slotted(.card-content){padding:16px;position:relative;@apply --paper-card-content;}:host ::slotted(.card-actions){border-top:1px solid #e8e8e8;padding:5px 16px;position:relative;@apply --paper-card-actions;}:host([elevation=\\\"1\\\"]){@apply --paper-material-elevation-1;}:host([elevation=\\\"2\\\"]){@apply --paper-material-elevation-2;}:host([elevation=\\\"3\\\"]){@apply --paper-material-elevation-3;}:host([elevation=\\\"4\\\"]){@apply --paper-material-elevation-4;}:host([elevation=\\\"5\\\"]){@apply --paper-material-elevation-5;}</style> <div class=header> <iron-image hidden$=[[!image]] aria-hidden$=[[_isHidden(image)]] src=[[image]] alt=[[alt]] placeholder=[[placeholderImage]] preload=[[preloadImage]] fade=[[fadeImage]]></iron-image> <div hidden$=[[!heading]] class$=\\\"title-text [[_computeHeadingClass(image)]]\\\">[[heading]]</div> </div> <slot></slot> </template> </dom-module>\");\n\nPolymer({\n  is: 'paper-card',\n\n  properties: {\n    /**\n     * The title of the card.\n     */\n    heading: {\n      type: String,\n      value: '',\n      observer: '_headingChanged'\n    },\n\n    /**\n     * The url of the title image of the card.\n     */\n    image: {\n      type: String,\n      value: ''\n    },\n\n    /**\n     * The text alternative of the card's title image.\n     */\n    alt: {\n      type: String\n    },\n\n    /**\n     * When `true`, any change to the image url property will cause the\n     * `placeholder` image to be shown until the image is fully rendered.\n     */\n    preloadImage: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * When `preloadImage` is true, setting `fadeImage` to true will cause the\n     * image to fade into place.\n     */\n    fadeImage: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * This image will be used as a background/placeholder until the src image has\n     * loaded. Use of a data-URI for placeholder is encouraged for instant rendering.\n     */\n    placeholderImage: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * The z-depth of the card, from 0-5.\n     */\n    elevation: {\n      type: Number,\n      value: 1,\n      reflectToAttribute: true\n    },\n\n    /**\n     * Set this to true to animate the card shadow when setting a new\n     * `z` value.\n     */\n    animatedShadow: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Read-only property used to pass down the `animatedShadow` value to\n     * the underlying paper-material style (since they have different names).\n     */\n    animated: {\n      type: Boolean,\n      reflectToAttribute: true,\n      readOnly: true,\n      computed: '_computeAnimated(animatedShadow)'\n    }\n  },\n\n  /**\n   * Format function for aria-hidden. Use the ! operator results in the\n   * empty string when given a falsy value.\n   */\n  _isHidden: function _isHidden(image) {\n    return image ? 'false' : 'true';\n  },\n\n  _headingChanged: function _headingChanged(heading) {\n    var currentHeading = this.getAttribute('heading'),\n        currentLabel = this.getAttribute('aria-label');\n\n    if (typeof currentLabel !== 'string' || currentLabel === currentHeading) {\n      this.setAttribute('aria-label', heading);\n    }\n  },\n\n  _computeHeadingClass: function _computeHeadingClass(image) {\n    return image ? ' over-image' : '';\n  },\n\n  _computeAnimated: function _computeAnimated(animatedShadow) {\n    return animatedShadow;\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/paper-card/paper-card.html?");

/***/ }),

/***/ "./bower_components/paper-progress/paper-progress.html":
/*!*************************************************************!*\
  !*** ./bower_components/paper-progress/paper-progress.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-flex-layout/iron-flex-layout.html */ \"./bower_components/iron-flex-layout/iron-flex-layout.html\");\n\n__webpack_require__(/*! ../iron-range-behavior/iron-range-behavior.html */ \"./bower_components/iron-range-behavior/iron-range-behavior.html\");\n\n__webpack_require__(/*! ../paper-styles/color.html */ \"./bower_components/paper-styles/color.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-progress> <template> <style>:host{display:block;width:200px;position:relative;overflow:hidden}:host([hidden]),[hidden]{display:none!important}#progressContainer{@apply --paper-progress-container;position:relative}#progressContainer,.indeterminate::after{height:var(--paper-progress-height,4px)}#primaryProgress,#secondaryProgress,.indeterminate::after{@apply --layout-fit;}#progressContainer,.indeterminate::after{background:var(--paper-progress-container-color,var(--google-grey-300))}:host(.transiting) #primaryProgress,:host(.transiting) #secondaryProgress{-webkit-transition-property:-webkit-transform;transition-property:transform;-webkit-transition-duration:var(--paper-progress-transition-duration,.08s);transition-duration:var(--paper-progress-transition-duration,.08s);-webkit-transition-timing-function:var(--paper-progress-transition-timing-function,ease);transition-timing-function:var(--paper-progress-transition-timing-function,ease);-webkit-transition-delay:var(--paper-progress-transition-delay,0s);transition-delay:var(--paper-progress-transition-delay,0s)}#primaryProgress,#secondaryProgress{@apply --layout-fit;-webkit-transform-origin:left center;transform-origin:left center;-webkit-transform:scaleX(0);transform:scaleX(0);will-change:transform}#primaryProgress{background:var(--paper-progress-active-color,var(--google-green-500))}#secondaryProgress{background:var(--paper-progress-secondary-color,var(--google-green-100))}:host([disabled]) #primaryProgress{background:var(--paper-progress-disabled-active-color,var(--google-grey-500))}:host([disabled]) #secondaryProgress{background:var(--paper-progress-disabled-secondary-color,var(--google-grey-300))}:host(:not([disabled])) #primaryProgress.indeterminate{-webkit-transform-origin:right center;transform-origin:right center;-webkit-animation:indeterminate-bar var(--paper-progress-indeterminate-cycle-duration,2s) linear infinite;animation:indeterminate-bar var(--paper-progress-indeterminate-cycle-duration,2s) linear infinite}:host(:not([disabled])) #primaryProgress.indeterminate::after{content:\\\"\\\";-webkit-transform-origin:center center;transform-origin:center center;-webkit-animation:indeterminate-splitter var(--paper-progress-indeterminate-cycle-duration,2s) linear infinite;animation:indeterminate-splitter var(--paper-progress-indeterminate-cycle-duration,2s) linear infinite}@-webkit-keyframes indeterminate-bar{0%{-webkit-transform:scaleX(1) translateX(-100%)}50%{-webkit-transform:scaleX(1) translateX(0)}75%{-webkit-transform:scaleX(1) translateX(0);-webkit-animation-timing-function:cubic-bezier(.28,.62,.37,.91)}100%{-webkit-transform:scaleX(0) translateX(0)}}@-webkit-keyframes indeterminate-splitter{0%{-webkit-transform:scaleX(.75) translateX(-125%)}30%{-webkit-transform:scaleX(.75) translateX(-125%);-webkit-animation-timing-function:cubic-bezier(.42,0,.6,.8)}90%{-webkit-transform:scaleX(.75) translateX(125%)}100%{-webkit-transform:scaleX(.75) translateX(125%)}}@keyframes indeterminate-bar{0%{transform:scaleX(1) translateX(-100%)}50%{transform:scaleX(1) translateX(0)}75%{transform:scaleX(1) translateX(0);animation-timing-function:cubic-bezier(.28,.62,.37,.91)}100%{transform:scaleX(0) translateX(0)}}@keyframes indeterminate-splitter{0%{transform:scaleX(.75) translateX(-125%)}30%{transform:scaleX(.75) translateX(-125%);animation-timing-function:cubic-bezier(.42,0,.6,.8)}90%{transform:scaleX(.75) translateX(125%)}100%{transform:scaleX(.75) translateX(125%)}}</style> <div id=progressContainer> <div id=secondaryProgress hidden$=[[_hideSecondaryProgress(secondaryRatio)]]></div> <div id=primaryProgress></div> </div> </template> </dom-module>\");\n\nPolymer({\n  is: 'paper-progress',\n\n  behaviors: [Polymer.IronRangeBehavior],\n\n  properties: {\n    /**\n     * The number that represents the current secondary progress.\n     */\n    secondaryProgress: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * The secondary ratio\n     */\n    secondaryRatio: {\n      type: Number,\n      value: 0,\n      readOnly: true\n    },\n\n    /**\n     * Use an indeterminate progress indicator.\n     */\n    indeterminate: {\n      type: Boolean,\n      value: false,\n      observer: '_toggleIndeterminate'\n    },\n\n    /**\n     * True if the progress is disabled.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      observer: '_disabledChanged'\n    }\n  },\n\n  observers: ['_progressChanged(secondaryProgress, value, min, max, indeterminate)'],\n\n  hostAttributes: {\n    role: 'progressbar'\n  },\n\n  _toggleIndeterminate: function _toggleIndeterminate(indeterminate) {\n    // If we use attribute/class binding, the animation sometimes doesn't translate properly\n    // on Safari 7.1. So instead, we toggle the class here in the update method.\n    this.toggleClass('indeterminate', indeterminate, this.$.primaryProgress);\n  },\n\n  _transformProgress: function _transformProgress(progress, ratio) {\n    var transform = 'scaleX(' + ratio / 100 + ')';\n    progress.style.transform = progress.style.webkitTransform = transform;\n  },\n\n  _mainRatioChanged: function _mainRatioChanged(ratio) {\n    this._transformProgress(this.$.primaryProgress, ratio);\n  },\n\n  _progressChanged: function _progressChanged(secondaryProgress, value, min, max, indeterminate) {\n    secondaryProgress = this._clampValue(secondaryProgress);\n    value = this._clampValue(value);\n\n    var secondaryRatio = this._calcRatio(secondaryProgress) * 100;\n    var mainRatio = this._calcRatio(value) * 100;\n\n    this._setSecondaryRatio(secondaryRatio);\n    this._transformProgress(this.$.secondaryProgress, secondaryRatio);\n    this._transformProgress(this.$.primaryProgress, mainRatio);\n\n    this.secondaryProgress = secondaryProgress;\n\n    if (indeterminate) {\n      this.removeAttribute('aria-valuenow');\n    } else {\n      this.setAttribute('aria-valuenow', value);\n    }\n    this.setAttribute('aria-valuemin', min);\n    this.setAttribute('aria-valuemax', max);\n  },\n\n  _disabledChanged: function _disabledChanged(disabled) {\n    this.setAttribute('aria-disabled', disabled ? 'true' : 'false');\n  },\n\n  _hideSecondaryProgress: function _hideSecondaryProgress(secondaryRatio) {\n    return secondaryRatio === 0;\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/paper-progress/paper-progress.html?");

/***/ }),

/***/ "./bower_components/paper-ripple/paper-ripple.html":
/*!*********************************************************!*\
  !*** ./bower_components/paper-ripple/paper-ripple.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../iron-a11y-keys-behavior/iron-a11y-keys-behavior.html */ \"./bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-ripple> <template> <style>:host{display:block;position:absolute;border-radius:inherit;overflow:hidden;top:0;left:0;right:0;bottom:0;pointer-events:none}:host([animating]){-webkit-transform:translate(0,0);transform:translate3d(0,0,0)}#background,#waves,.wave,.wave-container{pointer-events:none;position:absolute;top:0;left:0;width:100%;height:100%}#background,.wave{opacity:0}#waves,.wave{overflow:hidden}.wave,.wave-container{border-radius:50%}:host(.circle) #background,:host(.circle) #waves{border-radius:50%}:host(.circle) .wave-container{overflow:hidden}</style> <div id=background></div> <div id=waves></div> </template> </dom-module>\");\n\n(function () {\n  'use strict';\n\n  var Utility = {\n    distance: function distance(x1, y1, x2, y2) {\n      var xDelta = x1 - x2;\n      var yDelta = y1 - y2;\n\n      return Math.sqrt(xDelta * xDelta + yDelta * yDelta);\n    },\n\n    now: window.performance && window.performance.now ? window.performance.now.bind(window.performance) : Date.now\n  };\n\n  /**\n   * @param {HTMLElement} element\n   * @constructor\n   */\n  function ElementMetrics(element) {\n    this.element = element;\n    this.width = this.boundingRect.width;\n    this.height = this.boundingRect.height;\n\n    this.size = Math.max(this.width, this.height);\n  }\n\n  ElementMetrics.prototype = {\n    get boundingRect() {\n      return this.element.getBoundingClientRect();\n    },\n\n    furthestCornerDistanceFrom: function furthestCornerDistanceFrom(x, y) {\n      var topLeft = Utility.distance(x, y, 0, 0);\n      var topRight = Utility.distance(x, y, this.width, 0);\n      var bottomLeft = Utility.distance(x, y, 0, this.height);\n      var bottomRight = Utility.distance(x, y, this.width, this.height);\n\n      return Math.max(topLeft, topRight, bottomLeft, bottomRight);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element\n   * @constructor\n   */\n  function Ripple(element) {\n    this.element = element;\n    this.color = window.getComputedStyle(element).color;\n\n    this.wave = document.createElement('div');\n    this.waveContainer = document.createElement('div');\n    this.wave.style.backgroundColor = this.color;\n    this.wave.classList.add('wave');\n    this.waveContainer.classList.add('wave-container');\n    Polymer.dom(this.waveContainer).appendChild(this.wave);\n\n    this.resetInteractionState();\n  }\n\n  Ripple.MAX_RADIUS = 300;\n\n  Ripple.prototype = {\n    get recenters() {\n      return this.element.recenters;\n    },\n\n    get center() {\n      return this.element.center;\n    },\n\n    get mouseDownElapsed() {\n      var elapsed;\n\n      if (!this.mouseDownStart) {\n        return 0;\n      }\n\n      elapsed = Utility.now() - this.mouseDownStart;\n\n      if (this.mouseUpStart) {\n        elapsed -= this.mouseUpElapsed;\n      }\n\n      return elapsed;\n    },\n\n    get mouseUpElapsed() {\n      return this.mouseUpStart ? Utility.now() - this.mouseUpStart : 0;\n    },\n\n    get mouseDownElapsedSeconds() {\n      return this.mouseDownElapsed / 1000;\n    },\n\n    get mouseUpElapsedSeconds() {\n      return this.mouseUpElapsed / 1000;\n    },\n\n    get mouseInteractionSeconds() {\n      return this.mouseDownElapsedSeconds + this.mouseUpElapsedSeconds;\n    },\n\n    get initialOpacity() {\n      return this.element.initialOpacity;\n    },\n\n    get opacityDecayVelocity() {\n      return this.element.opacityDecayVelocity;\n    },\n\n    get radius() {\n      var width2 = this.containerMetrics.width * this.containerMetrics.width;\n      var height2 = this.containerMetrics.height * this.containerMetrics.height;\n      var waveRadius = Math.min(Math.sqrt(width2 + height2), Ripple.MAX_RADIUS) * 1.1 + 5;\n\n      var duration = 1.1 - 0.2 * (waveRadius / Ripple.MAX_RADIUS);\n      var timeNow = this.mouseInteractionSeconds / duration;\n      var size = waveRadius * (1 - Math.pow(80, -timeNow));\n\n      return Math.abs(size);\n    },\n\n    get opacity() {\n      if (!this.mouseUpStart) {\n        return this.initialOpacity;\n      }\n\n      return Math.max(0, this.initialOpacity - this.mouseUpElapsedSeconds * this.opacityDecayVelocity);\n    },\n\n    get outerOpacity() {\n      // Linear increase in background opacity, capped at the opacity\n      // of the wavefront (waveOpacity).\n      var outerOpacity = this.mouseUpElapsedSeconds * 0.3;\n      var waveOpacity = this.opacity;\n\n      return Math.max(0, Math.min(outerOpacity, waveOpacity));\n    },\n\n    get isOpacityFullyDecayed() {\n      return this.opacity < 0.01 && this.radius >= Math.min(this.maxRadius, Ripple.MAX_RADIUS);\n    },\n\n    get isRestingAtMaxRadius() {\n      return this.opacity >= this.initialOpacity && this.radius >= Math.min(this.maxRadius, Ripple.MAX_RADIUS);\n    },\n\n    get isAnimationComplete() {\n      return this.mouseUpStart ? this.isOpacityFullyDecayed : this.isRestingAtMaxRadius;\n    },\n\n    get translationFraction() {\n      return Math.min(1, this.radius / this.containerMetrics.size * 2 / Math.sqrt(2));\n    },\n\n    get xNow() {\n      if (this.xEnd) {\n        return this.xStart + this.translationFraction * (this.xEnd - this.xStart);\n      }\n\n      return this.xStart;\n    },\n\n    get yNow() {\n      if (this.yEnd) {\n        return this.yStart + this.translationFraction * (this.yEnd - this.yStart);\n      }\n\n      return this.yStart;\n    },\n\n    get isMouseDown() {\n      return this.mouseDownStart && !this.mouseUpStart;\n    },\n\n    resetInteractionState: function resetInteractionState() {\n      this.maxRadius = 0;\n      this.mouseDownStart = 0;\n      this.mouseUpStart = 0;\n\n      this.xStart = 0;\n      this.yStart = 0;\n      this.xEnd = 0;\n      this.yEnd = 0;\n      this.slideDistance = 0;\n\n      this.containerMetrics = new ElementMetrics(this.element);\n    },\n\n    draw: function draw() {\n      var scale;\n      var translateString;\n      var dx;\n      var dy;\n\n      this.wave.style.opacity = this.opacity;\n\n      scale = this.radius / (this.containerMetrics.size / 2);\n      dx = this.xNow - this.containerMetrics.width / 2;\n      dy = this.yNow - this.containerMetrics.height / 2;\n\n      // 2d transform for safari because of border-radius and overflow:hidden clipping bug.\n      // https://bugs.webkit.org/show_bug.cgi?id=98538\n      this.waveContainer.style.webkitTransform = 'translate(' + dx + 'px, ' + dy + 'px)';\n      this.waveContainer.style.transform = 'translate3d(' + dx + 'px, ' + dy + 'px, 0)';\n      this.wave.style.webkitTransform = 'scale(' + scale + ',' + scale + ')';\n      this.wave.style.transform = 'scale3d(' + scale + ',' + scale + ',1)';\n    },\n\n    /** @param {Event=} event */\n    downAction: function downAction(event) {\n      var xCenter = this.containerMetrics.width / 2;\n      var yCenter = this.containerMetrics.height / 2;\n\n      this.resetInteractionState();\n      this.mouseDownStart = Utility.now();\n\n      if (this.center) {\n        this.xStart = xCenter;\n        this.yStart = yCenter;\n        this.slideDistance = Utility.distance(this.xStart, this.yStart, this.xEnd, this.yEnd);\n      } else {\n        this.xStart = event ? event.detail.x - this.containerMetrics.boundingRect.left : this.containerMetrics.width / 2;\n        this.yStart = event ? event.detail.y - this.containerMetrics.boundingRect.top : this.containerMetrics.height / 2;\n      }\n\n      if (this.recenters) {\n        this.xEnd = xCenter;\n        this.yEnd = yCenter;\n        this.slideDistance = Utility.distance(this.xStart, this.yStart, this.xEnd, this.yEnd);\n      }\n\n      this.maxRadius = this.containerMetrics.furthestCornerDistanceFrom(this.xStart, this.yStart);\n\n      this.waveContainer.style.top = (this.containerMetrics.height - this.containerMetrics.size) / 2 + 'px';\n      this.waveContainer.style.left = (this.containerMetrics.width - this.containerMetrics.size) / 2 + 'px';\n\n      this.waveContainer.style.width = this.containerMetrics.size + 'px';\n      this.waveContainer.style.height = this.containerMetrics.size + 'px';\n    },\n\n    /** @param {Event=} event */\n    upAction: function upAction(event) {\n      if (!this.isMouseDown) {\n        return;\n      }\n\n      this.mouseUpStart = Utility.now();\n    },\n\n    remove: function remove() {\n      Polymer.dom(this.waveContainer.parentNode).removeChild(this.waveContainer);\n    }\n  };\n\n  Polymer({\n    is: 'paper-ripple',\n\n    behaviors: [Polymer.IronA11yKeysBehavior],\n\n    properties: {\n      /**\n       * The initial opacity set on the wave.\n       *\n       * @attribute initialOpacity\n       * @type number\n       * @default 0.25\n       */\n      initialOpacity: {\n        type: Number,\n        value: 0.25\n      },\n\n      /**\n       * How fast (opacity per second) the wave fades out.\n       *\n       * @attribute opacityDecayVelocity\n       * @type number\n       * @default 0.8\n       */\n      opacityDecayVelocity: {\n        type: Number,\n        value: 0.8\n      },\n\n      /**\n       * If true, ripples will exhibit a gravitational pull towards\n       * the center of their container as they fade away.\n       *\n       * @attribute recenters\n       * @type boolean\n       * @default false\n       */\n      recenters: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * If true, ripples will center inside its container\n       *\n       * @attribute recenters\n       * @type boolean\n       * @default false\n       */\n      center: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * A list of the visual ripples.\n       *\n       * @attribute ripples\n       * @type Array\n       * @default []\n       */\n      ripples: {\n        type: Array,\n        value: function value() {\n          return [];\n        }\n      },\n\n      /**\n       * True when there are visible ripples animating within the\n       * element.\n       */\n      animating: {\n        type: Boolean,\n        readOnly: true,\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * If true, the ripple will remain in the \"down\" state until `holdDown`\n       * is set to false again.\n       */\n      holdDown: {\n        type: Boolean,\n        value: false,\n        observer: '_holdDownChanged'\n      },\n\n      /**\n       * If true, the ripple will not generate a ripple effect\n       * via pointer interaction.\n       * Calling ripple's imperative api like `simulatedRipple` will\n       * still generate the ripple effect.\n       */\n      noink: {\n        type: Boolean,\n        value: false\n      },\n\n      _animating: {\n        type: Boolean\n      },\n\n      _boundAnimate: {\n        type: Function,\n        value: function value() {\n          return this.animate.bind(this);\n        }\n      }\n    },\n\n    get target() {\n      return this.keyEventTarget;\n    },\n\n    keyBindings: {\n      'enter:keydown': '_onEnterKeydown',\n      'space:keydown': '_onSpaceKeydown',\n      'space:keyup': '_onSpaceKeyup'\n    },\n\n    attached: function attached() {\n      // Set up a11yKeysBehavior to listen to key events on the target,\n      // so that space and enter activate the ripple even if the target doesn't\n      // handle key events. The key handlers deal with `noink` themselves.\n      if (this.parentNode.nodeType == 11) {\n        // DOCUMENT_FRAGMENT_NODE\n        this.keyEventTarget = Polymer.dom(this).getOwnerRoot().host;\n      } else {\n        this.keyEventTarget = this.parentNode;\n      }\n      var keyEventTarget = /** @type {!EventTarget} */this.keyEventTarget;\n      this.listen(keyEventTarget, 'up', 'uiUpAction');\n      this.listen(keyEventTarget, 'down', 'uiDownAction');\n    },\n\n    detached: function detached() {\n      this.unlisten(this.keyEventTarget, 'up', 'uiUpAction');\n      this.unlisten(this.keyEventTarget, 'down', 'uiDownAction');\n      this.keyEventTarget = null;\n    },\n\n    get shouldKeepAnimating() {\n      for (var index = 0; index < this.ripples.length; ++index) {\n        if (!this.ripples[index].isAnimationComplete) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    simulatedRipple: function simulatedRipple() {\n      this.downAction(null);\n\n      // Please see polymer/polymer#1305\n      this.async(function () {\n        this.upAction();\n      }, 1);\n    },\n\n    /**\n     * Provokes a ripple down effect via a UI event,\n     * respecting the `noink` property.\n     * @param {Event=} event\n     */\n    uiDownAction: function uiDownAction(event) {\n      if (!this.noink) {\n        this.downAction(event);\n      }\n    },\n\n    /**\n     * Provokes a ripple down effect via a UI event,\n     * *not* respecting the `noink` property.\n     * @param {Event=} event\n     */\n    downAction: function downAction(event) {\n      if (this.holdDown && this.ripples.length > 0) {\n        return;\n      }\n\n      var ripple = this.addRipple();\n\n      ripple.downAction(event);\n\n      if (!this._animating) {\n        this._animating = true;\n        this.animate();\n      }\n    },\n\n    /**\n     * Provokes a ripple up effect via a UI event,\n     * respecting the `noink` property.\n     * @param {Event=} event\n     */\n    uiUpAction: function uiUpAction(event) {\n      if (!this.noink) {\n        this.upAction(event);\n      }\n    },\n\n    /**\n     * Provokes a ripple up effect via a UI event,\n     * *not* respecting the `noink` property.\n     * @param {Event=} event\n     */\n    upAction: function upAction(event) {\n      if (this.holdDown) {\n        return;\n      }\n\n      this.ripples.forEach(function (ripple) {\n        ripple.upAction(event);\n      });\n\n      this._animating = true;\n      this.animate();\n    },\n\n    onAnimationComplete: function onAnimationComplete() {\n      this._animating = false;\n      this.$.background.style.backgroundColor = null;\n      this.fire('transitionend');\n    },\n\n    addRipple: function addRipple() {\n      var ripple = new Ripple(this);\n\n      Polymer.dom(this.$.waves).appendChild(ripple.waveContainer);\n      this.$.background.style.backgroundColor = ripple.color;\n      this.ripples.push(ripple);\n\n      this._setAnimating(true);\n\n      return ripple;\n    },\n\n    removeRipple: function removeRipple(ripple) {\n      var rippleIndex = this.ripples.indexOf(ripple);\n\n      if (rippleIndex < 0) {\n        return;\n      }\n\n      this.ripples.splice(rippleIndex, 1);\n\n      ripple.remove();\n\n      if (!this.ripples.length) {\n        this._setAnimating(false);\n      }\n    },\n\n    /**\n     * This conflicts with Element#antimate().\n     * https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n     * @suppress {checkTypes}\n     */\n    animate: function animate() {\n      if (!this._animating) {\n        return;\n      }\n      var index;\n      var ripple;\n\n      for (index = 0; index < this.ripples.length; ++index) {\n        ripple = this.ripples[index];\n\n        ripple.draw();\n\n        this.$.background.style.opacity = ripple.outerOpacity;\n\n        if (ripple.isOpacityFullyDecayed && !ripple.isRestingAtMaxRadius) {\n          this.removeRipple(ripple);\n        }\n      }\n\n      if (!this.shouldKeepAnimating && this.ripples.length === 0) {\n        this.onAnimationComplete();\n      } else {\n        window.requestAnimationFrame(this._boundAnimate);\n      }\n    },\n\n    _onEnterKeydown: function _onEnterKeydown() {\n      this.uiDownAction();\n      this.async(this.uiUpAction, 1);\n    },\n\n    _onSpaceKeydown: function _onSpaceKeydown() {\n      this.uiDownAction();\n    },\n\n    _onSpaceKeyup: function _onSpaceKeyup() {\n      this.uiUpAction();\n    },\n\n    // note: holdDown does not respect noink since it can be a focus based\n    // effect.\n    _holdDownChanged: function _holdDownChanged(newVal, oldVal) {\n      if (oldVal === undefined) {\n        return;\n      }\n      if (newVal) {\n        this.downAction();\n      } else {\n        this.upAction();\n      }\n    }\n\n    /**\n    Fired when the animation finishes.\n    This is useful if you want to wait until\n    the ripple animation finishes to perform some action.\n     @event transitionend\n    @param {{node: Object}} detail Contains the animated node.\n    */\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/paper-ripple/paper-ripple.html?");

/***/ }),

/***/ "./bower_components/paper-styles/color.html":
/*!**************************************************!*\
  !*** ./bower_components/paper-styles/color.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--google-red-100:#f4c7c3;--google-red-300:#e67c73;--google-red-500:#db4437;--google-red-700:#c53929;--google-blue-100:#c6dafc;--google-blue-300:#7baaf7;--google-blue-500:#4285f4;--google-blue-700:#3367d6;--google-green-100:#b7e1cd;--google-green-300:#57bb8a;--google-green-500:#0f9d58;--google-green-700:#0b8043;--google-yellow-100:#fce8b2;--google-yellow-300:#f7cb4d;--google-yellow-500:#f4b400;--google-yellow-700:#f09300;--google-grey-100:#f5f5f5;--google-grey-300:#e0e0e0;--google-grey-500:#9e9e9e;--google-grey-700:#616161;--paper-red-50:#ffebee;--paper-red-100:#ffcdd2;--paper-red-200:#ef9a9a;--paper-red-300:#e57373;--paper-red-400:#ef5350;--paper-red-500:#f44336;--paper-red-600:#e53935;--paper-red-700:#d32f2f;--paper-red-800:#c62828;--paper-red-900:#b71c1c;--paper-red-a100:#ff8a80;--paper-red-a200:#ff5252;--paper-red-a400:#ff1744;--paper-red-a700:#d50000;--paper-pink-50:#fce4ec;--paper-pink-100:#f8bbd0;--paper-pink-200:#f48fb1;--paper-pink-300:#f06292;--paper-pink-400:#ec407a;--paper-pink-500:#e91e63;--paper-pink-600:#d81b60;--paper-pink-700:#c2185b;--paper-pink-800:#ad1457;--paper-pink-900:#880e4f;--paper-pink-a100:#ff80ab;--paper-pink-a200:#ff4081;--paper-pink-a400:#f50057;--paper-pink-a700:#c51162;--paper-purple-50:#f3e5f5;--paper-purple-100:#e1bee7;--paper-purple-200:#ce93d8;--paper-purple-300:#ba68c8;--paper-purple-400:#ab47bc;--paper-purple-500:#9c27b0;--paper-purple-600:#8e24aa;--paper-purple-700:#7b1fa2;--paper-purple-800:#6a1b9a;--paper-purple-900:#4a148c;--paper-purple-a100:#ea80fc;--paper-purple-a200:#e040fb;--paper-purple-a400:#d500f9;--paper-purple-a700:#aa00ff;--paper-deep-purple-50:#ede7f6;--paper-deep-purple-100:#d1c4e9;--paper-deep-purple-200:#b39ddb;--paper-deep-purple-300:#9575cd;--paper-deep-purple-400:#7e57c2;--paper-deep-purple-500:#673ab7;--paper-deep-purple-600:#5e35b1;--paper-deep-purple-700:#512da8;--paper-deep-purple-800:#4527a0;--paper-deep-purple-900:#311b92;--paper-deep-purple-a100:#b388ff;--paper-deep-purple-a200:#7c4dff;--paper-deep-purple-a400:#651fff;--paper-deep-purple-a700:#6200ea;--paper-indigo-50:#e8eaf6;--paper-indigo-100:#c5cae9;--paper-indigo-200:#9fa8da;--paper-indigo-300:#7986cb;--paper-indigo-400:#5c6bc0;--paper-indigo-500:#3f51b5;--paper-indigo-600:#3949ab;--paper-indigo-700:#303f9f;--paper-indigo-800:#283593;--paper-indigo-900:#1a237e;--paper-indigo-a100:#8c9eff;--paper-indigo-a200:#536dfe;--paper-indigo-a400:#3d5afe;--paper-indigo-a700:#304ffe;--paper-blue-50:#e3f2fd;--paper-blue-100:#bbdefb;--paper-blue-200:#90caf9;--paper-blue-300:#64b5f6;--paper-blue-400:#42a5f5;--paper-blue-500:#2196f3;--paper-blue-600:#1e88e5;--paper-blue-700:#1976d2;--paper-blue-800:#1565c0;--paper-blue-900:#0d47a1;--paper-blue-a100:#82b1ff;--paper-blue-a200:#448aff;--paper-blue-a400:#2979ff;--paper-blue-a700:#2962ff;--paper-light-blue-50:#e1f5fe;--paper-light-blue-100:#b3e5fc;--paper-light-blue-200:#81d4fa;--paper-light-blue-300:#4fc3f7;--paper-light-blue-400:#29b6f6;--paper-light-blue-500:#03a9f4;--paper-light-blue-600:#039be5;--paper-light-blue-700:#0288d1;--paper-light-blue-800:#0277bd;--paper-light-blue-900:#01579b;--paper-light-blue-a100:#80d8ff;--paper-light-blue-a200:#40c4ff;--paper-light-blue-a400:#00b0ff;--paper-light-blue-a700:#0091ea;--paper-cyan-50:#e0f7fa;--paper-cyan-100:#b2ebf2;--paper-cyan-200:#80deea;--paper-cyan-300:#4dd0e1;--paper-cyan-400:#26c6da;--paper-cyan-500:#00bcd4;--paper-cyan-600:#00acc1;--paper-cyan-700:#0097a7;--paper-cyan-800:#00838f;--paper-cyan-900:#006064;--paper-cyan-a100:#84ffff;--paper-cyan-a200:#18ffff;--paper-cyan-a400:#00e5ff;--paper-cyan-a700:#00b8d4;--paper-teal-50:#e0f2f1;--paper-teal-100:#b2dfdb;--paper-teal-200:#80cbc4;--paper-teal-300:#4db6ac;--paper-teal-400:#26a69a;--paper-teal-500:#009688;--paper-teal-600:#00897b;--paper-teal-700:#00796b;--paper-teal-800:#00695c;--paper-teal-900:#004d40;--paper-teal-a100:#a7ffeb;--paper-teal-a200:#64ffda;--paper-teal-a400:#1de9b6;--paper-teal-a700:#00bfa5;--paper-green-50:#e8f5e9;--paper-green-100:#c8e6c9;--paper-green-200:#a5d6a7;--paper-green-300:#81c784;--paper-green-400:#66bb6a;--paper-green-500:#4caf50;--paper-green-600:#43a047;--paper-green-700:#388e3c;--paper-green-800:#2e7d32;--paper-green-900:#1b5e20;--paper-green-a100:#b9f6ca;--paper-green-a200:#69f0ae;--paper-green-a400:#00e676;--paper-green-a700:#00c853;--paper-light-green-50:#f1f8e9;--paper-light-green-100:#dcedc8;--paper-light-green-200:#c5e1a5;--paper-light-green-300:#aed581;--paper-light-green-400:#9ccc65;--paper-light-green-500:#8bc34a;--paper-light-green-600:#7cb342;--paper-light-green-700:#689f38;--paper-light-green-800:#558b2f;--paper-light-green-900:#33691e;--paper-light-green-a100:#ccff90;--paper-light-green-a200:#b2ff59;--paper-light-green-a400:#76ff03;--paper-light-green-a700:#64dd17;--paper-lime-50:#f9fbe7;--paper-lime-100:#f0f4c3;--paper-lime-200:#e6ee9c;--paper-lime-300:#dce775;--paper-lime-400:#d4e157;--paper-lime-500:#cddc39;--paper-lime-600:#c0ca33;--paper-lime-700:#afb42b;--paper-lime-800:#9e9d24;--paper-lime-900:#827717;--paper-lime-a100:#f4ff81;--paper-lime-a200:#eeff41;--paper-lime-a400:#c6ff00;--paper-lime-a700:#aeea00;--paper-yellow-50:#fffde7;--paper-yellow-100:#fff9c4;--paper-yellow-200:#fff59d;--paper-yellow-300:#fff176;--paper-yellow-400:#ffee58;--paper-yellow-500:#ffeb3b;--paper-yellow-600:#fdd835;--paper-yellow-700:#fbc02d;--paper-yellow-800:#f9a825;--paper-yellow-900:#f57f17;--paper-yellow-a100:#ffff8d;--paper-yellow-a200:#ffff00;--paper-yellow-a400:#ffea00;--paper-yellow-a700:#ffd600;--paper-amber-50:#fff8e1;--paper-amber-100:#ffecb3;--paper-amber-200:#ffe082;--paper-amber-300:#ffd54f;--paper-amber-400:#ffca28;--paper-amber-500:#ffc107;--paper-amber-600:#ffb300;--paper-amber-700:#ffa000;--paper-amber-800:#ff8f00;--paper-amber-900:#ff6f00;--paper-amber-a100:#ffe57f;--paper-amber-a200:#ffd740;--paper-amber-a400:#ffc400;--paper-amber-a700:#ffab00;--paper-orange-50:#fff3e0;--paper-orange-100:#ffe0b2;--paper-orange-200:#ffcc80;--paper-orange-300:#ffb74d;--paper-orange-400:#ffa726;--paper-orange-500:#ff9800;--paper-orange-600:#fb8c00;--paper-orange-700:#f57c00;--paper-orange-800:#ef6c00;--paper-orange-900:#e65100;--paper-orange-a100:#ffd180;--paper-orange-a200:#ffab40;--paper-orange-a400:#ff9100;--paper-orange-a700:#ff6500;--paper-deep-orange-50:#fbe9e7;--paper-deep-orange-100:#ffccbc;--paper-deep-orange-200:#ffab91;--paper-deep-orange-300:#ff8a65;--paper-deep-orange-400:#ff7043;--paper-deep-orange-500:#ff5722;--paper-deep-orange-600:#f4511e;--paper-deep-orange-700:#e64a19;--paper-deep-orange-800:#d84315;--paper-deep-orange-900:#bf360c;--paper-deep-orange-a100:#ff9e80;--paper-deep-orange-a200:#ff6e40;--paper-deep-orange-a400:#ff3d00;--paper-deep-orange-a700:#dd2c00;--paper-brown-50:#efebe9;--paper-brown-100:#d7ccc8;--paper-brown-200:#bcaaa4;--paper-brown-300:#a1887f;--paper-brown-400:#8d6e63;--paper-brown-500:#795548;--paper-brown-600:#6d4c41;--paper-brown-700:#5d4037;--paper-brown-800:#4e342e;--paper-brown-900:#3e2723;--paper-grey-50:#fafafa;--paper-grey-100:#f5f5f5;--paper-grey-200:#eeeeee;--paper-grey-300:#e0e0e0;--paper-grey-400:#bdbdbd;--paper-grey-500:#9e9e9e;--paper-grey-600:#757575;--paper-grey-700:#616161;--paper-grey-800:#424242;--paper-grey-900:#212121;--paper-blue-grey-50:#eceff1;--paper-blue-grey-100:#cfd8dc;--paper-blue-grey-200:#b0bec5;--paper-blue-grey-300:#90a4ae;--paper-blue-grey-400:#78909c;--paper-blue-grey-500:#607d8b;--paper-blue-grey-600:#546e7a;--paper-blue-grey-700:#455a64;--paper-blue-grey-800:#37474f;--paper-blue-grey-900:#263238;--dark-divider-opacity:0.12;--dark-disabled-opacity:0.38;--dark-secondary-opacity:0.54;--dark-primary-opacity:0.87;--light-divider-opacity:0.12;--light-disabled-opacity:0.3;--light-secondary-opacity:0.7;--light-primary-opacity:1.0}</style> </custom-style>\");\n\n//# sourceURL=webpack:///./bower_components/paper-styles/color.html?");

/***/ }),

/***/ "./bower_components/paper-styles/default-theme.html":
/*!**********************************************************!*\
  !*** ./bower_components/paper-styles/default-theme.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ./color.html */ \"./bower_components/paper-styles/color.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--primary-text-color:var(--light-theme-text-color);--primary-background-color:var(--light-theme-background-color);--secondary-text-color:var(--light-theme-secondary-color);--disabled-text-color:var(--light-theme-disabled-color);--divider-color:var(--light-theme-divider-color);--error-color:var(--paper-deep-orange-a700);--primary-color:var(--paper-indigo-500);--light-primary-color:var(--paper-indigo-100);--dark-primary-color:var(--paper-indigo-700);--accent-color:var(--paper-pink-a200);--light-accent-color:var(--paper-pink-a100);--dark-accent-color:var(--paper-pink-a400);--light-theme-background-color:#ffffff;--light-theme-base-color:#000000;--light-theme-text-color:var(--paper-grey-900);--light-theme-secondary-color:#737373;--light-theme-disabled-color:#9b9b9b;--light-theme-divider-color:#dbdbdb;--dark-theme-background-color:var(--paper-grey-900);--dark-theme-base-color:#ffffff;--dark-theme-text-color:#ffffff;--dark-theme-secondary-color:#bcbcbc;--dark-theme-disabled-color:#646464;--dark-theme-divider-color:#3c3c3c;--text-primary-color:var(--dark-theme-text-color);--default-primary-color:var(--primary-color)}</style> </custom-style>\");\n\n//# sourceURL=webpack:///./bower_components/paper-styles/default-theme.html?");

/***/ }),

/***/ "./bower_components/paper-styles/element-styles/paper-material-styles.html":
/*!*********************************************************************************!*\
  !*** ./bower_components/paper-styles/element-styles/paper-material-styles.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../shadow.html */ \"./bower_components/paper-styles/shadow.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-material-styles> <template> <style>:host,html{--paper-material:{display:block;position:relative};--paper-material-elevation-1:{@apply --shadow-elevation-2dp;};--paper-material-elevation-2:{@apply --shadow-elevation-4dp;};--paper-material-elevation-3:{@apply --shadow-elevation-6dp;};--paper-material-elevation-4:{@apply --shadow-elevation-8dp;};--paper-material-elevation-5:{@apply --shadow-elevation-16dp;};}.paper-material,:host(.paper-material){@apply --paper-material;}.paper-material[elevation=\\\"1\\\"],:host(.paper-material[elevation=\\\"1\\\"]){@apply --paper-material-elevation-1;}.paper-material[elevation=\\\"2\\\"],:host(.paper-material[elevation=\\\"2\\\"]){@apply --paper-material-elevation-2;}.paper-material[elevation=\\\"3\\\"],:host(.paper-material[elevation=\\\"3\\\"]){@apply --paper-material-elevation-3;}.paper-material[elevation=\\\"4\\\"],:host(.paper-material[elevation=\\\"4\\\"]){@apply --paper-material-elevation-4;}.paper-material[elevation=\\\"5\\\"],:host(.paper-material[elevation=\\\"5\\\"]){@apply --paper-material-elevation-5;}</style> </template> </dom-module>\");\n\n//# sourceURL=webpack:///./bower_components/paper-styles/element-styles/paper-material-styles.html?");

/***/ }),

/***/ "./bower_components/paper-styles/shadow.html":
/*!***************************************************!*\
  !*** ./bower_components/paper-styles/shadow.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--shadow-transition:{transition:box-shadow .28s cubic-bezier(.4,0,.2,1)};--shadow-none:{box-shadow:none};--shadow-elevation-2dp:{box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2)};--shadow-elevation-3dp:{box-shadow:0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12),0 3px 3px -2px rgba(0,0,0,.4)};--shadow-elevation-4dp:{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.4)};--shadow-elevation-6dp:{box-shadow:0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12),0 3px 5px -1px rgba(0,0,0,.4)};--shadow-elevation-8dp:{box-shadow:0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12),0 5px 5px -3px rgba(0,0,0,.4)};--shadow-elevation-12dp:{box-shadow:0 12px 16px 1px rgba(0,0,0,.14),0 4px 22px 3px rgba(0,0,0,.12),0 6px 7px -4px rgba(0,0,0,.4)};--shadow-elevation-16dp:{box-shadow:0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12),0 8px 10px -5px rgba(0,0,0,.4)};--shadow-elevation-24dp:{box-shadow:0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12),0 11px 15px -7px rgba(0,0,0,.4)};}</style> </custom-style>\");\n\n//# sourceURL=webpack:///./bower_components/paper-styles/shadow.html?");

/***/ }),

/***/ "./bower_components/paper-styles/typography.html":
/*!*******************************************************!*\
  !*** ./bower_components/paper-styles/typography.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../font-roboto/roboto.html */ \"./bower_components/font-roboto/roboto.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.toBody(\"<custom-style> <style is=custom-style>html{--paper-font-common-base:{font-family:Roboto,Noto,sans-serif;-webkit-font-smoothing:antialiased};--paper-font-common-code:{font-family:'Roboto Mono',Consolas,Menlo,monospace;-webkit-font-smoothing:antialiased};--paper-font-common-expensive-kerning:{text-rendering:optimizeLegibility};--paper-font-common-nowrap:{white-space:nowrap;overflow:hidden;text-overflow:ellipsis};--paper-font-display4:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:112px;font-weight:300;letter-spacing:-.044em;line-height:120px};--paper-font-display3:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:56px;font-weight:400;letter-spacing:-.026em;line-height:60px};--paper-font-display2:{@apply --paper-font-common-base;font-size:45px;font-weight:400;letter-spacing:-.018em;line-height:48px};--paper-font-display1:{@apply --paper-font-common-base;font-size:34px;font-weight:400;letter-spacing:-.01em;line-height:40px};--paper-font-headline:{@apply --paper-font-common-base;font-size:24px;font-weight:400;letter-spacing:-.012em;line-height:32px};--paper-font-title:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:20px;font-weight:500;line-height:28px};--paper-font-subhead:{@apply --paper-font-common-base;font-size:16px;font-weight:400;line-height:24px};--paper-font-body2:{@apply --paper-font-common-base;font-size:14px;font-weight:500;line-height:24px};--paper-font-body1:{@apply --paper-font-common-base;font-size:14px;font-weight:400;line-height:20px};--paper-font-caption:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:12px;font-weight:400;letter-spacing:.011em;line-height:20px};--paper-font-menu:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:13px;font-weight:500;line-height:24px};--paper-font-button:{@apply --paper-font-common-base;@apply --paper-font-common-nowrap;font-size:14px;font-weight:500;letter-spacing:.018em;line-height:24px;text-transform:uppercase};--paper-font-code2:{@apply --paper-font-common-code;font-size:14px;font-weight:700;line-height:20px};--paper-font-code1:{@apply --paper-font-common-code;font-size:14px;font-weight:500;line-height:20px};}</style> </custom-style>\");\n\n//# sourceURL=webpack:///./bower_components/paper-styles/typography.html?");

/***/ }),

/***/ "./bower_components/paper-tooltip/paper-tooltip.html":
/*!***********************************************************!*\
  !*** ./bower_components/paper-tooltip/paper-tooltip.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../neon-animation/neon-animation-runner-behavior.html */ \"./bower_components/neon-animation/neon-animation-runner-behavior.html\");\n\n__webpack_require__(/*! ../neon-animation/animations/fade-in-animation.html */ \"./bower_components/neon-animation/animations/fade-in-animation.html\");\n\n__webpack_require__(/*! ../neon-animation/animations/fade-out-animation.html */ \"./bower_components/neon-animation/animations/fade-out-animation.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=paper-tooltip> <template> <style>:host{display:block;position:absolute;outline:0;z-index:1002;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;user-select:none;cursor:default}#tooltip{display:block;outline:0;@apply --paper-font-common-base;font-size:10px;line-height:1;background-color:var(--paper-tooltip-background,#616161);opacity:var(--paper-tooltip-opacity,.9);color:var(--paper-tooltip-text-color,#fff);padding:8px;border-radius:2px;@apply --paper-tooltip;}.hidden{display:none!important}</style> <div id=tooltip class=hidden> <slot></slot> </div> </template> </dom-module>\");\n\nPolymer({\n  is: 'paper-tooltip',\n\n  hostAttributes: {\n    role: 'tooltip',\n    tabindex: -1\n  },\n\n  behaviors: [Polymer.NeonAnimationRunnerBehavior],\n\n  properties: {\n    /**\n     * The id of the element that the tooltip is anchored to. This element\n     * must be a sibling of the tooltip.\n     */\n    for: {\n      type: String,\n      observer: '_findTarget'\n    },\n\n    /**\n     * Set this to true if you want to manually control when the tooltip\n     * is shown or hidden.\n     */\n    manualMode: {\n      type: Boolean,\n      value: false,\n      observer: '_manualModeChanged'\n    },\n\n    /**\n     * Positions the tooltip to the top, right, bottom, left of its content.\n     */\n    position: {\n      type: String,\n      value: 'bottom'\n    },\n\n    /**\n     * If true, no parts of the tooltip will ever be shown offscreen.\n     */\n    fitToVisibleBounds: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * The spacing between the top of the tooltip and the element it is\n     * anchored to.\n     */\n    offset: {\n      type: Number,\n      value: 14\n    },\n\n    /**\n     * This property is deprecated, but left over so that it doesn't\n     * break exiting code. Please use `offset` instead. If both `offset` and\n     * `marginTop` are provided, `marginTop` will be ignored.\n     * @deprecated since version 1.0.3\n     */\n    marginTop: {\n      type: Number,\n      value: 14\n    },\n\n    /**\n     * The delay that will be applied before the `entry` animation is\n     * played when showing the tooltip.\n     */\n    animationDelay: {\n      type: Number,\n      value: 500\n    },\n\n    /**\n     * The entry and exit animations that will be played when showing and\n     * hiding the tooltip. If you want to override this, you must ensure\n     * that your animationConfig has the exact format below.\n     */\n    animationConfig: {\n      type: Object,\n      value: function value() {\n        return {\n          'entry': [{\n            name: 'fade-in-animation',\n            node: this,\n            timing: { delay: 0 }\n          }],\n          'exit': [{\n            name: 'fade-out-animation',\n            node: this\n          }]\n        };\n      }\n    },\n\n    _showing: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  listeners: {\n    'neon-animation-finish': '_onAnimationFinish'\n  },\n\n  /**\n   * Returns the target element that this tooltip is anchored to. It is\n   * either the element given by the `for` attribute, or the immediate parent\n   * of the tooltip.\n   */\n  get target() {\n    var parentNode = Polymer.dom(this).parentNode;\n    // If the parentNode is a document fragment, then we need to use the host.\n    var ownerRoot = Polymer.dom(this).getOwnerRoot();\n\n    var target;\n    if (this.for) {\n      target = Polymer.dom(ownerRoot).querySelector('#' + this.for);\n    } else {\n      target = parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE ? ownerRoot.host : parentNode;\n    }\n\n    return target;\n  },\n\n  attached: function attached() {\n    this._findTarget();\n  },\n\n  detached: function detached() {\n    if (!this.manualMode) this._removeListeners();\n  },\n\n  show: function show() {\n    // If the tooltip is already showing, there's nothing to do.\n    if (this._showing) return;\n\n    if (Polymer.dom(this).textContent.trim() === '') {\n      // Check if effective children are also empty\n      var allChildrenEmpty = true;\n      var effectiveChildren = Polymer.dom(this).getEffectiveChildNodes();\n      for (var i = 0; i < effectiveChildren.length; i++) {\n        if (effectiveChildren[i].textContent.trim() !== '') {\n          allChildrenEmpty = false;\n          break;\n        }\n      }\n      if (allChildrenEmpty) {\n        return;\n      }\n    }\n\n    this.cancelAnimation();\n    this._showing = true;\n    this.toggleClass('hidden', false, this.$.tooltip);\n    this.updatePosition();\n\n    this.animationConfig['entry'][0].timing = this.animationConfig['entry'][0].timing || {};\n    this.animationConfig['entry'][0].timing.delay = this.animationDelay;\n    this._animationPlaying = true;\n    this.playAnimation('entry');\n  },\n\n  hide: function hide() {\n    // If the tooltip is already hidden, there's nothing to do.\n    if (!this._showing) {\n      return;\n    }\n\n    // If the entry animation is still playing, don't try to play the exit\n    // animation since this will reset the opacity to 1. Just end the animation.\n    if (this._animationPlaying) {\n      this.cancelAnimation();\n      this._showing = false;\n      this._onAnimationFinish();\n      return;\n    }\n\n    this._showing = false;\n    this._animationPlaying = true;\n    this.playAnimation('exit');\n  },\n\n  updatePosition: function updatePosition() {\n    if (!this._target || !this.offsetParent) return;\n\n    var offset = this.offset;\n    // If a marginTop has been provided by the user (pre 1.0.3), use it.\n    if (this.marginTop != 14 && this.offset == 14) offset = this.marginTop;\n\n    var parentRect = this.offsetParent.getBoundingClientRect();\n    var targetRect = this._target.getBoundingClientRect();\n    var thisRect = this.getBoundingClientRect();\n\n    var horizontalCenterOffset = (targetRect.width - thisRect.width) / 2;\n    var verticalCenterOffset = (targetRect.height - thisRect.height) / 2;\n\n    var targetLeft = targetRect.left - parentRect.left;\n    var targetTop = targetRect.top - parentRect.top;\n\n    var tooltipLeft, tooltipTop;\n\n    switch (this.position) {\n      case 'top':\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop - thisRect.height - offset;\n        break;\n      case 'bottom':\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop + targetRect.height + offset;\n        break;\n      case 'left':\n        tooltipLeft = targetLeft - thisRect.width - offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n      case 'right':\n        tooltipLeft = targetLeft + targetRect.width + offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n    }\n\n    // TODO(noms): This should use IronFitBehavior if possible.\n    if (this.fitToVisibleBounds) {\n      // Clip the left/right side\n      if (parentRect.left + tooltipLeft + thisRect.width > window.innerWidth) {\n        this.style.right = '0px';\n        this.style.left = 'auto';\n      } else {\n        this.style.left = Math.max(0, tooltipLeft) + 'px';\n        this.style.right = 'auto';\n      }\n\n      // Clip the top/bottom side.\n      if (parentRect.top + tooltipTop + thisRect.height > window.innerHeight) {\n        this.style.bottom = parentRect.height + 'px';\n        this.style.top = 'auto';\n      } else {\n        this.style.top = Math.max(-parentRect.top, tooltipTop) + 'px';\n        this.style.bottom = 'auto';\n      }\n    } else {\n      this.style.left = tooltipLeft + 'px';\n      this.style.top = tooltipTop + 'px';\n    }\n  },\n\n  _addListeners: function _addListeners() {\n    if (this._target) {\n      this.listen(this._target, 'mouseenter', 'show');\n      this.listen(this._target, 'focus', 'show');\n      this.listen(this._target, 'mouseleave', 'hide');\n      this.listen(this._target, 'blur', 'hide');\n      this.listen(this._target, 'tap', 'hide');\n    }\n    this.listen(this, 'mouseenter', 'hide');\n  },\n\n  _findTarget: function _findTarget() {\n    if (!this.manualMode) this._removeListeners();\n\n    this._target = this.target;\n\n    if (!this.manualMode) this._addListeners();\n  },\n\n  _manualModeChanged: function _manualModeChanged() {\n    if (this.manualMode) this._removeListeners();else this._addListeners();\n  },\n\n  _onAnimationFinish: function _onAnimationFinish() {\n    this._animationPlaying = false;\n    if (!this._showing) {\n      this.toggleClass('hidden', true, this.$.tooltip);\n    }\n  },\n\n  _removeListeners: function _removeListeners() {\n    if (this._target) {\n      this.unlisten(this._target, 'mouseenter', 'show');\n      this.unlisten(this._target, 'focus', 'show');\n      this.unlisten(this._target, 'mouseleave', 'hide');\n      this.unlisten(this._target, 'blur', 'hide');\n      this.unlisten(this._target, 'tap', 'hide');\n    }\n    this.unlisten(this, 'mouseenter', 'hide');\n  }\n});\n\n//# sourceURL=webpack:///./bower_components/paper-tooltip/paper-tooltip.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/array-selector.html":
/*!*******************************************************************!*\
  !*** ./bower_components/polymer/lib/elements/array-selector.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../../polymer-element.html */ \"./bower_components/polymer/polymer-element.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/array-splice.html */ \"./bower_components/polymer/lib/utils/array-splice.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Element mixin for recording dynamic associations between item paths in a\n   * master `items` array and a `selected` array such that path changes to the\n   * master array (at the host) element or elsewhere via data-binding) are\n   * correctly propagated to items in the selected array and vice-versa.\n   *\n   * The `items` property accepts an array of user data, and via the\n   * `select(item)` and `deselect(item)` API, updates the `selected` property\n   * which may be bound to other parts of the application, and any changes to\n   * sub-fields of `selected` item(s) will be kept in sync with items in the\n   * `items` array.  When `multi` is false, `selected` is a property\n   * representing the last selected item.  When `multi` is true, `selected`\n   * is an array of multiply selected items.\n   *\n   * @polymer\n   * @mixinFunction\n   * @appliesMixin Polymer.ElementMixin\n   * @memberof Polymer\n   * @summary Element mixin for recording dynamic associations between item paths in a\n   * master `items` array and a `selected` array\n   */\n\n  var ArraySelectorMixin = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @constructor\n     * @extends {superClass}\n     * @implements {Polymer_ElementMixin}\n     */\n    var elementBase = Polymer.ElementMixin(superClass);\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_ArraySelectorMixin}\n     * @unrestricted\n     */\n\n    var ArraySelectorMixin = function (_elementBase) {\n      _inherits(ArraySelectorMixin, _elementBase);\n\n      _createClass(ArraySelectorMixin, null, [{\n        key: 'properties',\n        get: function get() {\n\n          return {\n\n            /**\n             * An array containing items from which selection will be made.\n             */\n            items: {\n              type: Array\n            },\n\n            /**\n             * When `true`, multiple items may be selected at once (in this case,\n             * `selected` is an array of currently selected items).  When `false`,\n             * only one item may be selected at a time.\n             */\n            multi: {\n              type: Boolean,\n              value: false\n            },\n\n            /**\n             * When `multi` is true, this is an array that contains any selected.\n             * When `multi` is false, this is the currently selected item, or `null`\n             * if no item is selected.\n             * @type {?(Object|Array<!Object>)}\n             */\n            selected: {\n              type: Object,\n              notify: true\n            },\n\n            /**\n             * When `multi` is false, this is the currently selected item, or `null`\n             * if no item is selected.\n             * @type {?Object}\n             */\n            selectedItem: {\n              type: Object,\n              notify: true\n            },\n\n            /**\n             * When `true`, calling `select` on an item that is already selected\n             * will deselect the item.\n             */\n            toggle: {\n              type: Boolean,\n              value: false\n            }\n\n          };\n        }\n      }, {\n        key: 'observers',\n        get: function get() {\n          return ['__updateSelection(multi, items.*)'];\n        }\n      }]);\n\n      function ArraySelectorMixin() {\n        _classCallCheck(this, ArraySelectorMixin);\n\n        var _this = _possibleConstructorReturn(this, (ArraySelectorMixin.__proto__ || Object.getPrototypeOf(ArraySelectorMixin)).call(this));\n\n        _this.__lastItems = null;\n        _this.__lastMulti = null;\n        _this.__selectedMap = null;\n        return _this;\n      }\n\n      _createClass(ArraySelectorMixin, [{\n        key: '__updateSelection',\n        value: function __updateSelection(multi, itemsInfo) {\n          var path = itemsInfo.path;\n          if (path == 'items') {\n            // Case 1 - items array changed, so diff against previous array and\n            // deselect any removed items and adjust selected indices\n            var newItems = itemsInfo.base || [];\n            var lastItems = this.__lastItems;\n            var lastMulti = this.__lastMulti;\n            if (multi !== lastMulti) {\n              this.clearSelection();\n            }\n            if (lastItems) {\n              var splices = Polymer.ArraySplice.calculateSplices(newItems, lastItems);\n              this.__applySplices(splices);\n            }\n            this.__lastItems = newItems;\n            this.__lastMulti = multi;\n          } else if (itemsInfo.path == 'items.splices') {\n            // Case 2 - got specific splice information describing the array mutation:\n            // deselect any removed items and adjust selected indices\n            this.__applySplices(itemsInfo.value.indexSplices);\n          } else {\n            // Case 3 - an array element was changed, so deselect the previous\n            // item for that index if it was previously selected\n            var part = path.slice('items.'.length);\n            var idx = parseInt(part, 10);\n            if (part.indexOf('.') < 0 && part == idx) {\n              this.__deselectChangedIdx(idx);\n            }\n          }\n        }\n      }, {\n        key: '__applySplices',\n        value: function __applySplices(splices) {\n          var _this2 = this;\n\n          var selected = this.__selectedMap;\n          // Adjust selected indices and mark removals\n\n          var _loop = function _loop(i) {\n            var s = splices[i];\n            selected.forEach(function (idx, item) {\n              if (idx < s.index) {\n                // no change\n              } else if (idx >= s.index + s.removed.length) {\n                // adjust index\n                selected.set(item, idx + s.addedCount - s.removed.length);\n              } else {\n                // remove index\n                selected.set(item, -1);\n              }\n            });\n            for (var j = 0; j < s.addedCount; j++) {\n              var idx = s.index + j;\n              if (selected.has(_this2.items[idx])) {\n                selected.set(_this2.items[idx], idx);\n              }\n            }\n          };\n\n          for (var i = 0; i < splices.length; i++) {\n            _loop(i);\n          }\n          // Update linked paths\n          this.__updateLinks();\n          // Remove selected items that were removed from the items array\n          var sidx = 0;\n          selected.forEach(function (idx, item) {\n            if (idx < 0) {\n              if (_this2.multi) {\n                _this2.splice('selected', sidx, 1);\n              } else {\n                _this2.selected = _this2.selectedItem = null;\n              }\n              selected.delete(item);\n            } else {\n              sidx++;\n            }\n          });\n        }\n      }, {\n        key: '__updateLinks',\n        value: function __updateLinks() {\n          var _this3 = this;\n\n          this.__dataLinkedPaths = {};\n          if (this.multi) {\n            var sidx = 0;\n            this.__selectedMap.forEach(function (idx) {\n              if (idx >= 0) {\n                _this3.linkPaths('items.' + idx, 'selected.' + sidx++);\n              }\n            });\n          } else {\n            this.__selectedMap.forEach(function (idx) {\n              _this3.linkPaths('selected', 'items.' + idx);\n              _this3.linkPaths('selectedItem', 'items.' + idx);\n            });\n          }\n        }\n\n        /**\n         * Clears the selection state.\n         * @return {void}\n         */\n\n      }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n          // Unbind previous selection\n          this.__dataLinkedPaths = {};\n          // The selected map stores 3 pieces of information:\n          // key: items array object\n          // value: items array index\n          // order: selected array index\n          this.__selectedMap = new Map();\n          // Initialize selection\n          this.selected = this.multi ? [] : null;\n          this.selectedItem = null;\n        }\n\n        /**\n         * Returns whether the item is currently selected.\n         *\n         * @param {*} item Item from `items` array to test\n         * @return {boolean} Whether the item is selected\n         */\n\n      }, {\n        key: 'isSelected',\n        value: function isSelected(item) {\n          return this.__selectedMap.has(item);\n        }\n\n        /**\n         * Returns whether the item is currently selected.\n         *\n         * @param {number} idx Index from `items` array to test\n         * @return {boolean} Whether the item is selected\n         */\n\n      }, {\n        key: 'isIndexSelected',\n        value: function isIndexSelected(idx) {\n          return this.isSelected(this.items[idx]);\n        }\n      }, {\n        key: '__deselectChangedIdx',\n        value: function __deselectChangedIdx(idx) {\n          var _this4 = this;\n\n          var sidx = this.__selectedIndexForItemIndex(idx);\n          if (sidx >= 0) {\n            var i = 0;\n            this.__selectedMap.forEach(function (idx, item) {\n              if (sidx == i++) {\n                _this4.deselect(item);\n              }\n            });\n          }\n        }\n      }, {\n        key: '__selectedIndexForItemIndex',\n        value: function __selectedIndexForItemIndex(idx) {\n          var selected = this.__dataLinkedPaths['items.' + idx];\n          if (selected) {\n            return parseInt(selected.slice('selected.'.length), 10);\n          }\n        }\n\n        /**\n         * Deselects the given item if it is already selected.\n         *\n         * @param {*} item Item from `items` array to deselect\n         * @return {void}\n         */\n\n      }, {\n        key: 'deselect',\n        value: function deselect(item) {\n          var idx = this.__selectedMap.get(item);\n          if (idx >= 0) {\n            this.__selectedMap.delete(item);\n            var sidx = void 0;\n            if (this.multi) {\n              sidx = this.__selectedIndexForItemIndex(idx);\n            }\n            this.__updateLinks();\n            if (this.multi) {\n              this.splice('selected', sidx, 1);\n            } else {\n              this.selected = this.selectedItem = null;\n            }\n          }\n        }\n\n        /**\n         * Deselects the given index if it is already selected.\n         *\n         * @param {number} idx Index from `items` array to deselect\n         * @return {void}\n         */\n\n      }, {\n        key: 'deselectIndex',\n        value: function deselectIndex(idx) {\n          this.deselect(this.items[idx]);\n        }\n\n        /**\n         * Selects the given item.  When `toggle` is true, this will automatically\n         * deselect the item if already selected.\n         *\n         * @param {*} item Item from `items` array to select\n         * @return {void}\n         */\n\n      }, {\n        key: 'select',\n        value: function select(item) {\n          this.selectIndex(this.items.indexOf(item));\n        }\n\n        /**\n         * Selects the given index.  When `toggle` is true, this will automatically\n         * deselect the item if already selected.\n         *\n         * @param {number} idx Index from `items` array to select\n         * @return {void}\n         */\n\n      }, {\n        key: 'selectIndex',\n        value: function selectIndex(idx) {\n          var item = this.items[idx];\n          if (!this.isSelected(item)) {\n            if (!this.multi) {\n              this.__selectedMap.clear();\n            }\n            this.__selectedMap.set(item, idx);\n            this.__updateLinks();\n            if (this.multi) {\n              this.push('selected', item);\n            } else {\n              this.selected = this.selectedItem = item;\n            }\n          } else if (this.toggle) {\n            this.deselectIndex(idx);\n          }\n        }\n      }]);\n\n      return ArraySelectorMixin;\n    }(elementBase);\n\n    return ArraySelectorMixin;\n  });\n\n  // export mixin\n  Polymer.ArraySelectorMixin = ArraySelectorMixin;\n\n  /**\n   * @constructor\n   * @extends {Polymer.Element}\n   * @implements {Polymer_ArraySelectorMixin}\n   */\n  var baseArraySelector = ArraySelectorMixin(Polymer.Element);\n\n  /**\n   * Element implementing the `Polymer.ArraySelector` mixin, which records\n   * dynamic associations between item paths in a master `items` array and a\n   * `selected` array such that path changes to the master array (at the host)\n   * element or elsewhere via data-binding) are correctly propagated to items\n   * in the selected array and vice-versa.\n   *\n   * The `items` property accepts an array of user data, and via the\n   * `select(item)` and `deselect(item)` API, updates the `selected` property\n   * which may be bound to other parts of the application, and any changes to\n   * sub-fields of `selected` item(s) will be kept in sync with items in the\n   * `items` array.  When `multi` is false, `selected` is a property\n   * representing the last selected item.  When `multi` is true, `selected`\n   * is an array of multiply selected items.\n   *\n   * Example:\n   *\n   * ```html\n   * <dom-module id=\"employee-list\">\n   *\n   *   <template>\n   *\n   *     <div> Employee list: </div>\n   *     <dom-repeat id=\"employeeList\" items=\"{{employees}}\">\n   *       <template>\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *           <div>Last name: <span>{{item.last}}</span></div>\n   *           <button on-click=\"toggleSelection\">Select</button>\n   *       </template>\n   *     </dom-repeat>\n   *\n   *     <array-selector id=\"selector\" items=\"{{employees}}\" selected=\"{{selected}}\" multi toggle></array-selector>\n   *\n   *     <div> Selected employees: </div>\n   *     <dom-repeat items=\"{{selected}}\">\n   *       <template>\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *         <div>Last name: <span>{{item.last}}</span></div>\n   *       </template>\n   *     </dom-repeat>\n   *\n   *   </template>\n   *\n   * </dom-module>\n   * ```\n   *\n   * ```js\n   *class EmployeeList extends Polymer.Element {\n   *  static get is() { return 'employee-list'; }\n   *  static get properties() {\n   *    return {\n   *      employees: {\n   *        value() {\n   *          return [\n   *            {first: 'Bob', last: 'Smith'},\n   *            {first: 'Sally', last: 'Johnson'},\n   *            ...\n   *          ];\n   *        }\n   *      }\n   *    };\n   *  }\n   *  toggleSelection(e) {\n   *    let item = this.$.employeeList.itemForElement(e.target);\n   *    this.$.selector.select(item);\n   *  }\n   *}\n   * ```\n   *\n   * @polymer\n   * @customElement\n   * @extends {baseArraySelector}\n   * @appliesMixin Polymer.ArraySelectorMixin\n   * @memberof Polymer\n   * @summary Custom element that links paths between an input `items` array and\n   *   an output `selected` item or array based on calls to its selection API.\n   */\n\n  var ArraySelector = function (_baseArraySelector) {\n    _inherits(ArraySelector, _baseArraySelector);\n\n    function ArraySelector() {\n      _classCallCheck(this, ArraySelector);\n\n      return _possibleConstructorReturn(this, (ArraySelector.__proto__ || Object.getPrototypeOf(ArraySelector)).apply(this, arguments));\n    }\n\n    _createClass(ArraySelector, null, [{\n      key: 'is',\n\n      // Not needed to find template; can be removed once the analyzer\n      // can find the tag name from customElements.define call\n      get: function get() {\n        return 'array-selector';\n      }\n    }]);\n\n    return ArraySelector;\n  }(baseArraySelector);\n\n  customElements.define(ArraySelector.is, ArraySelector);\n  Polymer.ArraySelector = ArraySelector;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/array-selector.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/custom-style.html":
/*!*****************************************************************!*\
  !*** ./bower_components/polymer/lib/elements/custom-style.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../../../shadycss/custom-style-interface.html */ \"./bower_components/shadycss/custom-style-interface.html\");\n\n__webpack_require__(/*! ../utils/style-gather.html */ \"./bower_components/polymer/lib/utils/style-gather.html\");\n\n(function () {\n  'use strict';\n\n  var attr = 'include';\n\n  var CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;\n\n  /**\n   * Custom element for defining styles in the main document that can take\n   * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims\n   * for style encapsulation, custom properties, and custom mixins.\n   *\n   * - Document styles defined in a `<custom-style>` are shimmed to ensure they\n   *   do not leak into local DOM when running on browsers without native\n   *   Shadow DOM.\n   * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector\n   *   to define custom properties that apply to all custom elements.\n   * - Custom mixins can be defined in a `<custom-style>`, if you import the optional\n   *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)\n   *   (`shadycss/apply-shim.html`).\n   *\n   * To use:\n   *\n   * - Import `custom-style.html`.\n   * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that\n   *   contains the CSS rules you want to shim.\n   *\n   * For example:\n   *\n   * ```\n   * <!-- import apply shim--only required if using mixins -->\n   * <link rel=\"import href=\"bower_components/shadycss/apply-shim.html\">\n   * <!-- import custom-style element -->\n   * <link rel=\"import\" href=\"bower_components/polymer/lib/elements/custom-style.html\">\n   * ...\n   * <custom-style>\n   *   <style>\n   *     html {\n   *       --custom-color: blue;\n   *       --custom-mixin: {\n   *         font-weight: bold;\n   *         color: red;\n   *       };\n   *     }\n   *   </style>\n   * </custom-style>\n   * ```\n   *\n   * @customElement\n   * @extends HTMLElement\n   * @memberof Polymer\n   * @summary Custom element for defining styles in the main document that can\n   *   take advantage of Polymer's style scoping and custom properties shims.\n   */\n\n  var CustomStyle = function (_HTMLElement) {\n    _inherits(CustomStyle, _HTMLElement);\n\n    function CustomStyle() {\n      _classCallCheck(this, CustomStyle);\n\n      var _this = _possibleConstructorReturn(this, (CustomStyle.__proto__ || Object.getPrototypeOf(CustomStyle)).call(this));\n\n      _this._style = null;\n      CustomStyleInterface.addCustomStyle(_this);\n      return _this;\n    }\n    /**\n     * Returns the light-DOM `<style>` child this element wraps.  Upon first\n     * call any style modules referenced via the `include` attribute will be\n     * concatenated to this element's `<style>`.\n     *\n     * @return {HTMLStyleElement} This element's light-DOM `<style>`\n     */\n\n\n    _createClass(CustomStyle, [{\n      key: 'getStyle',\n      value: function getStyle() {\n        if (this._style) {\n          return this._style;\n        }\n        var style = /** @type {HTMLStyleElement} */this.querySelector('style');\n        if (!style) {\n          return null;\n        }\n        this._style = style;\n        var include = style.getAttribute(attr);\n        if (include) {\n          style.removeAttribute(attr);\n          style.textContent = Polymer.StyleGather.cssFromModules(include) + style.textContent;\n        }\n        /*\n        HTML Imports styling the main document are deprecated in Chrome\n        https://crbug.com/523952\n         If this element is not in the main document, then it must be in an HTML Import document.\n        In that case, move the custom style to the main document.\n         The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd\n        cases of ordering w.r.t the main document styles.\n        */\n        if (this.ownerDocument !== window.document) {\n          window.document.head.appendChild(this);\n        }\n        return this._style;\n      }\n    }]);\n\n    return CustomStyle;\n  }(HTMLElement);\n\n  window.customElements.define('custom-style', CustomStyle);\n  Polymer.CustomStyle = CustomStyle;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/custom-style.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/dom-bind.html":
/*!*************************************************************!*\
  !*** ./bower_components/polymer/lib/elements/dom-bind.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../mixins/property-effects.html */ \"./bower_components/polymer/lib/mixins/property-effects.html\");\n\n__webpack_require__(/*! ../mixins/mutable-data.html */ \"./bower_components/polymer/lib/mixins/mutable-data.html\");\n\n__webpack_require__(/*! ../mixins/gesture-event-listeners.html */ \"./bower_components/polymer/lib/mixins/gesture-event-listeners.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * @constructor\n   * @extends {HTMLElement}\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_OptionalMutableData}\n   * @implements {Polymer_GestureEventListeners}\n   */\n\n  var domBindBase = Polymer.GestureEventListeners(Polymer.OptionalMutableData(Polymer.PropertyEffects(HTMLElement)));\n\n  /**\n   * Custom element to allow using Polymer's template features (data binding,\n   * declarative event listeners, etc.) in the main document without defining\n   * a new custom element.\n   *\n   * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`\n   * element, which will immediately stamp the wrapped template into the main\n   * document and bind elements to the `dom-bind` element itself as the\n   * binding scope.\n   *\n   * @polymer\n   * @customElement\n   * @appliesMixin Polymer.PropertyEffects\n   * @appliesMixin Polymer.OptionalMutableData\n   * @appliesMixin Polymer.GestureEventListeners\n   * @extends {domBindBase}\n   * @memberof Polymer\n   * @summary Custom element to allow using Polymer's template features (data\n   *   binding, declarative event listeners, etc.) in the main document.\n   */\n\n  var DomBind = function (_domBindBase) {\n    _inherits(DomBind, _domBindBase);\n\n    _createClass(DomBind, null, [{\n      key: 'observedAttributes',\n      get: function get() {\n        return ['mutable-data'];\n      }\n    }]);\n\n    function DomBind() {\n      _classCallCheck(this, DomBind);\n\n      var _this = _possibleConstructorReturn(this, (DomBind.__proto__ || Object.getPrototypeOf(DomBind)).call(this));\n\n      _this.root = null;\n      _this.$ = null;\n      _this.__children = null;\n      return _this;\n    }\n\n    /** @return {void} */\n\n\n    _createClass(DomBind, [{\n      key: 'attributeChangedCallback',\n      value: function attributeChangedCallback() {\n        // assumes only one observed attribute\n        this.mutableData = true;\n      }\n\n      /** @return {void} */\n\n    }, {\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        this.style.display = 'none';\n        this.render();\n      }\n\n      /** @return {void} */\n\n    }, {\n      key: 'disconnectedCallback',\n      value: function disconnectedCallback() {\n        this.__removeChildren();\n      }\n    }, {\n      key: '__insertChildren',\n      value: function __insertChildren() {\n        this.parentNode.insertBefore(this.root, this);\n      }\n    }, {\n      key: '__removeChildren',\n      value: function __removeChildren() {\n        if (this.__children) {\n          for (var i = 0; i < this.__children.length; i++) {\n            this.root.appendChild(this.__children[i]);\n          }\n        }\n      }\n\n      /**\n       * Forces the element to render its content. This is typically only\n       * necessary to call if HTMLImports with the async attribute are used.\n       * @return {void}\n       */\n\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var template = void 0;\n        if (!this.__children) {\n          template = /** @type {HTMLTemplateElement} */template || this.querySelector('template');\n          if (!template) {\n            // Wait until childList changes and template should be there by then\n            var observer = new MutationObserver(function () {\n              template = /** @type {HTMLTemplateElement} */_this2.querySelector('template');\n              if (template) {\n                observer.disconnect();\n                _this2.render();\n              } else {\n                throw new Error('dom-bind requires a <template> child');\n              }\n            });\n            observer.observe(this, { childList: true });\n            return;\n          }\n          this.root = this._stampTemplate(template);\n          this.$ = this.root.$;\n          this.__children = [];\n          for (var n = this.root.firstChild; n; n = n.nextSibling) {\n            this.__children[this.__children.length] = n;\n          }\n          this._enableProperties();\n        }\n        this.__insertChildren();\n        this.dispatchEvent(new CustomEvent('dom-change', {\n          bubbles: true,\n          composed: true\n        }));\n      }\n    }]);\n\n    return DomBind;\n  }(domBindBase);\n\n  customElements.define('dom-bind', DomBind);\n\n  Polymer.DomBind = DomBind;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/dom-bind.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/dom-if.html":
/*!***********************************************************!*\
  !*** ./bower_components/polymer/lib/elements/dom-if.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../../polymer-element.html */ \"./bower_components/polymer/polymer-element.html\");\n\n__webpack_require__(/*! ../utils/templatize.html */ \"./bower_components/polymer/lib/utils/templatize.html\");\n\n__webpack_require__(/*! ../utils/debounce.html */ \"./bower_components/polymer/lib/utils/debounce.html\");\n\n__webpack_require__(/*! ../utils/flush.html */ \"./bower_components/polymer/lib/utils/flush.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * The `<dom-if>` element will stamp a light-dom `<template>` child when\n   * the `if` property becomes truthy, and the template can use Polymer\n   * data-binding and declarative event features when used in the context of\n   * a Polymer element's template.\n   *\n   * When `if` becomes falsy, the stamped content is hidden but not\n   * removed from dom. When `if` subsequently becomes truthy again, the content\n   * is simply re-shown. This approach is used due to its favorable performance\n   * characteristics: the expense of creating template content is paid only\n   * once and lazily.\n   *\n   * Set the `restamp` property to true to force the stamped content to be\n   * created / destroyed when the `if` condition changes.\n   *\n   * @customElement\n   * @polymer\n   * @extends Polymer.Element\n   * @memberof Polymer\n   * @summary Custom element that conditionally stamps and hides or removes\n   *   template content based on a boolean flag.\n   */\n\n  var DomIf = function (_Polymer$Element) {\n    _inherits(DomIf, _Polymer$Element);\n\n    _createClass(DomIf, null, [{\n      key: 'is',\n\n\n      // Not needed to find template; can be removed once the analyzer\n      // can find the tag name from customElements.define call\n      get: function get() {\n        return 'dom-if';\n      }\n    }, {\n      key: 'template',\n      get: function get() {\n        return null;\n      }\n    }, {\n      key: 'properties',\n      get: function get() {\n\n        return {\n\n          /**\n           * Fired whenever DOM is added or removed/hidden by this template (by\n           * default, rendering occurs lazily).  To force immediate rendering, call\n           * `render`.\n           *\n           * @event dom-change\n           */\n\n          /**\n           * A boolean indicating whether this template should stamp.\n           */\n          if: {\n            type: Boolean,\n            observer: '__debounceRender'\n          },\n\n          /**\n           * When true, elements will be removed from DOM and discarded when `if`\n           * becomes false and re-created and added back to the DOM when `if`\n           * becomes true.  By default, stamped elements will be hidden but left\n           * in the DOM when `if` becomes false, which is generally results\n           * in better performance.\n           */\n          restamp: {\n            type: Boolean,\n            observer: '__debounceRender'\n          }\n\n        };\n      }\n    }]);\n\n    function DomIf() {\n      _classCallCheck(this, DomIf);\n\n      var _this = _possibleConstructorReturn(this, (DomIf.__proto__ || Object.getPrototypeOf(DomIf)).call(this));\n\n      _this.__renderDebouncer = null;\n      _this.__invalidProps = null;\n      _this.__instance = null;\n      _this._lastIf = false;\n      _this.__ctor = null;\n      return _this;\n    }\n\n    _createClass(DomIf, [{\n      key: '__debounceRender',\n      value: function __debounceRender() {\n        var _this2 = this;\n\n        // Render is async for 2 reasons:\n        // 1. To eliminate dom creation trashing if user code thrashes `if` in the\n        //    same turn. This was more common in 1.x where a compound computed\n        //    property could result in the result changing multiple times, but is\n        //    mitigated to a large extent by batched property processing in 2.x.\n        // 2. To avoid double object propagation when a bag including values bound\n        //    to the `if` property as well as one or more hostProps could enqueue\n        //    the <dom-if> to flush before the <template>'s host property\n        //    forwarding. In that scenario creating an instance would result in\n        //    the host props being set once, and then the enqueued changes on the\n        //    template would set properties a second time, potentially causing an\n        //    object to be set to an instance more than once.  Creating the\n        //    instance async from flushing data ensures this doesn't happen. If\n        //    we wanted a sync option in the future, simply having <dom-if> flush\n        //    (or clear) its template's pending host properties before creating\n        //    the instance would also avoid the problem.\n        this.__renderDebouncer = Polymer.Debouncer.debounce(this.__renderDebouncer, Polymer.Async.microTask, function () {\n          return _this2.__render();\n        });\n        Polymer.enqueueDebouncer(this.__renderDebouncer);\n      }\n\n      /**\n       * @return {void}\n       */\n\n    }, {\n      key: 'disconnectedCallback',\n      value: function disconnectedCallback() {\n        _get(DomIf.prototype.__proto__ || Object.getPrototypeOf(DomIf.prototype), 'disconnectedCallback', this).call(this);\n        if (!this.parentNode || this.parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE && !this.parentNode.host) {\n          this.__teardownInstance();\n        }\n      }\n\n      /**\n       * @return {void}\n       */\n\n    }, {\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        _get(DomIf.prototype.__proto__ || Object.getPrototypeOf(DomIf.prototype), 'connectedCallback', this).call(this);\n        this.style.display = 'none';\n        if (this.if) {\n          this.__debounceRender();\n        }\n      }\n\n      /**\n       * Forces the element to render its content. Normally rendering is\n       * asynchronous to a provoking change. This is done for efficiency so\n       * that multiple changes trigger only a single render. The render method\n       * should be called if, for example, template rendering is required to\n       * validate application state.\n       * @return {void}\n       */\n\n    }, {\n      key: 'render',\n      value: function render() {\n        Polymer.flush();\n      }\n    }, {\n      key: '__render',\n      value: function __render() {\n        if (this.if) {\n          if (!this.__ensureInstance()) {\n            // No template found yet\n            return;\n          }\n          this._showHideChildren();\n        } else if (this.restamp) {\n          this.__teardownInstance();\n        }\n        if (!this.restamp && this.__instance) {\n          this._showHideChildren();\n        }\n        if (this.if != this._lastIf) {\n          this.dispatchEvent(new CustomEvent('dom-change', {\n            bubbles: true,\n            composed: true\n          }));\n          this._lastIf = this.if;\n        }\n      }\n    }, {\n      key: '__ensureInstance',\n      value: function __ensureInstance() {\n        var _this3 = this;\n\n        var parentNode = this.parentNode;\n        // Guard against element being detached while render was queued\n        if (parentNode) {\n          if (!this.__ctor) {\n            var template = this.querySelector('template');\n            if (!template) {\n              // Wait until childList changes and template should be there by then\n              var observer = new MutationObserver(function () {\n                if (_this3.querySelector('template')) {\n                  observer.disconnect();\n                  _this3.__render();\n                } else {\n                  throw new Error('dom-if requires a <template> child');\n                }\n              });\n              observer.observe(this, { childList: true });\n              return false;\n            }\n            this.__ctor = Polymer.Templatize.templatize(template, this, {\n              // dom-if templatizer instances require `mutable: true`, as\n              // `__syncHostProperties` relies on that behavior to sync objects\n              mutableData: true,\n              /**\n               * @param {string} prop Property to forward\n               * @param {*} value Value of property\n               * @this {this}\n               */\n              forwardHostProp: function forwardHostProp(prop, value) {\n                if (this.__instance) {\n                  if (this.if) {\n                    this.__instance.forwardHostProp(prop, value);\n                  } else {\n                    // If we have an instance but are squelching host property\n                    // forwarding due to if being false, note the invalidated\n                    // properties so `__syncHostProperties` can sync them the next\n                    // time `if` becomes true\n                    this.__invalidProps = this.__invalidProps || Object.create(null);\n                    this.__invalidProps[Polymer.Path.root(prop)] = true;\n                  }\n                }\n              }\n            });\n          }\n          if (!this.__instance) {\n            this.__instance = new this.__ctor();\n            parentNode.insertBefore(this.__instance.root, this);\n          } else {\n            this.__syncHostProperties();\n            var c$ = this.__instance.children;\n            if (c$ && c$.length) {\n              // Detect case where dom-if was re-attached in new position\n              var lastChild = this.previousSibling;\n              if (lastChild !== c$[c$.length - 1]) {\n                for (var i = 0, n; i < c$.length && (n = c$[i]); i++) {\n                  parentNode.insertBefore(n, this);\n                }\n              }\n            }\n          }\n        }\n        return true;\n      }\n    }, {\n      key: '__syncHostProperties',\n      value: function __syncHostProperties() {\n        var props = this.__invalidProps;\n        if (props) {\n          for (var prop in props) {\n            this.__instance._setPendingProperty(prop, this.__dataHost[prop]);\n          }\n          this.__invalidProps = null;\n          this.__instance._flushProperties();\n        }\n      }\n    }, {\n      key: '__teardownInstance',\n      value: function __teardownInstance() {\n        if (this.__instance) {\n          var c$ = this.__instance.children;\n          if (c$ && c$.length) {\n            // use first child parent, for case when dom-if may have been detached\n            var parent = c$[0].parentNode;\n            for (var i = 0, n; i < c$.length && (n = c$[i]); i++) {\n              parent.removeChild(n);\n            }\n          }\n          this.__instance = null;\n          this.__invalidProps = null;\n        }\n      }\n\n      /**\n       * Shows or hides the template instance top level child elements. For\n       * text nodes, `textContent` is removed while \"hidden\" and replaced when\n       * \"shown.\"\n       * @return {void}\n       * @protected\n       */\n\n    }, {\n      key: '_showHideChildren',\n      value: function _showHideChildren() {\n        var hidden = this.__hideTemplateChildren__ || !this.if;\n        if (this.__instance) {\n          this.__instance._showHideChildren(hidden);\n        }\n      }\n    }]);\n\n    return DomIf;\n  }(Polymer.Element);\n\n  customElements.define(DomIf.is, DomIf);\n\n  Polymer.DomIf = DomIf;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/dom-if.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/dom-module.html":
/*!***************************************************************!*\
  !*** ./bower_components/polymer/lib/elements/dom-module.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/resolve-url.html */ \"./bower_components/polymer/lib/utils/resolve-url.html\");\n\n(function () {\n  'use strict';\n\n  var modules = {};\n  var lcModules = {};\n  function findModule(id) {\n    return modules[id] || lcModules[id.toLowerCase()];\n  }\n\n  function styleOutsideTemplateCheck(inst) {\n    if (inst.querySelector('style')) {\n      console.warn('dom-module %s has style outside template', inst.id);\n    }\n  }\n\n  /**\n   * The `dom-module` element registers the dom it contains to the name given\n   * by the module's id attribute. It provides a unified database of dom\n   * accessible via its static `import` API.\n   *\n   * A key use case of `dom-module` is for providing custom element `<template>`s\n   * via HTML imports that are parsed by the native HTML parser, that can be\n   * relocated during a bundling pass and still looked up by `id`.\n   *\n   * Example:\n   *\n   *     <dom-module id=\"foo\">\n   *       <img src=\"stuff.png\">\n   *     </dom-module>\n   *\n   * Then in code in some other location that cannot access the dom-module above\n   *\n   *     let img = customElements.get('dom-module').import('foo', 'img');\n   *\n   * @customElement\n   * @extends HTMLElement\n   * @memberof Polymer\n   * @summary Custom element that provides a registry of relocatable DOM content\n   *   by `id` that is agnostic to bundling.\n   * @unrestricted\n   */\n\n  var DomModule = function (_HTMLElement) {\n    _inherits(DomModule, _HTMLElement);\n\n    function DomModule() {\n      _classCallCheck(this, DomModule);\n\n      return _possibleConstructorReturn(this, (DomModule.__proto__ || Object.getPrototypeOf(DomModule)).apply(this, arguments));\n    }\n\n    _createClass(DomModule, [{\n      key: 'attributeChangedCallback',\n\n\n      /**\n       * @param {string} name Name of attribute.\n       * @param {?string} old Old value of attribute.\n       * @param {?string} value Current value of attribute.\n       * @return {void}\n       */\n      value: function attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n          this.register();\n        }\n      }\n\n      /**\n       * The absolute URL of the original location of this `dom-module`.\n       *\n       * This value will differ from this element's `ownerDocument` in the\n       * following ways:\n       * - Takes into account any `assetpath` attribute added during bundling\n       *   to indicate the original location relative to the bundled location\n       * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n       *   the path is relative to the import document's location since\n       *   `ownerDocument` is not currently polyfilled\n       */\n\n    }, {\n      key: 'register',\n\n\n      /**\n       * Registers the dom-module at a given id. This method should only be called\n       * when a dom-module is imperatively created. For\n       * example, `document.createElement('dom-module').register('foo')`.\n       * @param {string=} id The id at which to register the dom-module.\n       * @return {void}\n       */\n      value: function register(id) {\n        id = id || this.id;\n        if (id) {\n          this.id = id;\n          // store id separate from lowercased id so that\n          // in all cases mixedCase id will stored distinctly\n          // and lowercase version is a fallback\n          modules[id] = this;\n          lcModules[id.toLowerCase()] = this;\n          styleOutsideTemplateCheck(this);\n        }\n      }\n    }, {\n      key: 'assetpath',\n      get: function get() {\n        // Don't override existing assetpath.\n        if (!this.__assetpath) {\n          // note: assetpath set via an attribute must be relative to this\n          // element's location; accomodate polyfilled HTMLImports\n          var owner = window.HTMLImports && HTMLImports.importForElement ? HTMLImports.importForElement(this) || document : this.ownerDocument;\n          var url = Polymer.ResolveUrl.resolveUrl(this.getAttribute('assetpath') || '', owner.baseURI);\n          this.__assetpath = Polymer.ResolveUrl.pathFromUrl(url);\n        }\n        return this.__assetpath;\n      }\n    }], [{\n      key: 'import',\n\n\n      /**\n       * Retrieves the element specified by the css `selector` in the module\n       * registered by `id`. For example, this.import('foo', 'img');\n       * @param {string} id The id of the dom-module in which to search.\n       * @param {string=} selector The css selector by which to find the element.\n       * @return {Element} Returns the element which matches `selector` in the\n       * module registered at the specified `id`.\n       */\n      value: function _import(id, selector) {\n        if (id) {\n          var m = findModule(id);\n          if (m && selector) {\n            return m.querySelector(selector);\n          }\n          return m;\n        }\n        return null;\n      }\n    }, {\n      key: 'observedAttributes',\n      get: function get() {\n        return ['id'];\n      }\n    }]);\n\n    return DomModule;\n  }(HTMLElement);\n\n  DomModule.prototype['modules'] = modules;\n\n  customElements.define('dom-module', DomModule);\n\n  // export\n  Polymer.DomModule = DomModule;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/dom-module.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/elements/dom-repeat.html":
/*!***************************************************************!*\
  !*** ./bower_components/polymer/lib/elements/dom-repeat.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../../polymer-element.html */ \"./bower_components/polymer/polymer-element.html\");\n\n__webpack_require__(/*! ../utils/templatize.html */ \"./bower_components/polymer/lib/utils/templatize.html\");\n\n__webpack_require__(/*! ../utils/debounce.html */ \"./bower_components/polymer/lib/utils/debounce.html\");\n\n__webpack_require__(/*! ../utils/flush.html */ \"./bower_components/polymer/lib/utils/flush.html\");\n\n__webpack_require__(/*! ../mixins/mutable-data.html */ \"./bower_components/polymer/lib/mixins/mutable-data.html\");\n\n(function () {\n  'use strict';\n\n  var TemplateInstanceBase = Polymer.TemplateInstanceBase; // eslint-disable-line\n\n  /**\n   * @constructor\n   * @implements {Polymer_OptionalMutableData}\n   * @extends {Polymer.Element}\n   */\n  var domRepeatBase = Polymer.OptionalMutableData(Polymer.Element);\n\n  /**\n   * The `<dom-repeat>` element will automatically stamp and binds one instance\n   * of template content to each object in a user-provided array.\n   * `dom-repeat` accepts an `items` property, and one instance of the template\n   * is stamped for each item into the DOM at the location of the `dom-repeat`\n   * element.  The `item` property will be set on each instance's binding\n   * scope, thus templates should bind to sub-properties of `item`.\n   *\n   * Example:\n   *\n   * ```html\n   * <dom-module id=\"employee-list\">\n   *\n   *   <template>\n   *\n   *     <div> Employee list: </div>\n   *     <dom-repeat items=\"{{employees}}\">\n   *       <template>\n   *         <div>First name: <span>{{item.first}}</span></div>\n   *         <div>Last name: <span>{{item.last}}</span></div>\n   *       </template>\n   *     </dom-repeat>\n   *\n   *   </template>\n   *\n   *   <script>\n   *     class EmployeeList extends Polymer.Element {\n   *       static get is() { return 'employee-list'; }\n   *       static get properties() {\n   *         return {\n   *           employees: {\n   *             value() {\n   *               return [\n   *                 {first: 'Bob', last: 'Smith'},\n   *                 {first: 'Sally', last: 'Johnson'},\n   *                 ...\n   *               ];\n   *             }\n   *           }\n   *         };\n   *       }\n   *     }\n   *   < /script>\n   *\n   * </dom-module>\n   * ```\n   *\n   * Notifications for changes to items sub-properties will be forwarded to template\n   * instances, which will update via the normal structured data notification system.\n   *\n   * Mutations to the `items` array itself should be made using the Array\n   * mutation API's on `Polymer.Base` (`push`, `pop`, `splice`, `shift`,\n   * `unshift`), and template instances will be kept in sync with the data in the\n   * array.\n   *\n   * Events caught by event handlers within the `dom-repeat` template will be\n   * decorated with a `model` property, which represents the binding scope for\n   * each template instance.  The model is an instance of Polymer.Base, and should\n   * be used to manipulate data on the instance, for example\n   * `event.model.set('item.checked', true);`.\n   *\n   * Alternatively, the model for a template instance for an element stamped by\n   * a `dom-repeat` can be obtained using the `modelForElement` API on the\n   * `dom-repeat` that stamped it, for example\n   * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.\n   * This may be useful for manipulating instance data of event targets obtained\n   * by event handlers on parents of the `dom-repeat` (event delegation).\n   *\n   * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a\n   * `filter` and/or `sort` property.  This may be a string that names a function on\n   * the host, or a function may be assigned to the property directly.  The functions\n   * should implemented following the standard `Array` filter/sort API.\n   *\n   * In order to re-run the filter or sort functions based on changes to sub-fields\n   * of `items`, the `observe` property may be set as a space-separated list of\n   * `item` sub-fields that should cause a re-filter/sort when modified.  If\n   * the filter or sort function depends on properties not contained in `items`,\n   * the user should observe changes to those properties and call `render` to update\n   * the view based on the dependency change.\n   *\n   * For example, for an `dom-repeat` with a filter of the following:\n   *\n   * ```js\n   * isEngineer(item) {\n   *   return item.type == 'engineer' || item.manager.type == 'engineer';\n   * }\n   * ```\n   *\n   * Then the `observe` property should be configured as follows:\n   *\n   * ```html\n   * <dom-repeat items=\"{{employees}}\" filter=\"isEngineer\" observe=\"type manager.type\">\n   * ```\n   *\n   * @customElement\n   * @polymer\n   * @memberof Polymer\n   * @extends {domRepeatBase}\n   * @appliesMixin Polymer.OptionalMutableData\n   * @summary Custom element for stamping instance of a template bound to\n   *   items in an array.\n   */\n\n  var DomRepeat = function (_domRepeatBase) {\n    _inherits(DomRepeat, _domRepeatBase);\n\n    _createClass(DomRepeat, null, [{\n      key: 'is',\n\n\n      // Not needed to find template; can be removed once the analyzer\n      // can find the tag name from customElements.define call\n      get: function get() {\n        return 'dom-repeat';\n      }\n    }, {\n      key: 'template',\n      get: function get() {\n        return null;\n      }\n    }, {\n      key: 'properties',\n      get: function get() {\n\n        /**\n         * Fired whenever DOM is added or removed by this template (by\n         * default, rendering occurs lazily).  To force immediate rendering, call\n         * `render`.\n         *\n         * @event dom-change\n         */\n        return {\n\n          /**\n           * An array containing items determining how many instances of the template\n           * to stamp and that that each template instance should bind to.\n           */\n          items: {\n            type: Array\n          },\n\n          /**\n           * The name of the variable to add to the binding scope for the array\n           * element associated with a given template instance.\n           */\n          as: {\n            type: String,\n            value: 'item'\n          },\n\n          /**\n           * The name of the variable to add to the binding scope with the index\n           * of the instance in the sorted and filtered list of rendered items.\n           * Note, for the index in the `this.items` array, use the value of the\n           * `itemsIndexAs` property.\n           */\n          indexAs: {\n            type: String,\n            value: 'index'\n          },\n\n          /**\n           * The name of the variable to add to the binding scope with the index\n           * of the instance in the `this.items` array. Note, for the index of\n           * this instance in the sorted and filtered list of rendered items,\n           * use the value of the `indexAs` property.\n           */\n          itemsIndexAs: {\n            type: String,\n            value: 'itemsIndex'\n          },\n\n          /**\n           * A function that should determine the sort order of the items.  This\n           * property should either be provided as a string, indicating a method\n           * name on the element's host, or else be an actual function.  The\n           * function should match the sort function passed to `Array.sort`.\n           * Using a sort function has no effect on the underlying `items` array.\n           */\n          sort: {\n            type: Function,\n            observer: '__sortChanged'\n          },\n\n          /**\n           * A function that can be used to filter items out of the view.  This\n           * property should either be provided as a string, indicating a method\n           * name on the element's host, or else be an actual function.  The\n           * function should match the sort function passed to `Array.filter`.\n           * Using a filter function has no effect on the underlying `items` array.\n           */\n          filter: {\n            type: Function,\n            observer: '__filterChanged'\n          },\n\n          /**\n           * When using a `filter` or `sort` function, the `observe` property\n           * should be set to a space-separated list of the names of item\n           * sub-fields that should trigger a re-sort or re-filter when changed.\n           * These should generally be fields of `item` that the sort or filter\n           * function depends on.\n           */\n          observe: {\n            type: String,\n            observer: '__observeChanged'\n          },\n\n          /**\n           * When using a `filter` or `sort` function, the `delay` property\n           * determines a debounce time in ms after a change to observed item\n           * properties that must pass before the filter or sort is re-run.\n           * This is useful in rate-limiting shuffling of the view when\n           * item changes may be frequent.\n           */\n          delay: Number,\n\n          /**\n           * Count of currently rendered items after `filter` (if any) has been applied.\n           * If \"chunking mode\" is enabled, `renderedItemCount` is updated each time a\n           * set of template instances is rendered.\n           *\n           */\n          renderedItemCount: {\n            type: Number,\n            notify: true,\n            readOnly: true\n          },\n\n          /**\n           * Defines an initial count of template instances to render after setting\n           * the `items` array, before the next paint, and puts the `dom-repeat`\n           * into \"chunking mode\".  The remaining items will be created and rendered\n           * incrementally at each animation frame therof until all instances have\n           * been rendered.\n           */\n          initialCount: {\n            type: Number,\n            observer: '__initializeChunking'\n          },\n\n          /**\n           * When `initialCount` is used, this property defines a frame rate (in\n           * fps) to target by throttling the number of instances rendered each\n           * frame to not exceed the budget for the target frame rate.  The\n           * framerate is effectively the number of `requestAnimationFrame`s that\n           * it tries to allow to actually fire in a given second. It does this\n           * by measuring the time between `rAF`s and continuously adjusting the\n           * number of items created each `rAF` to maintain the target framerate.\n           * Setting this to a higher number allows lower latency and higher\n           * throughput for event handlers and other tasks, but results in a\n           * longer time for the remaining items to complete rendering.\n           */\n          targetFramerate: {\n            type: Number,\n            value: 20\n          },\n\n          _targetFrameTime: {\n            type: Number,\n            computed: '__computeFrameTime(targetFramerate)'\n          }\n\n        };\n      }\n    }, {\n      key: 'observers',\n      get: function get() {\n        return ['__itemsChanged(items.*)'];\n      }\n    }]);\n\n    function DomRepeat() {\n      _classCallCheck(this, DomRepeat);\n\n      var _this = _possibleConstructorReturn(this, (DomRepeat.__proto__ || Object.getPrototypeOf(DomRepeat)).call(this));\n\n      _this.__instances = [];\n      _this.__limit = Infinity;\n      _this.__pool = [];\n      _this.__renderDebouncer = null;\n      _this.__itemsIdxToInstIdx = {};\n      _this.__chunkCount = null;\n      _this.__lastChunkTime = null;\n      _this.__sortFn = null;\n      _this.__filterFn = null;\n      _this.__observePaths = null;\n      _this.__ctor = null;\n      _this.__isDetached = true;\n      _this.template = null;\n      return _this;\n    }\n\n    /**\n     * @return {void}\n     */\n\n\n    _createClass(DomRepeat, [{\n      key: 'disconnectedCallback',\n      value: function disconnectedCallback() {\n        _get(DomRepeat.prototype.__proto__ || Object.getPrototypeOf(DomRepeat.prototype), 'disconnectedCallback', this).call(this);\n        this.__isDetached = true;\n        for (var i = 0; i < this.__instances.length; i++) {\n          this.__detachInstance(i);\n        }\n      }\n\n      /**\n       * @return {void}\n       */\n\n    }, {\n      key: 'connectedCallback',\n      value: function connectedCallback() {\n        _get(DomRepeat.prototype.__proto__ || Object.getPrototypeOf(DomRepeat.prototype), 'connectedCallback', this).call(this);\n        this.style.display = 'none';\n        // only perform attachment if the element was previously detached.\n        if (this.__isDetached) {\n          this.__isDetached = false;\n          var parent = this.parentNode;\n          for (var i = 0; i < this.__instances.length; i++) {\n            this.__attachInstance(i, parent);\n          }\n        }\n      }\n    }, {\n      key: '__ensureTemplatized',\n      value: function __ensureTemplatized() {\n        var _this2 = this;\n\n        // Templatizing (generating the instance constructor) needs to wait\n        // until ready, since won't have its template content handed back to\n        // it until then\n        if (!this.__ctor) {\n          var template = this.template = this.querySelector('template');\n          if (!template) {\n            // // Wait until childList changes and template should be there by then\n            var observer = new MutationObserver(function () {\n              if (_this2.querySelector('template')) {\n                observer.disconnect();\n                _this2.__render();\n              } else {\n                throw new Error('dom-repeat requires a <template> child');\n              }\n            });\n            observer.observe(this, { childList: true });\n            return false;\n          }\n          // Template instance props that should be excluded from forwarding\n          var instanceProps = {};\n          instanceProps[this.as] = true;\n          instanceProps[this.indexAs] = true;\n          instanceProps[this.itemsIndexAs] = true;\n          this.__ctor = Polymer.Templatize.templatize(template, this, {\n            mutableData: this.mutableData,\n            parentModel: true,\n            instanceProps: instanceProps,\n            /**\n             * @this {this}\n             * @param {string} prop Property to set\n             * @param {*} value Value to set property to\n             */\n            forwardHostProp: function forwardHostProp(prop, value) {\n              var i$ = this.__instances;\n              for (var i = 0, inst; i < i$.length && (inst = i$[i]); i++) {\n                inst.forwardHostProp(prop, value);\n              }\n            },\n            /**\n             * @this {this}\n             * @param {Object} inst Instance to notify\n             * @param {string} prop Property to notify\n             * @param {*} value Value to notify\n             */\n            notifyInstanceProp: function notifyInstanceProp(inst, prop, value) {\n              if (Polymer.Path.matches(this.as, prop)) {\n                var idx = inst[this.itemsIndexAs];\n                if (prop == this.as) {\n                  this.items[idx] = value;\n                }\n                var path = Polymer.Path.translate(this.as, 'items.' + idx, prop);\n                this.notifyPath(path, value);\n              }\n            }\n          });\n        }\n        return true;\n      }\n    }, {\n      key: '__getMethodHost',\n      value: function __getMethodHost() {\n        // Technically this should be the owner of the outermost template.\n        // In shadow dom, this is always getRootNode().host, but we can\n        // approximate this via cooperation with our dataHost always setting\n        // `_methodHost` as long as there were bindings (or id's) on this\n        // instance causing it to get a dataHost.\n        return this.__dataHost._methodHost || this.__dataHost;\n      }\n    }, {\n      key: '__functionFromPropertyValue',\n      value: function __functionFromPropertyValue(functionOrMethodName) {\n        if (typeof functionOrMethodName === 'string') {\n          var methodName = functionOrMethodName;\n          var obj = this.__getMethodHost();\n          return function () {\n            return obj[methodName].apply(obj, arguments);\n          };\n        }\n\n        return functionOrMethodName;\n      }\n    }, {\n      key: '__sortChanged',\n      value: function __sortChanged(sort) {\n        this.__sortFn = this.__functionFromPropertyValue(sort);\n        if (this.items) {\n          this.__debounceRender(this.__render);\n        }\n      }\n    }, {\n      key: '__filterChanged',\n      value: function __filterChanged(filter) {\n        this.__filterFn = this.__functionFromPropertyValue(filter);\n        if (this.items) {\n          this.__debounceRender(this.__render);\n        }\n      }\n    }, {\n      key: '__computeFrameTime',\n      value: function __computeFrameTime(rate) {\n        return Math.ceil(1000 / rate);\n      }\n    }, {\n      key: '__initializeChunking',\n      value: function __initializeChunking() {\n        if (this.initialCount) {\n          this.__limit = this.initialCount;\n          this.__chunkCount = this.initialCount;\n          this.__lastChunkTime = performance.now();\n        }\n      }\n    }, {\n      key: '__tryRenderChunk',\n      value: function __tryRenderChunk() {\n        // Debounced so that multiple calls through `_render` between animation\n        // frames only queue one new rAF (e.g. array mutation & chunked render)\n        if (this.items && this.__limit < this.items.length) {\n          this.__debounceRender(this.__requestRenderChunk);\n        }\n      }\n    }, {\n      key: '__requestRenderChunk',\n      value: function __requestRenderChunk() {\n        var _this3 = this;\n\n        requestAnimationFrame(function () {\n          return _this3.__renderChunk();\n        });\n      }\n    }, {\n      key: '__renderChunk',\n      value: function __renderChunk() {\n        // Simple auto chunkSize throttling algorithm based on feedback loop:\n        // measure actual time between frames and scale chunk count by ratio\n        // of target/actual frame time\n        var currChunkTime = performance.now();\n        var ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);\n        this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;\n        this.__limit += this.__chunkCount;\n        this.__lastChunkTime = currChunkTime;\n        this.__debounceRender(this.__render);\n      }\n    }, {\n      key: '__observeChanged',\n      value: function __observeChanged() {\n        this.__observePaths = this.observe && this.observe.replace('.*', '.').split(' ');\n      }\n    }, {\n      key: '__itemsChanged',\n      value: function __itemsChanged(change) {\n        if (this.items && !Array.isArray(this.items)) {\n          console.warn('dom-repeat expected array for `items`, found', this.items);\n        }\n        // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the\n        // path to that instance synchronously (returns false for non-item paths)\n        if (!this.__handleItemPath(change.path, change.value)) {\n          // Otherwise, the array was reset ('items') or spliced ('items.splices'),\n          // so queue a full refresh\n          this.__initializeChunking();\n          this.__debounceRender(this.__render);\n        }\n      }\n    }, {\n      key: '__handleObservedPaths',\n      value: function __handleObservedPaths(path) {\n        // Handle cases where path changes should cause a re-sort/filter\n        if (this.__sortFn || this.__filterFn) {\n          if (!path) {\n            // Always re-render if the item itself changed\n            this.__debounceRender(this.__render, this.delay);\n          } else if (this.__observePaths) {\n            // Otherwise, re-render if the path changed matches an observed path\n            var paths = this.__observePaths;\n            for (var i = 0; i < paths.length; i++) {\n              if (path.indexOf(paths[i]) === 0) {\n                this.__debounceRender(this.__render, this.delay);\n              }\n            }\n          }\n        }\n      }\n\n      /**\n       * @param {function(this:DomRepeat)} fn Function to debounce.\n       * @param {number=} delay Delay in ms to debounce by.\n       */\n\n    }, {\n      key: '__debounceRender',\n      value: function __debounceRender(fn) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        this.__renderDebouncer = Polymer.Debouncer.debounce(this.__renderDebouncer, delay > 0 ? Polymer.Async.timeOut.after(delay) : Polymer.Async.microTask, fn.bind(this));\n        Polymer.enqueueDebouncer(this.__renderDebouncer);\n      }\n\n      /**\n       * Forces the element to render its content. Normally rendering is\n       * asynchronous to a provoking change. This is done for efficiency so\n       * that multiple changes trigger only a single render. The render method\n       * should be called if, for example, template rendering is required to\n       * validate application state.\n       * @return {void}\n       */\n\n    }, {\n      key: 'render',\n      value: function render() {\n        // Queue this repeater, then flush all in order\n        this.__debounceRender(this.__render);\n        Polymer.flush();\n      }\n    }, {\n      key: '__render',\n      value: function __render() {\n        if (!this.__ensureTemplatized()) {\n          // No template found yet\n          return;\n        }\n        this.__applyFullRefresh();\n        // Reset the pool\n        // TODO(kschaaf): Reuse pool across turns and nested templates\n        // Now that objects/arrays are re-evaluated when set, we can safely\n        // reuse pooled instances across turns, however we still need to decide\n        // semantics regarding how long to hold, how many to hold, etc.\n        this.__pool.length = 0;\n        // Set rendered item count\n        this._setRenderedItemCount(this.__instances.length);\n        // Notify users\n        this.dispatchEvent(new CustomEvent('dom-change', {\n          bubbles: true,\n          composed: true\n        }));\n        // Check to see if we need to render more items\n        this.__tryRenderChunk();\n      }\n    }, {\n      key: '__applyFullRefresh',\n      value: function __applyFullRefresh() {\n        var _this4 = this;\n\n        var items = this.items || [];\n        var isntIdxToItemsIdx = new Array(items.length);\n        for (var i = 0; i < items.length; i++) {\n          isntIdxToItemsIdx[i] = i;\n        }\n        // Apply user filter\n        if (this.__filterFn) {\n          isntIdxToItemsIdx = isntIdxToItemsIdx.filter(function (i, idx, array) {\n            return _this4.__filterFn(items[i], idx, array);\n          });\n        }\n        // Apply user sort\n        if (this.__sortFn) {\n          isntIdxToItemsIdx.sort(function (a, b) {\n            return _this4.__sortFn(items[a], items[b]);\n          });\n        }\n        // items->inst map kept for item path forwarding\n        var itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};\n        var instIdx = 0;\n        // Generate instances and assign items\n        var limit = Math.min(isntIdxToItemsIdx.length, this.__limit);\n        for (; instIdx < limit; instIdx++) {\n          var inst = this.__instances[instIdx];\n          var itemIdx = isntIdxToItemsIdx[instIdx];\n          var item = items[itemIdx];\n          itemsIdxToInstIdx[itemIdx] = instIdx;\n          if (inst) {\n            inst._setPendingProperty(this.as, item);\n            inst._setPendingProperty(this.indexAs, instIdx);\n            inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n            inst._flushProperties();\n          } else {\n            this.__insertInstance(item, instIdx, itemIdx);\n          }\n        }\n        // Remove any extra instances from previous state\n        for (var _i = this.__instances.length - 1; _i >= instIdx; _i--) {\n          this.__detachAndRemoveInstance(_i);\n        }\n      }\n    }, {\n      key: '__detachInstance',\n      value: function __detachInstance(idx) {\n        var inst = this.__instances[idx];\n        for (var i = 0; i < inst.children.length; i++) {\n          var el = inst.children[i];\n          inst.root.appendChild(el);\n        }\n        return inst;\n      }\n    }, {\n      key: '__attachInstance',\n      value: function __attachInstance(idx, parent) {\n        var inst = this.__instances[idx];\n        parent.insertBefore(inst.root, this);\n      }\n    }, {\n      key: '__detachAndRemoveInstance',\n      value: function __detachAndRemoveInstance(idx) {\n        var inst = this.__detachInstance(idx);\n        if (inst) {\n          this.__pool.push(inst);\n        }\n        this.__instances.splice(idx, 1);\n      }\n    }, {\n      key: '__stampInstance',\n      value: function __stampInstance(item, instIdx, itemIdx) {\n        var model = {};\n        model[this.as] = item;\n        model[this.indexAs] = instIdx;\n        model[this.itemsIndexAs] = itemIdx;\n        return new this.__ctor(model);\n      }\n    }, {\n      key: '__insertInstance',\n      value: function __insertInstance(item, instIdx, itemIdx) {\n        var inst = this.__pool.pop();\n        if (inst) {\n          // TODO(kschaaf): If the pool is shared across turns, hostProps\n          // need to be re-set to reused instances in addition to item\n          inst._setPendingProperty(this.as, item);\n          inst._setPendingProperty(this.indexAs, instIdx);\n          inst._setPendingProperty(this.itemsIndexAs, itemIdx);\n          inst._flushProperties();\n        } else {\n          inst = this.__stampInstance(item, instIdx, itemIdx);\n        }\n        var beforeRow = this.__instances[instIdx + 1];\n        var beforeNode = beforeRow ? beforeRow.children[0] : this;\n        this.parentNode.insertBefore(inst.root, beforeNode);\n        this.__instances[instIdx] = inst;\n        return inst;\n      }\n\n      // Implements extension point from Templatize mixin\n      /**\n       * Shows or hides the template instance top level child elements. For\n       * text nodes, `textContent` is removed while \"hidden\" and replaced when\n       * \"shown.\"\n       * @param {boolean} hidden Set to true to hide the children;\n       * set to false to show them.\n       * @return {void}\n       * @protected\n       */\n\n    }, {\n      key: '_showHideChildren',\n      value: function _showHideChildren(hidden) {\n        for (var i = 0; i < this.__instances.length; i++) {\n          this.__instances[i]._showHideChildren(hidden);\n        }\n      }\n\n      // Called as a side effect of a host items.<key>.<path> path change,\n      // responsible for notifying item.<path> changes to inst for key\n\n    }, {\n      key: '__handleItemPath',\n      value: function __handleItemPath(path, value) {\n        var itemsPath = path.slice(6); // 'items.'.length == 6\n        var dot = itemsPath.indexOf('.');\n        var itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot);\n        // If path was index into array...\n        if (itemsIdx == parseInt(itemsIdx, 10)) {\n          var itemSubPath = dot < 0 ? '' : itemsPath.substring(dot + 1);\n          // If the path is observed, it will trigger a full refresh\n          this.__handleObservedPaths(itemSubPath);\n          // Note, even if a rull refresh is triggered, always do the path\n          // notification because unless mutableData is used for dom-repeat\n          // and all elements in the instance subtree, a full refresh may\n          // not trigger the proper update.\n          var instIdx = this.__itemsIdxToInstIdx[itemsIdx];\n          var inst = this.__instances[instIdx];\n          if (inst) {\n            var itemPath = this.as + (itemSubPath ? '.' + itemSubPath : '');\n            // This is effectively `notifyPath`, but avoids some of the overhead\n            // of the public API\n            inst._setPendingPropertyOrPath(itemPath, value, false, true);\n            inst._flushProperties();\n          }\n          return true;\n        }\n      }\n\n      /**\n       * Returns the item associated with a given element stamped by\n       * this `dom-repeat`.\n       *\n       * Note, to modify sub-properties of the item,\n       * `modelForElement(el).set('item.<sub-prop>', value)`\n       * should be used.\n       *\n       * @param {!HTMLElement} el Element for which to return the item.\n       * @return {*} Item associated with the element.\n       */\n\n    }, {\n      key: 'itemForElement',\n      value: function itemForElement(el) {\n        var instance = this.modelForElement(el);\n        return instance && instance[this.as];\n      }\n\n      /**\n       * Returns the inst index for a given element stamped by this `dom-repeat`.\n       * If `sort` is provided, the index will reflect the sorted order (rather\n       * than the original array order).\n       *\n       * @param {!HTMLElement} el Element for which to return the index.\n       * @return {?number} Row index associated with the element (note this may\n       *   not correspond to the array index if a user `sort` is applied).\n       */\n\n    }, {\n      key: 'indexForElement',\n      value: function indexForElement(el) {\n        var instance = this.modelForElement(el);\n        return instance && instance[this.indexAs];\n      }\n\n      /**\n       * Returns the template \"model\" associated with a given element, which\n       * serves as the binding scope for the template instance the element is\n       * contained in. A template model is an instance of `Polymer.Base`, and\n       * should be used to manipulate data associated with this template instance.\n       *\n       * Example:\n       *\n       *   let model = modelForElement(el);\n       *   if (model.index < 10) {\n       *     model.set('item.checked', true);\n       *   }\n       *\n       * @param {!HTMLElement} el Element for which to return a template model.\n       * @return {TemplateInstanceBase} Model representing the binding scope for\n       *   the element.\n       */\n\n    }, {\n      key: 'modelForElement',\n      value: function modelForElement(el) {\n        return Polymer.Templatize.modelForElement(this.template, el);\n      }\n    }]);\n\n    return DomRepeat;\n  }(domRepeatBase);\n\n  customElements.define(DomRepeat.is, DomRepeat);\n\n  Polymer.DomRepeat = DomRepeat;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/elements/dom-repeat.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/class.html":
/*!********************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/class.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ./legacy-element-mixin.html */ \"./bower_components/polymer/lib/legacy/legacy-element-mixin.html\");\n\n(function () {\n\n  'use strict';\n\n  var metaProps = {\n    attached: true,\n    detached: true,\n    ready: true,\n    created: true,\n    beforeRegister: true,\n    registered: true,\n    attributeChanged: true,\n    // meta objects\n    behaviors: true\n  };\n\n  /**\n   * Applies a \"legacy\" behavior or array of behaviors to the provided class.\n   *\n   * Note: this method will automatically also apply the `Polymer.LegacyElementMixin`\n   * to ensure that any legacy behaviors can rely on legacy Polymer API on\n   * the underlying element.\n   *\n   * @template T\n   * @param {!Object|!Array<!Object>} behaviors Behavior object or array of behaviors.\n   * @param {function(new:T)} klass Element class.\n   * @return {function(new:T)} Returns a new Element class extended by the\n   * passed in `behaviors` and also by `Polymer.LegacyElementMixin`.\n   * @memberof Polymer\n   * @suppress {invalidCasts, checkTypes}\n   */\n  function mixinBehaviors(behaviors, klass) {\n    if (!behaviors) {\n      klass = /** @type {HTMLElement} */klass; // eslint-disable-line no-self-assign\n      return klass;\n    }\n    // NOTE: ensure the behavior is extending a class with\n    // legacy element api. This is necessary since behaviors expect to be able\n    // to access 1.x legacy api.\n    klass = Polymer.LegacyElementMixin(klass);\n    if (!Array.isArray(behaviors)) {\n      behaviors = [behaviors];\n    }\n    var superBehaviors = klass.prototype.behaviors;\n    // get flattened, deduped list of behaviors *not* already on super class\n    behaviors = flattenBehaviors(behaviors, null, superBehaviors);\n    // mixin new behaviors\n    klass = _mixinBehaviors(behaviors, klass);\n    if (superBehaviors) {\n      behaviors = superBehaviors.concat(behaviors);\n    }\n    // Set behaviors on prototype for BC...\n    klass.prototype.behaviors = behaviors;\n    return klass;\n  }\n\n  // NOTE:\n  // 1.x\n  // Behaviors were mixed in *in reverse order* and de-duped on the fly.\n  // The rule was that behavior properties were copied onto the element\n  // prototype if and only if the property did not already exist.\n  // Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:\n  // (1), B, (2), A, (3) C. This means prototype properties win over\n  // B properties win over A win over C. This mirrors what would happen\n  // with inheritance if element extended B extended A extended C.\n  //\n  // Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting\n  // `behaviors` array was [C, A, B].\n  // Behavior lifecycle methods were called in behavior array order\n  // followed by the element, e.g. (1) C.created, (2) A.created,\n  // (3) B.created, (4) element.created. There was no support for\n  // super, and \"super-behavior\" methods were callable only by name).\n  //\n  // 2.x\n  // Behaviors are made into proper mixins which live in the\n  // element's prototype chain. Behaviors are placed in the element prototype\n  // eldest to youngest and de-duped youngest to oldest:\n  // So, first [A, B, C, A, B] becomes [C, A, B] then,\n  // the element prototype becomes (oldest) (1) Polymer.Element, (2) class(C),\n  // (3) class(A), (4) class(B), (5) class(Polymer({...})).\n  // Result:\n  // This means element properties win over B properties win over A win\n  // over C. (same as 1.x)\n  // If lifecycle is called (super then me), order is\n  // (1) C.created, (2) A.created, (3) B.created, (4) element.created\n  // (again same as 1.x)\n  function _mixinBehaviors(behaviors, klass) {\n    for (var i = 0; i < behaviors.length; i++) {\n      var b = behaviors[i];\n      if (b) {\n        klass = Array.isArray(b) ? _mixinBehaviors(b, klass) : GenerateClassFromInfo(b, klass);\n      }\n    }\n    return klass;\n  }\n\n  /**\n   * @param {Array} behaviors List of behaviors to flatten.\n   * @param {Array=} list Target list to flatten behaviors into.\n   * @param {Array=} exclude List of behaviors to exclude from the list.\n   * @return {!Array} Returns the list of flattened behaviors.\n   */\n  function flattenBehaviors(behaviors, list, exclude) {\n    list = list || [];\n    for (var i = behaviors.length - 1; i >= 0; i--) {\n      var b = behaviors[i];\n      if (b) {\n        if (Array.isArray(b)) {\n          flattenBehaviors(b, list);\n        } else {\n          // dedup\n          if (list.indexOf(b) < 0 && (!exclude || exclude.indexOf(b) < 0)) {\n            list.unshift(b);\n          }\n        }\n      } else {\n        console.warn('behavior is null, check for missing or 404 import');\n      }\n    }\n    return list;\n  }\n\n  /**\n   * @param {!PolymerInit} info Polymer info object\n   * @param {function(new:HTMLElement)} Base base class to extend with info object\n   * @return {function(new:HTMLElement)} Generated class\n   * @suppress {checkTypes}\n   * @private\n   */\n  function GenerateClassFromInfo(info, Base) {\n    var PolymerGenerated = function (_Base) {\n      _inherits(PolymerGenerated, _Base);\n\n      function PolymerGenerated() {\n        _classCallCheck(this, PolymerGenerated);\n\n        return _possibleConstructorReturn(this, (PolymerGenerated.__proto__ || Object.getPrototypeOf(PolymerGenerated)).apply(this, arguments));\n      }\n\n      _createClass(PolymerGenerated, [{\n        key: 'created',\n\n\n        /**\n         * @return {void}\n         */\n        value: function created() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), 'created', this).call(this);\n          if (info.created) {\n            info.created.call(this);\n          }\n        }\n\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: '_registered',\n        value: function _registered() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), '_registered', this).call(this);\n          /* NOTE: `beforeRegister` is called here for bc, but the behavior\n           is different than in 1.x. In 1.0, the method was called *after*\n           mixing prototypes together but *before* processing of meta-objects.\n           However, dynamic effects can still be set here and can be done either\n           in `beforeRegister` or `registered`. It is no longer possible to set\n           `is` in `beforeRegister` as you could in 1.x.\n          */\n          if (info.beforeRegister) {\n            info.beforeRegister.call(Object.getPrototypeOf(this));\n          }\n          if (info.registered) {\n            info.registered.call(Object.getPrototypeOf(this));\n          }\n        }\n\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: '_applyListeners',\n        value: function _applyListeners() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), '_applyListeners', this).call(this);\n          if (info.listeners) {\n            for (var l in info.listeners) {\n              this._addMethodEventListenerToNode(this, l, info.listeners[l]);\n            }\n          }\n        }\n\n        // note: exception to \"super then me\" rule;\n        // do work before calling super so that super attributes\n        // only apply if not already set.\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: '_ensureAttributes',\n        value: function _ensureAttributes() {\n          if (info.hostAttributes) {\n            for (var a in info.hostAttributes) {\n              this._ensureAttribute(a, info.hostAttributes[a]);\n            }\n          }\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), '_ensureAttributes', this).call(this);\n        }\n\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: 'ready',\n        value: function ready() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), 'ready', this).call(this);\n          if (info.ready) {\n            info.ready.call(this);\n          }\n        }\n\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: 'attached',\n        value: function attached() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), 'attached', this).call(this);\n          if (info.attached) {\n            info.attached.call(this);\n          }\n        }\n\n        /**\n         * @return {void}\n         */\n\n      }, {\n        key: 'detached',\n        value: function detached() {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), 'detached', this).call(this);\n          if (info.detached) {\n            info.detached.call(this);\n          }\n        }\n\n        /**\n         * Implements native Custom Elements `attributeChangedCallback` to\n         * set an attribute value to a property via `_attributeToProperty`.\n         *\n         * @param {string} name Name of attribute that changed\n         * @param {?string} old Old attribute value\n         * @param {?string} value New attribute value\n         * @return {void}\n         */\n\n      }, {\n        key: 'attributeChanged',\n        value: function attributeChanged(name, old, value) {\n          _get(PolymerGenerated.prototype.__proto__ || Object.getPrototypeOf(PolymerGenerated.prototype), 'attributeChanged', this).call(this, name, old, value);\n          if (info.attributeChanged) {\n            info.attributeChanged.call(this, name, old, value);\n          }\n        }\n      }], [{\n        key: 'properties',\n        get: function get() {\n          return info.properties;\n        }\n      }, {\n        key: 'observers',\n        get: function get() {\n          return info.observers;\n        }\n\n        /**\n         * @return {HTMLTemplateElement} template for this class\n         */\n\n      }, {\n        key: 'template',\n        get: function get() {\n          // get template first from any imperative set in `info._template`\n          return info._template ||\n          // next look in dom-module associated with this element's is.\n          Polymer.DomModule && Polymer.DomModule.import(this.is, 'template') ||\n          // next look for superclass template (note: use superclass symbol\n          // to ensure correct `this.is`)\n          Base.template ||\n          // finally fall back to `_template` in element's prototype.\n          this.prototype._template || null;\n        }\n      }]);\n\n      return PolymerGenerated;\n    }(Base);\n\n    PolymerGenerated.generatedFrom = info;\n\n    for (var p in info) {\n      // NOTE: cannot copy `metaProps` methods onto prototype at least because\n      // `super.ready` must be called and is not included in the user fn.\n      if (!(p in metaProps)) {\n        var pd = Object.getOwnPropertyDescriptor(info, p);\n        if (pd) {\n          Object.defineProperty(PolymerGenerated.prototype, p, pd);\n        }\n      }\n    }\n\n    return PolymerGenerated;\n  }\n\n  /**\n   * Generates a class that extends `Polymer.LegacyElement` based on the\n   * provided info object.  Metadata objects on the `info` object\n   * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used\n   * for Polymer's meta-programming systems, and any functions are copied\n   * to the generated class.\n   *\n   * Valid \"metadata\" values are as follows:\n   *\n   * `is`: String providing the tag name to register the element under. In\n   * addition, if a `dom-module` with the same id exists, the first template\n   * in that `dom-module` will be stamped into the shadow root of this element,\n   * with support for declarative event listeners (`on-...`), Polymer data\n   * bindings (`[[...]]` and `{{...}}`), and id-based node finding into\n   * `this.$`.\n   *\n   * `properties`: Object describing property-related metadata used by Polymer\n   * features (key: property names, value: object containing property metadata).\n   * Valid keys in per-property metadata include:\n   * - `type` (String|Number|Object|Array|...): Used by\n   *   `attributeChangedCallback` to determine how string-based attributes\n   *   are deserialized to JavaScript property values.\n   * - `notify` (boolean): Causes a change in the property to fire a\n   *   non-bubbling event called `<property>-changed`. Elements that have\n   *   enabled two-way binding to the property use this event to observe changes.\n   * - `readOnly` (boolean): Creates a getter for the property, but no setter.\n   *   To set a read-only property, use the private setter method\n   *   `_setProperty(property, value)`.\n   * - `observer` (string): Observer method name that will be called when\n   *   the property changes. The arguments of the method are\n   *   `(value, previousValue)`.\n   * - `computed` (string): String describing method and dependent properties\n   *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n   *   Computed properties are read-only by default and can only be changed\n   *   via the return value of the computing method.\n   *\n   * `observers`: Array of strings describing multi-property observer methods\n   *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).\n   *\n   * `listeners`: Object describing event listeners to be added to each\n   *  instance of this element (key: event name, value: method name).\n   *\n   * `behaviors`: Array of additional `info` objects containing metadata\n   * and callbacks in the same format as the `info` object here which are\n   * merged into this element.\n   *\n   * `hostAttributes`: Object listing attributes to be applied to the host\n   *  once created (key: attribute name, value: attribute value).  Values\n   *  are serialized based on the type of the value.  Host attributes should\n   *  generally be limited to attributes such as `tabIndex` and `aria-...`.\n   *  Attributes in `hostAttributes` are only applied if a user-supplied\n   *  attribute is not already present (attributes in markup override\n   *  `hostAttributes`).\n   *\n   * In addition, the following Polymer-specific callbacks may be provided:\n   * - `registered`: called after first instance of this element,\n   * - `created`: called during `constructor`\n   * - `attached`: called during `connectedCallback`\n   * - `detached`: called during `disconnectedCallback`\n   * - `ready`: called before first `attached`, after all properties of\n   *   this element have been propagated to its template and all observers\n   *   have run\n   *\n   * @param {!PolymerInit} info Object containing Polymer metadata and functions\n   *   to become class methods.\n   * @return {function(new:HTMLElement)} Generated class\n   * @memberof Polymer\n   */\n  Polymer.Class = function (info) {\n    if (!info) {\n      console.warn('Polymer.Class requires `info` argument');\n    }\n    var klass = GenerateClassFromInfo(info, info.behaviors ?\n    // note: mixinBehaviors ensures `LegacyElementMixin`.\n    mixinBehaviors(info.behaviors, HTMLElement) : Polymer.LegacyElementMixin(HTMLElement));\n    // decorate klass with registration info\n    klass.is = info.is;\n    return klass;\n  };\n\n  Polymer.mixinBehaviors = mixinBehaviors;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/class.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/legacy-element-mixin.html":
/*!***********************************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/legacy-element-mixin.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../../../shadycss/apply-shim.html */ \"./bower_components/shadycss/apply-shim.html\");\n\n__webpack_require__(/*! ../mixins/element-mixin.html */ \"./bower_components/polymer/lib/mixins/element-mixin.html\");\n\n__webpack_require__(/*! ../mixins/gesture-event-listeners.html */ \"./bower_components/polymer/lib/mixins/gesture-event-listeners.html\");\n\n__webpack_require__(/*! ../mixins/dir-mixin.html */ \"./bower_components/polymer/lib/mixins/dir-mixin.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/import-href.html */ \"./bower_components/polymer/lib/utils/import-href.html\");\n\n__webpack_require__(/*! ../utils/render-status.html */ \"./bower_components/polymer/lib/utils/render-status.html\");\n\n__webpack_require__(/*! ../utils/unresolved.html */ \"./bower_components/polymer/lib/utils/unresolved.html\");\n\n__webpack_require__(/*! ./polymer.dom.html */ \"./bower_components/polymer/lib/legacy/polymer.dom.html\");\n\n(function () {\n\n  'use strict';\n\n  var styleInterface = window.ShadyCSS;\n\n  /**\n   * Element class mixin that provides Polymer's \"legacy\" API intended to be\n   * backward-compatible to the greatest extent possible with the API\n   * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements\n   * defined using the `Polymer({...})` function.\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.ElementMixin\n   * @appliesMixin Polymer.GestureEventListeners\n   * @property isAttached {boolean} Set to `true` in this element's\n   *   `connectedCallback` and `false` in `disconnectedCallback`\n   * @memberof Polymer\n   * @summary Element class mixin that provides Polymer's \"legacy\" API\n   */\n  Polymer.LegacyElementMixin = Polymer.dedupingMixin(function (base) {\n\n    /**\n     * @constructor\n     * @extends {base}\n     * @implements {Polymer_ElementMixin}\n     * @implements {Polymer_GestureEventListeners}\n     * @implements {Polymer_DirMixin}\n     */\n    var legacyElementBase = Polymer.DirMixin(Polymer.GestureEventListeners(Polymer.ElementMixin(base)));\n\n    /**\n     * Map of simple names to touch action names\n     * @dict\n     */\n    var DIRECTION_MAP = {\n      'x': 'pan-x',\n      'y': 'pan-y',\n      'none': 'none',\n      'all': 'auto'\n    };\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @extends {legacyElementBase}\n     * @implements {Polymer_LegacyElementMixin}\n     * @unrestricted\n     */\n\n    var LegacyElement = function (_legacyElementBase) {\n      _inherits(LegacyElement, _legacyElementBase);\n\n      function LegacyElement() {\n        _classCallCheck(this, LegacyElement);\n\n        var _this = _possibleConstructorReturn(this, (LegacyElement.__proto__ || Object.getPrototypeOf(LegacyElement)).call(this));\n\n        _this.root = _this;\n        /** @type {boolean} */\n        _this.isAttached;\n        /** @type {WeakMap<!Element, !Object<string, !Function>>} */\n        _this.__boundListeners;\n        /** @type {Object<string, Function>} */\n        _this._debouncers;\n        _this.created();\n        // Ensure listeners are applied immediately so that they are\n        // added before declarative event listeners. This allows an element to\n        // decorate itself via an event prior to any declarative listeners\n        // seeing the event. Note, this ensures compatibility with 1.x ordering.\n        _this._applyListeners();\n        return _this;\n      }\n\n      /**\n       * Legacy callback called during the `constructor`, for overriding\n       * by the user.\n       * @return {void}\n       */\n\n\n      _createClass(LegacyElement, [{\n        key: 'created',\n        value: function created() {}\n\n        /**\n         * Provides an implementation of `connectedCallback`\n         * which adds Polymer legacy API's `attached` method.\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: 'connectedCallback',\n        value: function connectedCallback() {\n          _get(LegacyElement.prototype.__proto__ || Object.getPrototypeOf(LegacyElement.prototype), 'connectedCallback', this).call(this);\n          this.isAttached = true;\n          this.attached();\n        }\n\n        /**\n         * Legacy callback called during `connectedCallback`, for overriding\n         * by the user.\n         * @return {void}\n         */\n\n      }, {\n        key: 'attached',\n        value: function attached() {}\n\n        /**\n         * Provides an implementation of `disconnectedCallback`\n         * which adds Polymer legacy API's `detached` method.\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: 'disconnectedCallback',\n        value: function disconnectedCallback() {\n          _get(LegacyElement.prototype.__proto__ || Object.getPrototypeOf(LegacyElement.prototype), 'disconnectedCallback', this).call(this);\n          this.isAttached = false;\n          this.detached();\n        }\n\n        /**\n         * Legacy callback called during `disconnectedCallback`, for overriding\n         * by the user.\n         * @return {void}\n         */\n\n      }, {\n        key: 'detached',\n        value: function detached() {}\n\n        /**\n         * Provides an override implementation of `attributeChangedCallback`\n         * which adds the Polymer legacy API's `attributeChanged` method.\n         * @param {string} name Name of attribute.\n         * @param {?string} old Old value of attribute.\n         * @param {?string} value Current value of attribute.\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: 'attributeChangedCallback',\n        value: function attributeChangedCallback(name, old, value) {\n          if (old !== value) {\n            _get(LegacyElement.prototype.__proto__ || Object.getPrototypeOf(LegacyElement.prototype), 'attributeChangedCallback', this).call(this, name, old, value);\n            this.attributeChanged(name, old, value);\n          }\n        }\n\n        /**\n         * Legacy callback called during `attributeChangedChallback`, for overriding\n         * by the user.\n         * @param {string} name Name of attribute.\n         * @param {?string} old Old value of attribute.\n         * @param {?string} value Current value of attribute.\n         * @return {void}\n         */\n\n      }, {\n        key: 'attributeChanged',\n        value: function attributeChanged(name, old, value) {} // eslint-disable-line no-unused-vars\n\n        /**\n         * Overrides the default `Polymer.PropertyEffects` implementation to\n         * add support for class initialization via the `_registered` callback.\n         * This is called only when the first instance of the element is created.\n         *\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: '_initializeProperties',\n        value: function _initializeProperties() {\n          var proto = Object.getPrototypeOf(this);\n          if (!proto.hasOwnProperty('__hasRegisterFinished')) {\n            proto.__hasRegisterFinished = true;\n            this._registered();\n          }\n          _get(LegacyElement.prototype.__proto__ || Object.getPrototypeOf(LegacyElement.prototype), '_initializeProperties', this).call(this);\n        }\n\n        /**\n         * Called automatically when an element is initializing.\n         * Users may override this method to perform class registration time\n         * work. The implementation should ensure the work is performed\n         * only once for the class.\n         * @protected\n         * @return {void}\n         */\n\n      }, {\n        key: '_registered',\n        value: function _registered() {}\n\n        /**\n         * Overrides the default `Polymer.PropertyEffects` implementation to\n         * add support for installing `hostAttributes` and `listeners`.\n         *\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: 'ready',\n        value: function ready() {\n          this._ensureAttributes();\n          _get(LegacyElement.prototype.__proto__ || Object.getPrototypeOf(LegacyElement.prototype), 'ready', this).call(this);\n        }\n\n        /**\n         * Ensures an element has required attributes. Called when the element\n         * is being readied via `ready`. Users should override to set the\n         * element's required attributes. The implementation should be sure\n         * to check and not override existing attributes added by\n         * the user of the element. Typically, setting attributes should be left\n         * to the element user and not done here; reasonable exceptions include\n         * setting aria roles and focusability.\n         * @protected\n         * @return {void}\n         */\n\n      }, {\n        key: '_ensureAttributes',\n        value: function _ensureAttributes() {}\n\n        /**\n         * Adds element event listeners. Called when the element\n         * is being readied via `ready`. Users should override to\n         * add any required element event listeners.\n         * In performance critical elements, the work done here should be kept\n         * to a minimum since it is done before the element is rendered. In\n         * these elements, consider adding listeners asynchronously so as not to\n         * block render.\n         * @protected\n         * @return {void}\n         */\n\n      }, {\n        key: '_applyListeners',\n        value: function _applyListeners() {}\n\n        /**\n         * Converts a typed JavaScript value to a string.\n         *\n         * Note this method is provided as backward-compatible legacy API\n         * only.  It is not directly called by any Polymer features. To customize\n         * how properties are serialized to attributes for attribute bindings and\n         * `reflectToAttribute: true` properties as well as this method, override\n         * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.\n         *\n         * @param {*} value Value to deserialize\n         * @return {string | undefined} Serialized value\n         */\n\n      }, {\n        key: 'serialize',\n        value: function serialize(value) {\n          return this._serializeValue(value);\n        }\n\n        /**\n         * Converts a string to a typed JavaScript value.\n         *\n         * Note this method is provided as backward-compatible legacy API\n         * only.  It is not directly called by any Polymer features.  To customize\n         * how attributes are deserialized to properties for in\n         * `attributeChangedCallback`, override `_deserializeValue` method\n         * provided by `Polymer.PropertyAccessors`.\n         *\n         * @param {string} value String to deserialize\n         * @param {*} type Type to deserialize the string to\n         * @return {*} Returns the deserialized value in the `type` given.\n         */\n\n      }, {\n        key: 'deserialize',\n        value: function deserialize(value, type) {\n          return this._deserializeValue(value, type);\n        }\n\n        /**\n         * Serializes a property to its associated attribute.\n         *\n         * Note this method is provided as backward-compatible legacy API\n         * only.  It is not directly called by any Polymer features.\n         *\n         * @param {string} property Property name to reflect.\n         * @param {string=} attribute Attribute name to reflect.\n         * @param {*=} value Property value to reflect.\n         * @return {void}\n         */\n\n      }, {\n        key: 'reflectPropertyToAttribute',\n        value: function reflectPropertyToAttribute(property, attribute, value) {\n          this._propertyToAttribute(property, attribute, value);\n        }\n\n        /**\n         * Sets a typed value to an HTML attribute on a node.\n         *\n         * Note this method is provided as backward-compatible legacy API\n         * only.  It is not directly called by any Polymer features.\n         *\n         * @param {*} value Value to serialize.\n         * @param {string} attribute Attribute name to serialize to.\n         * @param {Element} node Element to set attribute to.\n         * @return {void}\n         */\n\n      }, {\n        key: 'serializeValueToAttribute',\n        value: function serializeValueToAttribute(value, attribute, node) {\n          this._valueToNodeAttribute( /** @type {Element} */node || this, value, attribute);\n        }\n\n        /**\n         * Copies own properties (including accessor descriptors) from a source\n         * object to a target object.\n         *\n         * @param {Object} prototype Target object to copy properties to.\n         * @param {Object} api Source object to copy properties from.\n         * @return {Object} prototype object that was passed as first argument.\n         */\n\n      }, {\n        key: 'extend',\n        value: function extend(prototype, api) {\n          if (!(prototype && api)) {\n            return prototype || api;\n          }\n          var n$ = Object.getOwnPropertyNames(api);\n          for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {\n            var pd = Object.getOwnPropertyDescriptor(api, n);\n            if (pd) {\n              Object.defineProperty(prototype, n, pd);\n            }\n          }\n          return prototype;\n        }\n\n        /**\n         * Copies props from a source object to a target object.\n         *\n         * Note, this method uses a simple `for...in` strategy for enumerating\n         * properties.  To ensure only `ownProperties` are copied from source\n         * to target and that accessor implementations are copied, use `extend`.\n         *\n         * @param {!Object} target Target object to copy properties to.\n         * @param {!Object} source Source object to copy properties from.\n         * @return {!Object} Target object that was passed as first argument.\n         */\n\n      }, {\n        key: 'mixin',\n        value: function mixin(target, source) {\n          for (var i in source) {\n            target[i] = source[i];\n          }\n          return target;\n        }\n\n        /**\n         * Sets the prototype of an object.\n         *\n         * Note this method is provided as backward-compatible legacy API\n         * only.  It is not directly called by any Polymer features.\n         * @param {Object} object The object on which to set the prototype.\n         * @param {Object} prototype The prototype that will be set on the given\n         * `object`.\n         * @return {Object} Returns the given `object` with its prototype set\n         * to the given `prototype` object.\n         */\n\n      }, {\n        key: 'chainObject',\n        value: function chainObject(object, prototype) {\n          if (object && prototype && object !== prototype) {\n            object.__proto__ = prototype;\n          }\n          return object;\n        }\n\n        /* **** Begin Template **** */\n\n        /**\n         * Calls `importNode` on the `content` of the `template` specified and\n         * returns a document fragment containing the imported content.\n         *\n         * @param {HTMLTemplateElement} template HTML template element to instance.\n         * @return {!DocumentFragment} Document fragment containing the imported\n         *   template content.\n        */\n\n      }, {\n        key: 'instanceTemplate',\n        value: function instanceTemplate(template) {\n          var content = this.constructor._contentForTemplate(template);\n          var dom = /** @type {!DocumentFragment} */\n          document.importNode(content, true);\n          return dom;\n        }\n\n        /* **** Begin Events **** */\n\n        /**\n         * Dispatches a custom event with an optional detail value.\n         *\n         * @param {string} type Name of event type.\n         * @param {*=} detail Detail value containing event-specific\n         *   payload.\n         * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined), composed: (boolean|undefined) }=}\n         *  options Object specifying options.  These may include:\n         *  `bubbles` (boolean, defaults to `true`),\n         *  `cancelable` (boolean, defaults to false), and\n         *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n         * @return {!Event} The new event that was fired.\n         */\n\n      }, {\n        key: 'fire',\n        value: function fire(type, detail, options) {\n          options = options || {};\n          detail = detail === null || detail === undefined ? {} : detail;\n          var event = new Event(type, {\n            bubbles: options.bubbles === undefined ? true : options.bubbles,\n            cancelable: Boolean(options.cancelable),\n            composed: options.composed === undefined ? true : options.composed\n          });\n          event.detail = detail;\n          var node = options.node || this;\n          node.dispatchEvent(event);\n          return event;\n        }\n\n        /**\n         * Convenience method to add an event listener on a given element,\n         * late bound to a named method on this element.\n         *\n         * @param {Element} node Element to add event listener to.\n         * @param {string} eventName Name of event to listen for.\n         * @param {string} methodName Name of handler method on `this` to call.\n         * @return {void}\n         */\n\n      }, {\n        key: 'listen',\n        value: function listen(node, eventName, methodName) {\n          node = /** @type {!Element} */node || this;\n          var hbl = this.__boundListeners || (this.__boundListeners = new WeakMap());\n          var bl = hbl.get(node);\n          if (!bl) {\n            bl = {};\n            hbl.set(node, bl);\n          }\n          var key = eventName + methodName;\n          if (!bl[key]) {\n            bl[key] = this._addMethodEventListenerToNode(node, eventName, methodName, this);\n          }\n        }\n\n        /**\n         * Convenience method to remove an event listener from a given element,\n         * late bound to a named method on this element.\n         *\n         * @param {Element} node Element to remove event listener from.\n         * @param {string} eventName Name of event to stop listening to.\n         * @param {string} methodName Name of handler method on `this` to not call\n         anymore.\n         * @return {void}\n         */\n\n      }, {\n        key: 'unlisten',\n        value: function unlisten(node, eventName, methodName) {\n          node = /** @type {!Element} */node || this;\n          var bl = this.__boundListeners && this.__boundListeners.get(node);\n          var key = eventName + methodName;\n          var handler = bl && bl[key];\n          if (handler) {\n            this._removeEventListenerFromNode(node, eventName, handler);\n            bl[key] = null;\n          }\n        }\n\n        /**\n         * Override scrolling behavior to all direction, one direction, or none.\n         *\n         * Valid scroll directions:\n         *   - 'all': scroll in any direction\n         *   - 'x': scroll only in the 'x' direction\n         *   - 'y': scroll only in the 'y' direction\n         *   - 'none': disable scrolling for this node\n         *\n         * @param {string=} direction Direction to allow scrolling\n         * Defaults to `all`.\n         * @param {Element=} node Element to apply scroll direction setting.\n         * Defaults to `this`.\n         * @return {void}\n         */\n\n      }, {\n        key: 'setScrollDirection',\n        value: function setScrollDirection(direction, node) {\n          Polymer.Gestures.setTouchAction( /** @type {Element} */node || this, DIRECTION_MAP[direction] || 'auto');\n        }\n        /* **** End Events **** */\n\n        /**\n         * Convenience method to run `querySelector` on this local DOM scope.\n         *\n         * This function calls `Polymer.dom(this.root).querySelector(slctr)`.\n         *\n         * @param {string} slctr Selector to run on this local DOM scope\n         * @return {Element} Element found by the selector, or null if not found.\n         */\n\n      }, {\n        key: '$$',\n        value: function $$(slctr) {\n          return this.root.querySelector(slctr);\n        }\n\n        /**\n         * Return the element whose local dom within which this element\n         * is contained. This is a shorthand for\n         * `this.getRootNode().host`.\n         * @this {Element}\n         */\n\n      }, {\n        key: 'distributeContent',\n\n\n        /**\n         * Force this element to distribute its children to its local dom.\n         * This should not be necessary as of Polymer 2.0.2 and is provided only\n         * for backwards compatibility.\n         * @return {void}\n         */\n        value: function distributeContent() {\n          if (window.ShadyDOM && this.shadowRoot) {\n            ShadyDOM.flush();\n          }\n        }\n\n        /**\n         * Returns a list of nodes that are the effective childNodes. The effective\n         * childNodes list is the same as the element's childNodes except that\n         * any `<content>` elements are replaced with the list of nodes distributed\n         * to the `<content>`, the result of its `getDistributedNodes` method.\n         * @return {!Array<!Node>} List of effective child nodes.\n         * @suppress {invalidCasts} LegacyElementMixin must be applied to an HTMLElement\n         */\n\n      }, {\n        key: 'getEffectiveChildNodes',\n        value: function getEffectiveChildNodes() {\n          var thisEl = /** @type {Element} */this;\n          var domApi = /** @type {Polymer.DomApi} */Polymer.dom(thisEl);\n          return domApi.getEffectiveChildNodes();\n        }\n\n        /**\n         * Returns a list of nodes distributed within this element that match\n         * `selector`. These can be dom children or elements distributed to\n         * children that are insertion points.\n         * @param {string} selector Selector to run.\n         * @return {!Array<!Node>} List of distributed elements that match selector.\n         * @suppress {invalidCasts} LegacyElementMixin must be applied to an HTMLElement\n         */\n\n      }, {\n        key: 'queryDistributedElements',\n        value: function queryDistributedElements(selector) {\n          var thisEl = /** @type {Element} */this;\n          var domApi = /** @type {Polymer.DomApi} */Polymer.dom(thisEl);\n          return domApi.queryDistributedElements(selector);\n        }\n\n        /**\n         * Returns a list of elements that are the effective children. The effective\n         * children list is the same as the element's children except that\n         * any `<content>` elements are replaced with the list of elements\n         * distributed to the `<content>`.\n         *\n         * @return {!Array<!Node>} List of effective children.\n         */\n\n      }, {\n        key: 'getEffectiveChildren',\n        value: function getEffectiveChildren() {\n          var list = this.getEffectiveChildNodes();\n          return list.filter(function ( /** @type {!Node} */n) {\n            return n.nodeType === Node.ELEMENT_NODE;\n          });\n        }\n\n        /**\n         * Returns a string of text content that is the concatenation of the\n         * text content's of the element's effective childNodes (the elements\n         * returned by <a href=\"#getEffectiveChildNodes>getEffectiveChildNodes</a>.\n         *\n         * @return {string} List of effective children.\n         */\n\n      }, {\n        key: 'getEffectiveTextContent',\n        value: function getEffectiveTextContent() {\n          var cn = this.getEffectiveChildNodes();\n          var tc = [];\n          for (var i = 0, c; c = cn[i]; i++) {\n            if (c.nodeType !== Node.COMMENT_NODE) {\n              tc.push(c.textContent);\n            }\n          }\n          return tc.join('');\n        }\n\n        /**\n         * Returns the first effective childNode within this element that\n         * match `selector`. These can be dom child nodes or elements distributed\n         * to children that are insertion points.\n         * @param {string} selector Selector to run.\n         * @return {Node} First effective child node that matches selector.\n         */\n\n      }, {\n        key: 'queryEffectiveChildren',\n        value: function queryEffectiveChildren(selector) {\n          var e$ = this.queryDistributedElements(selector);\n          return e$ && e$[0];\n        }\n\n        /**\n         * Returns a list of effective childNodes within this element that\n         * match `selector`. These can be dom child nodes or elements distributed\n         * to children that are insertion points.\n         * @param {string} selector Selector to run.\n         * @return {!Array<!Node>} List of effective child nodes that match selector.\n         */\n\n      }, {\n        key: 'queryAllEffectiveChildren',\n        value: function queryAllEffectiveChildren(selector) {\n          return this.queryDistributedElements(selector);\n        }\n\n        /**\n         * Returns a list of nodes distributed to this element's `<slot>`.\n         *\n         * If this element contains more than one `<slot>` in its local DOM,\n         * an optional selector may be passed to choose the desired content.\n         *\n         * @param {string=} slctr CSS selector to choose the desired\n         *   `<slot>`.  Defaults to `content`.\n         * @return {!Array<!Node>} List of distributed nodes for the `<slot>`.\n         */\n\n      }, {\n        key: 'getContentChildNodes',\n        value: function getContentChildNodes(slctr) {\n          var content = this.root.querySelector(slctr || 'slot');\n          return content ? /** @type {Polymer.DomApi} */Polymer.dom(content).getDistributedNodes() : [];\n        }\n\n        /**\n         * Returns a list of element children distributed to this element's\n         * `<slot>`.\n         *\n         * If this element contains more than one `<slot>` in its\n         * local DOM, an optional selector may be passed to choose the desired\n         * content.  This method differs from `getContentChildNodes` in that only\n         * elements are returned.\n         *\n         * @param {string=} slctr CSS selector to choose the desired\n         *   `<content>`.  Defaults to `content`.\n         * @return {!Array<!HTMLElement>} List of distributed nodes for the\n         *   `<slot>`.\n         * @suppress {invalidCasts}\n         */\n\n      }, {\n        key: 'getContentChildren',\n        value: function getContentChildren(slctr) {\n          var children = /** @type {!Array<!HTMLElement>} */this.getContentChildNodes(slctr).filter(function (n) {\n            return n.nodeType === Node.ELEMENT_NODE;\n          });\n          return children;\n        }\n\n        /**\n         * Checks whether an element is in this element's light DOM tree.\n         *\n         * @param {?Node} node The element to be checked.\n         * @return {boolean} true if node is in this element's light DOM tree.\n         * @suppress {invalidCasts} LegacyElementMixin must be applied to an HTMLElement\n         */\n\n      }, {\n        key: 'isLightDescendant',\n        value: function isLightDescendant(node) {\n          var thisNode = /** @type {Node} */this;\n          return thisNode !== node && thisNode.contains(node) && thisNode.getRootNode() === node.getRootNode();\n        }\n\n        /**\n         * Checks whether an element is in this element's local DOM tree.\n         *\n         * @param {!Element} node The element to be checked.\n         * @return {boolean} true if node is in this element's local DOM tree.\n         */\n\n      }, {\n        key: 'isLocalDescendant',\n        value: function isLocalDescendant(node) {\n          return this.root === node.getRootNode();\n        }\n\n        /**\n         * No-op for backwards compatibility. This should now be handled by\n         * ShadyCss library.\n         * @param  {*} container Unused\n         * @param  {*} shouldObserve Unused\n         * @return {void}\n         */\n\n      }, {\n        key: 'scopeSubtree',\n        value: function scopeSubtree(container, shouldObserve) {} // eslint-disable-line no-unused-vars\n\n\n        /**\n         * Returns the computed style value for the given property.\n         * @param {string} property The css property name.\n         * @return {string} Returns the computed css property value for the given\n         * `property`.\n         * @suppress {invalidCasts} LegacyElementMixin must be applied to an HTMLElement\n         */\n\n      }, {\n        key: 'getComputedStyleValue',\n        value: function getComputedStyleValue(property) {\n          return styleInterface.getComputedStyleValue( /** @type {!Element} */this, property);\n        }\n\n        // debounce\n\n        /**\n         * Call `debounce` to collapse multiple requests for a named task into\n         * one invocation which is made after the wait time has elapsed with\n         * no new request.  If no wait time is given, the callback will be called\n         * at microtask timing (guaranteed before paint).\n         *\n         *     debouncedClickAction(e) {\n         *       // will not call `processClick` more than once per 100ms\n         *       this.debounce('click', function() {\n         *        this.processClick();\n         *       } 100);\n         *     }\n         *\n         * @param {string} jobName String to identify the debounce job.\n         * @param {function():void} callback Function that is called (with `this`\n         *   context) when the wait time elapses.\n         * @param {number} wait Optional wait time in milliseconds (ms) after the\n         *   last signal that must elapse before invoking `callback`\n         * @return {!Object} Returns a debouncer object on which exists the\n         * following methods: `isActive()` returns true if the debouncer is\n         * active; `cancel()` cancels the debouncer if it is active;\n         * `flush()` immediately invokes the debounced callback if the debouncer\n         * is active.\n         */\n\n      }, {\n        key: 'debounce',\n        value: function debounce(jobName, callback, wait) {\n          this._debouncers = this._debouncers || {};\n          return this._debouncers[jobName] = Polymer.Debouncer.debounce(this._debouncers[jobName], wait > 0 ? Polymer.Async.timeOut.after(wait) : Polymer.Async.microTask, callback.bind(this));\n        }\n\n        /**\n         * Returns whether a named debouncer is active.\n         *\n         * @param {string} jobName The name of the debouncer started with `debounce`\n         * @return {boolean} Whether the debouncer is active (has not yet fired).\n         */\n\n      }, {\n        key: 'isDebouncerActive',\n        value: function isDebouncerActive(jobName) {\n          this._debouncers = this._debouncers || {};\n          var debouncer = this._debouncers[jobName];\n          return !!(debouncer && debouncer.isActive());\n        }\n\n        /**\n         * Immediately calls the debouncer `callback` and inactivates it.\n         *\n         * @param {string} jobName The name of the debouncer started with `debounce`\n         * @return {void}\n         */\n\n      }, {\n        key: 'flushDebouncer',\n        value: function flushDebouncer(jobName) {\n          this._debouncers = this._debouncers || {};\n          var debouncer = this._debouncers[jobName];\n          if (debouncer) {\n            debouncer.flush();\n          }\n        }\n\n        /**\n         * Cancels an active debouncer.  The `callback` will not be called.\n         *\n         * @param {string} jobName The name of the debouncer started with `debounce`\n         * @return {void}\n         */\n\n      }, {\n        key: 'cancelDebouncer',\n        value: function cancelDebouncer(jobName) {\n          this._debouncers = this._debouncers || {};\n          var debouncer = this._debouncers[jobName];\n          if (debouncer) {\n            debouncer.cancel();\n          }\n        }\n\n        /**\n         * Runs a callback function asynchronously.\n         *\n         * By default (if no waitTime is specified), async callbacks are run at\n         * microtask timing, which will occur before paint.\n         *\n         * @param {!Function} callback The callback function to run, bound to `this`.\n         * @param {number=} waitTime Time to wait before calling the\n         *   `callback`.  If unspecified or 0, the callback will be run at microtask\n         *   timing (before paint).\n         * @return {number} Handle that may be used to cancel the async job.\n         */\n\n      }, {\n        key: 'async',\n        value: function async(callback, waitTime) {\n          return waitTime > 0 ? Polymer.Async.timeOut.run(callback.bind(this), waitTime) : ~Polymer.Async.microTask.run(callback.bind(this));\n        }\n\n        /**\n         * Cancels an async operation started with `async`.\n         *\n         * @param {number} handle Handle returned from original `async` call to\n         *   cancel.\n         * @return {void}\n         */\n\n      }, {\n        key: 'cancelAsync',\n        value: function cancelAsync(handle) {\n          handle < 0 ? Polymer.Async.microTask.cancel(~handle) : Polymer.Async.timeOut.cancel(handle);\n        }\n\n        // other\n\n        /**\n         * Convenience method for creating an element and configuring it.\n         *\n         * @param {string} tag HTML element tag to create.\n         * @param {Object=} props Object of properties to configure on the\n         *    instance.\n         * @return {!Element} Newly created and configured element.\n         */\n\n      }, {\n        key: 'create',\n        value: function create(tag, props) {\n          var elt = document.createElement(tag);\n          if (props) {\n            if (elt.setProperties) {\n              elt.setProperties(props);\n            } else {\n              for (var n in props) {\n                elt[n] = props[n];\n              }\n            }\n          }\n          return elt;\n        }\n\n        /**\n         * Convenience method for importing an HTML document imperatively.\n         *\n         * This method creates a new `<link rel=\"import\">` element with\n         * the provided URL and appends it to the document to start loading.\n         * In the `onload` callback, the `import` property of the `link`\n         * element will contain the imported document contents.\n         *\n         * @param {string} href URL to document to load.\n         * @param {?function(!Event):void=} onload Callback to notify when an import successfully\n         *   loaded.\n         * @param {?function(!ErrorEvent):void=} onerror Callback to notify when an import\n         *   unsuccessfully loaded.\n         * @param {boolean=} optAsync True if the import should be loaded `async`.\n         *   Defaults to `false`.\n         * @return {!HTMLLinkElement} The link element for the URL to be loaded.\n         */\n\n      }, {\n        key: 'importHref',\n        value: function importHref(href, onload, onerror, optAsync) {\n          // eslint-disable-line no-unused-vars\n          var loadFn = onload ? onload.bind(this) : null;\n          var errorFn = onerror ? onerror.bind(this) : null;\n          return Polymer.importHref(href, loadFn, errorFn, optAsync);\n        }\n\n        /**\n         * Polyfill for Element.prototype.matches, which is sometimes still\n         * prefixed.\n         *\n         * @param {string} selector Selector to test.\n         * @param {!Element=} node Element to test the selector against.\n         * @return {boolean} Whether the element matches the selector.\n         */\n\n      }, {\n        key: 'elementMatches',\n        value: function elementMatches(selector, node) {\n          return Polymer.dom.matchesSelector( /** @type {!Element} */node || this, selector);\n        }\n\n        /**\n         * Toggles an HTML attribute on or off.\n         *\n         * @param {string} name HTML attribute name\n         * @param {boolean=} bool Boolean to force the attribute on or off.\n         *    When unspecified, the state of the attribute will be reversed.\n         * @param {Element=} node Node to target.  Defaults to `this`.\n         * @return {void}\n         */\n\n      }, {\n        key: 'toggleAttribute',\n        value: function toggleAttribute(name, bool, node) {\n          node = /** @type {Element} */node || this;\n          if (arguments.length == 1) {\n            bool = !node.hasAttribute(name);\n          }\n          if (bool) {\n            node.setAttribute(name, '');\n          } else {\n            node.removeAttribute(name);\n          }\n        }\n\n        /**\n         * Toggles a CSS class on or off.\n         *\n         * @param {string} name CSS class name\n         * @param {boolean=} bool Boolean to force the class on or off.\n         *    When unspecified, the state of the class will be reversed.\n         * @param {Element=} node Node to target.  Defaults to `this`.\n         * @return {void}\n         */\n\n      }, {\n        key: 'toggleClass',\n        value: function toggleClass(name, bool, node) {\n          node = /** @type {Element} */node || this;\n          if (arguments.length == 1) {\n            bool = !node.classList.contains(name);\n          }\n          if (bool) {\n            node.classList.add(name);\n          } else {\n            node.classList.remove(name);\n          }\n        }\n\n        /**\n         * Cross-platform helper for setting an element's CSS `transform` property.\n         *\n         * @param {string} transformText Transform setting.\n         * @param {Element=} node Element to apply the transform to.\n         * Defaults to `this`\n         * @return {void}\n         */\n\n      }, {\n        key: 'transform',\n        value: function transform(transformText, node) {\n          node = /** @type {Element} */node || this;\n          node.style.webkitTransform = transformText;\n          node.style.transform = transformText;\n        }\n\n        /**\n         * Cross-platform helper for setting an element's CSS `translate3d`\n         * property.\n         *\n         * @param {number} x X offset.\n         * @param {number} y Y offset.\n         * @param {number} z Z offset.\n         * @param {Element=} node Element to apply the transform to.\n         * Defaults to `this`.\n         * @return {void}\n         */\n\n      }, {\n        key: 'translate3d',\n        value: function translate3d(x, y, z, node) {\n          node = /** @type {Element} */node || this;\n          this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);\n        }\n\n        /**\n         * Removes an item from an array, if it exists.\n         *\n         * If the array is specified by path, a change notification is\n         * generated, so that observers, data bindings and computed\n         * properties watching that path can update.\n         *\n         * If the array is passed directly, **no change\n         * notification is generated**.\n         *\n         * @param {string | !Array<number|string>} arrayOrPath Path to array from which to remove the item\n         *   (or the array itself).\n         * @param {*} item Item to remove.\n         * @return {Array} Array containing item removed.\n         */\n\n      }, {\n        key: 'arrayDelete',\n        value: function arrayDelete(arrayOrPath, item) {\n          var index = void 0;\n          if (Array.isArray(arrayOrPath)) {\n            index = arrayOrPath.indexOf(item);\n            if (index >= 0) {\n              return arrayOrPath.splice(index, 1);\n            }\n          } else {\n            var arr = Polymer.Path.get(this, arrayOrPath);\n            index = arr.indexOf(item);\n            if (index >= 0) {\n              return this.splice(arrayOrPath, index, 1);\n            }\n          }\n          return null;\n        }\n\n        // logging\n\n        /**\n         * Facades `console.log`/`warn`/`error` as override point.\n         *\n         * @param {string} level One of 'log', 'warn', 'error'\n         * @param {Array} args Array of strings or objects to log\n         * @return {void}\n         */\n\n      }, {\n        key: '_logger',\n        value: function _logger(level, args) {\n          var _console;\n\n          // accept ['foo', 'bar'] and [['foo', 'bar']]\n          if (Array.isArray(args) && args.length === 1 && Array.isArray(args[0])) {\n            args = args[0];\n          }\n          switch (level) {\n            case 'log':\n            case 'warn':\n            case 'error':\n              (_console = console)[level].apply(_console, _toConsumableArray(args));\n          }\n        }\n\n        /**\n         * Facades `console.log` as an override point.\n         *\n         * @param {...*} args Array of strings or objects to log\n         * @return {void}\n         */\n\n      }, {\n        key: '_log',\n        value: function _log() {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          this._logger('log', args);\n        }\n\n        /**\n         * Facades `console.warn` as an override point.\n         *\n         * @param {...*} args Array of strings or objects to log\n         * @return {void}\n         */\n\n      }, {\n        key: '_warn',\n        value: function _warn() {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          this._logger('warn', args);\n        }\n\n        /**\n         * Facades `console.error` as an override point.\n         *\n         * @param {...*} args Array of strings or objects to log\n         * @return {void}\n         */\n\n      }, {\n        key: '_error',\n        value: function _error() {\n          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          this._logger('error', args);\n        }\n\n        /**\n         * Formats a message using the element type an a method name.\n         *\n         * @param {string} methodName Method name to associate with message\n         * @param {...*} args Array of strings or objects to log\n         * @return {Array} Array with formatting information for `console`\n         *   logging.\n         */\n\n      }, {\n        key: '_logf',\n        value: function _logf(methodName) {\n          for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n            args[_key4 - 1] = arguments[_key4];\n          }\n\n          return ['[%s::%s]', this.is, methodName].concat(args);\n        }\n      }, {\n        key: 'domHost',\n        get: function get() {\n          var root = this.getRootNode();\n          return root instanceof DocumentFragment ? /** @type {ShadowRoot} */root.host : root;\n        }\n      }]);\n\n      return LegacyElement;\n    }(legacyElementBase);\n\n    LegacyElement.prototype.is = '';\n\n    return LegacyElement;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/legacy-element-mixin.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/mutable-data-behavior.html":
/*!************************************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/mutable-data-behavior.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../mixins/mutable-data.html */ \"./bower_components/polymer/lib/mixins/mutable-data.html\");\n\n(function () {\n  'use strict';\n\n  var mutablePropertyChange = void 0;\n  /** @suppress {missingProperties} */\n  (function () {\n    mutablePropertyChange = Polymer.MutableData._mutablePropertyChange;\n  })();\n\n  /**\n   * Legacy element behavior to skip strict dirty-checking for objects and arrays,\n   * (always consider them to be \"dirty\") for use on legacy API Polymer elements.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will cause Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   * Specifically, any elements in the binding tree between the source of a\n   * mutation and the consumption of it must apply this behavior or enable the\n   * `Polymer.OptionalMutableDataBehavior`.\n   *\n   * In order to make the dirty check strategy configurable, see\n   * `Polymer.OptionalMutableDataBehavior`.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse as opposed to using strict dirty checking with immutable\n   * patterns or Polymer's path notification API.\n   *\n   * @polymerBehavior\n   * @memberof Polymer\n   * @summary Behavior to skip strict dirty-checking for objects and\n   *   arrays\n   */\n  Polymer.MutableDataBehavior = {\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange: function _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n  };\n\n  /**\n   * Legacy element behavior to add the optional ability to skip strict\n   * dirty-checking for objects and arrays (always consider them to be\n   * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will allow Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   * Specifically, any elements in the binding tree between the source of a\n   * mutation and the consumption of it must enable this behavior or apply the\n   * `Polymer.OptionalMutableDataBehavior`.\n   *\n   * While this behavior adds the ability to forgo Object/Array dirty checking,\n   * the `mutableData` flag defaults to false and must be set on the instance.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse by relying on `mutableData: true` as opposed to using\n   * strict dirty checking with immutable patterns or Polymer's path notification\n   * API.\n   *\n   * @polymerBehavior\n   * @memberof Polymer\n   * @summary Behavior to optionally skip strict dirty-checking for objects and\n   *   arrays\n   */\n  Polymer.OptionalMutableDataBehavior = {\n\n    properties: {\n      /**\n       * Instance-level flag for configuring the dirty-checking strategy\n       * for this element.  When true, Objects and Arrays will skip dirty\n       * checking, otherwise strict equality checking will be used.\n       */\n      mutableData: Boolean\n    },\n\n    /**\n     * Overrides `Polymer.PropertyEffects` to skip strict equality checking\n     * for Objects and Arrays.\n     *\n     * Pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @this {this}\n     * @protected\n     */\n    _shouldPropertyChange: function _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/mutable-data-behavior.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/polymer-fn.html":
/*!*************************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/polymer-fn.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./class.html */ \"./bower_components/polymer/lib/legacy/class.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Legacy class factory and registration helper for defining Polymer\n   * elements.\n   *\n   * This method is equivalent to\n   * `customElements.define(info.is, Polymer.Class(info));`\n   *\n   * See `Polymer.Class` for details on valid legacy metadata format for `info`.\n   *\n   * @global\n   * @override\n   * @function Polymer\n   * @param {!PolymerInit} info Object containing Polymer metadata and functions\n   *   to become class methods.\n   * @return {function(new: HTMLElement)} Generated class\n   * @suppress {duplicate, invalidCasts, checkTypes}\n   */\n\n  window.Polymer._polymerFn = function (info) {\n    // if input is a `class` (aka a function with a prototype), use the prototype\n    // remember that the `constructor` will never be called\n    var klass = void 0;\n    if (typeof info === 'function') {\n      klass = info;\n    } else {\n      klass = Polymer.Class(info);\n    }\n    customElements.define(klass.is, /** @type {!HTMLElement} */klass);\n    return klass;\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/polymer-fn.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/polymer.dom.html":
/*!**************************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/polymer.dom.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/settings.html */ \"./bower_components/polymer/lib/utils/settings.html\");\n\n__webpack_require__(/*! ../utils/flattened-nodes-observer.html */ \"./bower_components/polymer/lib/utils/flattened-nodes-observer.html\");\n\n__webpack_require__(/*! ../utils/flush.html */ \"./bower_components/polymer/lib/utils/flush.html\");\n\n(function () {\n  'use strict';\n\n  var p = Element.prototype;\n  /**\n   * @const {function(this:Node, string): boolean}\n   */\n  var normalizedMatchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n  /**\n   * Cross-platform `element.matches` shim.\n   *\n   * @function matchesSelector\n   * @memberof Polymer.dom\n   * @param {!Node} node Node to check selector against\n   * @param {string} selector Selector to match\n   * @return {boolean} True if node matched selector\n   */\n  var matchesSelector = function matchesSelector(node, selector) {\n    return normalizedMatchesSelector.call(node, selector);\n  };\n\n  /**\n   * Node API wrapper class returned from `Polymer.dom.(target)` when\n   * `target` is a `Node`.\n   *\n   * @memberof Polymer\n   */\n\n  var DomApi = function () {\n\n    /**\n     * @param {Node} node Node for which to create a Polymer.dom helper object.\n     */\n    function DomApi(node) {\n      _classCallCheck(this, DomApi);\n\n      this.node = node;\n    }\n\n    /**\n     * Returns an instance of `Polymer.FlattenedNodesObserver` that\n     * listens for node changes on this element.\n     *\n     * @param {function(!Element, { target: !Element, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children\n     *   of this element changes\n     * @return {!Polymer.FlattenedNodesObserver} Observer instance\n     */\n\n\n    _createClass(DomApi, [{\n      key: 'observeNodes',\n      value: function observeNodes(callback) {\n        return new Polymer.FlattenedNodesObserver(this.node, callback);\n      }\n\n      /**\n       * Disconnects an observer previously created via `observeNodes`\n       *\n       * @param {!Polymer.FlattenedNodesObserver} observerHandle Observer instance\n       *   to disconnect.\n       * @return {void}\n       */\n\n    }, {\n      key: 'unobserveNodes',\n      value: function unobserveNodes(observerHandle) {\n        observerHandle.disconnect();\n      }\n\n      /**\n       * Provided as a backwards-compatible API only.  This method does nothing.\n       * @return {void}\n       */\n\n    }, {\n      key: 'notifyObserver',\n      value: function notifyObserver() {}\n\n      /**\n       * Returns true if the provided node is contained with this element's\n       * light-DOM children or shadow root, including any nested shadow roots\n       * of children therein.\n       *\n       * @param {Node} node Node to test\n       * @return {boolean} Returns true if the given `node` is contained within\n       *   this element's light or shadow DOM.\n       */\n\n    }, {\n      key: 'deepContains',\n      value: function deepContains(node) {\n        if (this.node.contains(node)) {\n          return true;\n        }\n        var n = node;\n        var doc = node.ownerDocument;\n        // walk from node to `this` or `document`\n        while (n && n !== doc && n !== this.node) {\n          // use logical parentnode, or native ShadowRoot host\n          n = n.parentNode || n.host;\n        }\n        return n === this.node;\n      }\n\n      /**\n       * Returns the root node of this node.  Equivalent to `getRoodNode()`.\n       *\n       * @return {Node} Top most element in the dom tree in which the node\n       * exists. If the node is connected to a document this is either a\n       * shadowRoot or the document; otherwise, it may be the node\n       * itself or a node or document fragment containing it.\n       */\n\n    }, {\n      key: 'getOwnerRoot',\n      value: function getOwnerRoot() {\n        return this.node.getRootNode();\n      }\n\n      /**\n       * For slot elements, returns the nodes assigned to the slot; otherwise\n       * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.\n       *\n       * @return {!Array<!Node>} Array of assigned nodes\n       */\n\n    }, {\n      key: 'getDistributedNodes',\n      value: function getDistributedNodes() {\n        return this.node.localName === 'slot' ? this.node.assignedNodes({ flatten: true }) : [];\n      }\n\n      /**\n       * Returns an array of all slots this element was distributed to.\n       *\n       * @return {!Array<!HTMLSlotElement>} Description\n       */\n\n    }, {\n      key: 'getDestinationInsertionPoints',\n      value: function getDestinationInsertionPoints() {\n        var ip$ = [];\n        var n = this.node.assignedSlot;\n        while (n) {\n          ip$.push(n);\n          n = n.assignedSlot;\n        }\n        return ip$;\n      }\n\n      /**\n       * Calls `importNode` on the `ownerDocument` for this node.\n       *\n       * @param {!Node} node Node to import\n       * @param {boolean} deep True if the node should be cloned deeply during\n       *   import\n       * @return {Node} Clone of given node imported to this owner document\n       */\n\n    }, {\n      key: 'importNode',\n      value: function importNode(node, deep) {\n        var doc = this.node instanceof Document ? this.node : this.node.ownerDocument;\n        return doc.importNode(node, deep);\n      }\n\n      /**\n       * @return {!Array<!Node>} Returns a flattened list of all child nodes and\n       * nodes assigned to child slots.\n       */\n\n    }, {\n      key: 'getEffectiveChildNodes',\n      value: function getEffectiveChildNodes() {\n        return Polymer.FlattenedNodesObserver.getFlattenedNodes(this.node);\n      }\n\n      /**\n       * Returns a filtered list of flattened child elements for this element based\n       * on the given selector.\n       *\n       * @param {string} selector Selector to filter nodes against\n       * @return {!Array<!HTMLElement>} List of flattened child elements\n       */\n\n    }, {\n      key: 'queryDistributedElements',\n      value: function queryDistributedElements(selector) {\n        var c$ = this.getEffectiveChildNodes();\n        var list = [];\n        for (var i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {\n          if (c.nodeType === Node.ELEMENT_NODE && matchesSelector(c, selector)) {\n            list.push(c);\n          }\n        }\n        return list;\n      }\n\n      /**\n       * For shadow roots, returns the currently focused element within this\n       * shadow root.\n       *\n       * @return {Node|undefined} Currently focused element\n       */\n\n    }, {\n      key: 'activeElement',\n      get: function get() {\n        var node = this.node;\n        return node._activeElement !== undefined ? node._activeElement : node.activeElement;\n      }\n    }]);\n\n    return DomApi;\n  }();\n\n  function forwardMethods(proto, methods) {\n    var _loop = function _loop(i) {\n      var method = methods[i];\n      /* eslint-disable valid-jsdoc */\n      proto[method] = /** @this {DomApi} */function () {\n        return this.node[method].apply(this.node, arguments);\n      };\n      /* eslint-enable */\n    };\n\n    for (var i = 0; i < methods.length; i++) {\n      _loop(i);\n    }\n  }\n\n  function forwardReadOnlyProperties(proto, properties) {\n    var _loop2 = function _loop2(i) {\n      var name = properties[i];\n      Object.defineProperty(proto, name, {\n        get: function get() {\n          var domApi = /** @type {DomApi} */this;\n          return domApi.node[name];\n        },\n        configurable: true\n      });\n    };\n\n    for (var i = 0; i < properties.length; i++) {\n      _loop2(i);\n    }\n  }\n\n  function forwardProperties(proto, properties) {\n    var _loop3 = function _loop3(i) {\n      var name = properties[i];\n      Object.defineProperty(proto, name, {\n        get: function get() {\n          var domApi = /** @type {DomApi} */this;\n          return domApi.node[name];\n        },\n        set: function set(value) {\n          /** @type {DomApi} */this.node[name] = value;\n        },\n        configurable: true\n      });\n    };\n\n    for (var i = 0; i < properties.length; i++) {\n      _loop3(i);\n    }\n  }\n\n  forwardMethods(DomApi.prototype, ['cloneNode', 'appendChild', 'insertBefore', 'removeChild', 'replaceChild', 'setAttribute', 'removeAttribute', 'querySelector', 'querySelectorAll']);\n\n  forwardReadOnlyProperties(DomApi.prototype, ['parentNode', 'firstChild', 'lastChild', 'nextSibling', 'previousSibling', 'firstElementChild', 'lastElementChild', 'nextElementSibling', 'previousElementSibling', 'childNodes', 'children', 'classList']);\n\n  forwardProperties(DomApi.prototype, ['textContent', 'innerHTML']);\n\n  /**\n   * Event API wrapper class returned from `Polymer.dom.(target)` when\n   * `target` is an `Event`.\n   */\n\n  var EventApi = function () {\n    function EventApi(event) {\n      _classCallCheck(this, EventApi);\n\n      this.event = event;\n    }\n\n    /**\n     * Returns the first node on the `composedPath` of this event.\n     *\n     * @return {!EventTarget} The node this event was dispatched to\n     */\n\n\n    _createClass(EventApi, [{\n      key: 'rootTarget',\n      get: function get() {\n        return this.event.composedPath()[0];\n      }\n\n      /**\n       * Returns the local (re-targeted) target for this event.\n       *\n       * @return {!EventTarget} The local (re-targeted) target for this event.\n       */\n\n    }, {\n      key: 'localTarget',\n      get: function get() {\n        return this.event.target;\n      }\n\n      /**\n       * Returns the `composedPath` for this event.\n       * @return {!Array<EventTarget>} The nodes this event propagated through\n       */\n\n    }, {\n      key: 'path',\n      get: function get() {\n        return this.event.composedPath();\n      }\n    }]);\n\n    return EventApi;\n  }();\n\n  Polymer.DomApi = DomApi;\n\n  /**\n   * @function\n   * @param {boolean=} deep\n   * @return {!Node}\n   */\n  Polymer.DomApi.prototype.cloneNode;\n  /**\n   * @function\n   * @param {!Node} node\n   * @return {!Node}\n   */\n  Polymer.DomApi.prototype.appendChild;\n  /**\n   * @function\n   * @param {!Node} newChild\n   * @param {Node} refChild\n   * @return {!Node}\n   */\n  Polymer.DomApi.prototype.insertBefore;\n  /**\n   * @function\n   * @param {!Node} node\n   * @return {!Node}\n   */\n  Polymer.DomApi.prototype.removeChild;\n  /**\n   * @function\n   * @param {!Node} oldChild\n   * @param {!Node} newChild\n   * @return {!Node}\n   */\n  Polymer.DomApi.prototype.replaceChild;\n  /**\n   * @function\n   * @param {string} name\n   * @param {string} value\n   * @return {void}\n   */\n  Polymer.DomApi.prototype.setAttribute;\n  /**\n   * @function\n   * @param {string} name\n   * @return {void}\n   */\n  Polymer.DomApi.prototype.removeAttribute;\n  /**\n   * @function\n   * @param {string} selector\n   * @return {?Element}\n   */\n  Polymer.DomApi.prototype.querySelector;\n  /**\n   * @function\n   * @param {string} selector\n   * @return {!NodeList<!Element>}\n   */\n  Polymer.DomApi.prototype.querySelectorAll;\n\n  /**\n   * Legacy DOM and Event manipulation API wrapper factory used to abstract\n   * differences between native Shadow DOM and \"Shady DOM\" when polyfilling on\n   * older browsers.\n   *\n   * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and\n   * in the majority of cases simply facades directly to the standard native\n   * API.\n   *\n   * @namespace\n   * @summary Legacy DOM and Event manipulation API wrapper factory used to\n   * abstract differences between native Shadow DOM and \"Shady DOM.\"\n   * @memberof Polymer\n   * @param {(Node|Event)=} obj Node or event to operate on\n   * @return {!DomApi|!EventApi} Wrapper providing either node API or event API\n   */\n  Polymer.dom = function (obj) {\n    obj = obj || document;\n    if (!obj.__domApi) {\n      var helper = void 0;\n      if (obj instanceof Event) {\n        helper = new EventApi(obj);\n      } else {\n        helper = new DomApi(obj);\n      }\n      obj.__domApi = helper;\n    }\n    return obj.__domApi;\n  };\n\n  Polymer.dom.matchesSelector = matchesSelector;\n\n  /**\n   * Forces several classes of asynchronously queued tasks to flush:\n   * - Debouncers added via `Polymer.enqueueDebouncer`\n   * - ShadyDOM distribution\n   *\n   * This method facades to `Polymer.flush`.\n   *\n   * @memberof Polymer.dom\n   */\n  Polymer.dom.flush = Polymer.flush;\n\n  /**\n   * Adds a `Polymer.Debouncer` to a list of globally flushable tasks.\n   *\n   * This method facades to `Polymer.enqueueDebouncer`.\n   *\n   * @memberof Polymer.dom\n   * @param {Polymer.Debouncer} debouncer Debouncer to enqueue\n   */\n  Polymer.dom.addDebouncer = Polymer.enqueueDebouncer;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/polymer.dom.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/legacy/templatizer-behavior.html":
/*!***********************************************************************!*\
  !*** ./bower_components/polymer/lib/legacy/templatizer-behavior.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../utils/templatize.html */ \"./bower_components/polymer/lib/utils/templatize.html\");\n\n(function () {\n  'use strict';\n\n  var TemplateInstanceBase = Polymer.TemplateInstanceBase; // eslint-disable-line\n\n  /**\n   * @typedef {{\n   *   _templatizerTemplate: HTMLTemplateElement,\n   *   _parentModel: boolean,\n   *   _instanceProps: Object,\n   *   _forwardHostPropV2: Function,\n   *   _notifyInstancePropV2: Function,\n   *   ctor: TemplateInstanceBase\n   * }}\n   */\n  var TemplatizerUser = void 0; // eslint-disable-line\n\n  /**\n   * The `Polymer.Templatizer` behavior adds methods to generate instances of\n   * templates that are each managed by an anonymous `Polymer.PropertyEffects`\n   * instance where data-bindings in the stamped template content are bound to\n   * accessors on itself.\n   *\n   * This behavior is provided in Polymer 2.x as a hybrid-element convenience\n   * only.  For non-hybrid usage, the `Polymer.Templatize` library\n   * should be used instead.\n   *\n   * Example:\n   *\n   *     // Get a template from somewhere, e.g. light DOM\n   *     let template = this.querySelector('template');\n   *     // Prepare the template\n   *     this.templatize(template);\n   *     // Instance the template with an initial data model\n   *     let instance = this.stamp({myProp: 'initial'});\n   *     // Insert the instance's DOM somewhere, e.g. light DOM\n   *     Polymer.dom(this).appendChild(instance.root);\n   *     // Changing a property on the instance will propagate to bindings\n   *     // in the template\n   *     instance.myProp = 'new value';\n   *\n   * Users of `Templatizer` may need to implement the following abstract\n   * API's to determine how properties and paths from the host should be\n   * forwarded into to instances:\n   *\n   *     _forwardHostPropV2: function(prop, value)\n   *\n   * Likewise, users may implement these additional abstract API's to determine\n   * how instance-specific properties that change on the instance should be\n   * forwarded out to the host, if necessary.\n   *\n   *     _notifyInstancePropV2: function(inst, prop, value)\n   *\n   * In order to determine which properties are instance-specific and require\n   * custom notification via `_notifyInstanceProp`, define an `_instanceProps`\n   * object containing keys for each instance prop, for example:\n   *\n   *     _instanceProps: {\n   *       item: true,\n   *       index: true\n   *     }\n   *\n   * Any properties used in the template that are not defined in _instanceProp\n   * will be forwarded out to the Templatize `owner` automatically.\n   *\n   * Users may also implement the following abstract function to show or\n   * hide any DOM generated using `stamp`:\n   *\n   *     _showHideChildren: function(shouldHide)\n   *\n   * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior\n   * as the implementations will need to differ from the callbacks required\n   * by the 1.x Templatizer API due to changes in the `TemplateInstance` API\n   * between versions 1.x and 2.x.\n   *\n   * @polymerBehavior\n   */\n  Polymer.Templatizer = {\n\n    /**\n     * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)\n     * for the provided template.  This method should be called once per\n     * template to prepare an element for stamping the template, followed\n     * by `stamp` to create new instances of the template.\n     *\n     * @param {!HTMLTemplateElement} template Template to prepare\n     * @param {boolean=} mutableData When `true`, the generated class will skip\n     *   strict dirty-checking for objects and arrays (always consider them to\n     *   be \"dirty\"). Defaults to false.\n     * @return {void}\n     * @this {TemplatizerUser}\n     */\n    templatize: function templatize(template, mutableData) {\n      this._templatizerTemplate = template;\n      this.ctor = Polymer.Templatize.templatize(template, this, {\n        mutableData: Boolean(mutableData),\n        parentModel: this._parentModel,\n        instanceProps: this._instanceProps,\n        forwardHostProp: this._forwardHostPropV2,\n        notifyInstanceProp: this._notifyInstancePropV2\n      });\n    },\n\n\n    /**\n     * Creates an instance of the template prepared by `templatize`.  The object\n     * returned is an instance of the anonymous class generated by `templatize`\n     * whose `root` property is a document fragment containing newly cloned\n     * template content, and which has property accessors corresponding to\n     * properties referenced in template bindings.\n     *\n     * @param {Object=} model Object containing initial property values to\n     *   populate into the template bindings.\n     * @return {TemplateInstanceBase} Returns the created instance of\n     * the template prepared by `templatize`.\n     * @this {TemplatizerUser}\n     */\n    stamp: function stamp(model) {\n      return new this.ctor(model);\n    },\n\n\n    /**\n     * Returns the template \"model\" (`TemplateInstance`) associated with\n     * a given element, which serves as the binding scope for the template\n     * instance the element is contained in.  A template model should be used\n     * to manipulate data associated with this template instance.\n     *\n     * @param {HTMLElement} el Element for which to return a template model.\n     * @return {TemplateInstanceBase} Model representing the binding scope for\n     *   the element.\n     * @this {TemplatizerUser}\n     */\n    modelForElement: function modelForElement(el) {\n      return Polymer.Templatize.modelForElement(this._templatizerTemplate, el);\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/legacy/templatizer-behavior.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/dir-mixin.html":
/*!************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/dir-mixin.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ./property-accessors.html */ \"./bower_components/polymer/lib/mixins/property-accessors.html\");\n\n(function () {\n  'use strict';\n\n  var HOST_DIR = /:host\\(:dir\\((ltr|rtl)\\)\\)/g;\n  var HOST_DIR_REPLACMENT = ':host([dir=\"$1\"])';\n\n  var EL_DIR = /([\\s\\w-#\\.\\[\\]\\*]*):dir\\((ltr|rtl)\\)/g;\n  var EL_DIR_REPLACMENT = ':host([dir=\"$2\"]) $1';\n\n  /**\n   * @type {!Array<!Polymer_DirMixin>}\n   */\n  var DIR_INSTANCES = [];\n\n  /** @type {MutationObserver} */\n  var observer = null;\n\n  var DOCUMENT_DIR = '';\n\n  function getRTL() {\n    DOCUMENT_DIR = document.documentElement.getAttribute('dir');\n  }\n\n  /**\n   * @param {!Polymer_DirMixin} instance Instance to set RTL status on\n   */\n  function setRTL(instance) {\n    if (!instance.__autoDirOptOut) {\n      var el = /** @type {!HTMLElement} */instance;\n      el.setAttribute('dir', DOCUMENT_DIR);\n    }\n  }\n\n  function updateDirection() {\n    getRTL();\n    DOCUMENT_DIR = document.documentElement.getAttribute('dir');\n    for (var i = 0; i < DIR_INSTANCES.length; i++) {\n      setRTL(DIR_INSTANCES[i]);\n    }\n  }\n\n  function takeRecords() {\n    if (observer && observer.takeRecords().length) {\n      updateDirection();\n    }\n  }\n\n  /**\n   * Element class mixin that allows elements to use the `:dir` CSS Selector to have\n   * text direction specific styling.\n   *\n   * With this mixin, any stylesheet provided in the template will transform `:dir` into\n   * `:host([dir])` and sync direction with the page via the element's `dir` attribute.\n   *\n   * Elements can opt out of the global page text direction by setting the `dir` attribute\n   * directly in `ready()` or in HTML.\n   *\n   * Caveats:\n   * - Applications must set `<html dir=\"ltr\">` or `<html dir=\"rtl\">` to sync direction\n   * - Automatic left-to-right or right-to-left styling is sync'd with the `<html>` element only.\n   * - Changing `dir` at runtime is supported.\n   * - Opting out of the global direction styling is permanent\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.PropertyAccessors\n   * @memberof Polymer\n   */\n  Polymer.DirMixin = Polymer.dedupingMixin(function (base) {\n\n    if (!observer) {\n      getRTL();\n      observer = new MutationObserver(updateDirection);\n      observer.observe(document.documentElement, { attributes: true, attributeFilter: ['dir'] });\n    }\n\n    /**\n     * @constructor\n     * @extends {base}\n     * @implements {Polymer_PropertyAccessors}\n     */\n    var elementBase = Polymer.PropertyAccessors(base);\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_DirMixin}\n     */\n\n    var Dir = function (_elementBase) {\n      _inherits(Dir, _elementBase);\n\n      _createClass(Dir, null, [{\n        key: '_processStyleText',\n\n\n        /**\n         * @override\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n        value: function _processStyleText(cssText, baseURI) {\n          cssText = _get(Dir.__proto__ || Object.getPrototypeOf(Dir), '_processStyleText', this).call(this, cssText, baseURI);\n          cssText = this._replaceDirInCssText(cssText);\n          return cssText;\n        }\n\n        /**\n         * Replace `:dir` in the given CSS text\n         *\n         * @param {string} text CSS text to replace DIR\n         * @return {string} Modified CSS\n         */\n\n      }, {\n        key: '_replaceDirInCssText',\n        value: function _replaceDirInCssText(text) {\n          var replacedText = text;\n          replacedText = replacedText.replace(HOST_DIR, HOST_DIR_REPLACMENT);\n          replacedText = replacedText.replace(EL_DIR, EL_DIR_REPLACMENT);\n          if (text !== replacedText) {\n            this.__activateDir = true;\n          }\n          return replacedText;\n        }\n      }]);\n\n      function Dir() {\n        _classCallCheck(this, Dir);\n\n        /** @type {boolean} */\n        var _this = _possibleConstructorReturn(this, (Dir.__proto__ || Object.getPrototypeOf(Dir)).call(this));\n\n        _this.__autoDirOptOut = false;\n        return _this;\n      }\n\n      /**\n       * @suppress {invalidCasts} Closure doesn't understand that `this` is an HTMLElement\n       * @return {void}\n       */\n\n\n      _createClass(Dir, [{\n        key: 'ready',\n        value: function ready() {\n          _get(Dir.prototype.__proto__ || Object.getPrototypeOf(Dir.prototype), 'ready', this).call(this);\n          this.__autoDirOptOut = /** @type {!HTMLElement} */this.hasAttribute('dir');\n        }\n\n        /**\n         * @suppress {missingProperties} If it exists on elementBase, it can be super'd\n         * @return {void}\n         */\n\n      }, {\n        key: 'connectedCallback',\n        value: function connectedCallback() {\n          if (elementBase.prototype.connectedCallback) {\n            _get(Dir.prototype.__proto__ || Object.getPrototypeOf(Dir.prototype), 'connectedCallback', this).call(this);\n          }\n          if (this.constructor.__activateDir) {\n            takeRecords();\n            DIR_INSTANCES.push(this);\n            setRTL(this);\n          }\n        }\n\n        /**\n         * @suppress {missingProperties} If it exists on elementBase, it can be super'd\n         * @return {void}\n         */\n\n      }, {\n        key: 'disconnectedCallback',\n        value: function disconnectedCallback() {\n          if (elementBase.prototype.disconnectedCallback) {\n            _get(Dir.prototype.__proto__ || Object.getPrototypeOf(Dir.prototype), 'disconnectedCallback', this).call(this);\n          }\n          if (this.constructor.__activateDir) {\n            var idx = DIR_INSTANCES.indexOf(this);\n            if (idx > -1) {\n              DIR_INSTANCES.splice(idx, 1);\n            }\n          }\n        }\n      }]);\n\n      return Dir;\n    }(elementBase);\n\n    Dir.__activateDir = false;\n\n    return Dir;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/dir-mixin.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/element-mixin.html":
/*!****************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/element-mixin.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/settings.html */ \"./bower_components/polymer/lib/utils/settings.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/style-gather.html */ \"./bower_components/polymer/lib/utils/style-gather.html\");\n\n__webpack_require__(/*! ../utils/resolve-url.html */ \"./bower_components/polymer/lib/utils/resolve-url.html\");\n\n__webpack_require__(/*! ../elements/dom-module.html */ \"./bower_components/polymer/lib/elements/dom-module.html\");\n\n__webpack_require__(/*! ./property-effects.html */ \"./bower_components/polymer/lib/mixins/property-effects.html\");\n\n__webpack_require__(/*! ./properties-mixin.html */ \"./bower_components/polymer/lib/mixins/properties-mixin.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Element class mixin that provides the core API for Polymer's meta-programming\n   * features including template stamping, data-binding, attribute deserialization,\n   * and property change observation.\n   *\n   * Subclassers may provide the following static getters to return metadata\n   * used to configure Polymer's features for the class:\n   *\n   * - `static get is()`: When the template is provided via a `dom-module`,\n   *   users should return the `dom-module` id from a static `is` getter.  If\n   *   no template is needed or the template is provided directly via the\n   *   `template` getter, there is no need to define `is` for the element.\n   *\n   * - `static get template()`: Users may provide the template directly (as\n   *   opposed to via `dom-module`) by implementing a static `template` getter.\n   *   The getter may return an `HTMLTemplateElement` or a string, which will\n   *   automatically be parsed into a template.\n   *\n   * - `static get properties()`: Should return an object describing\n   *   property-related metadata used by Polymer features (key: property name\n   *   value: object containing property metadata). Valid keys in per-property\n   *   metadata include:\n   *   - `type` (String|Number|Object|Array|...): Used by\n   *     `attributeChangedCallback` to determine how string-based attributes\n   *     are deserialized to JavaScript property values.\n   *   - `notify` (boolean): Causes a change in the property to fire a\n   *     non-bubbling event called `<property>-changed`. Elements that have\n   *     enabled two-way binding to the property use this event to observe changes.\n   *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n   *     To set a read-only property, use the private setter method\n   *     `_setProperty(property, value)`.\n   *   - `observer` (string): Observer method name that will be called when\n   *     the property changes. The arguments of the method are\n   *     `(value, previousValue)`.\n   *   - `computed` (string): String describing method and dependent properties\n   *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n   *     Computed properties are read-only by default and can only be changed\n   *     via the return value of the computing method.\n   *\n   * - `static get observers()`: Array of strings describing multi-property\n   *   observer methods and their dependent properties (e.g.\n   *   `'observeABC(a, b, c)'`).\n   *\n   * The base class provides default implementations for the following standard\n   * custom element lifecycle callbacks; users may override these, but should\n   * call the super method to ensure\n   * - `constructor`: Run when the element is created or upgraded\n   * - `connectedCallback`: Run each time the element is connected to the\n   *   document\n   * - `disconnectedCallback`: Run each time the element is disconnected from\n   *   the document\n   * - `attributeChangedCallback`: Run each time an attribute in\n   *   `observedAttributes` is set or removed (note: this element's default\n   *   `observedAttributes` implementation will automatically return an array\n   *   of dash-cased attributes based on `properties`)\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.PropertyEffects\n   * @appliesMixin Polymer.PropertiesMixin\n   * @memberof Polymer\n   * @property rootPath {string} Set to the value of `Polymer.rootPath`,\n   *   which defaults to the main document path\n   * @property importPath {string} Set to the value of the class's static\n   *   `importPath` property, which defaults to the path of this element's\n   *   `dom-module` (when `is` is used), but can be overridden for other\n   *   import strategies.\n   * @summary Element class mixin that provides the core API for Polymer's\n   * meta-programming features.\n   */\n\n  Polymer.ElementMixin = Polymer.dedupingMixin(function (base) {\n\n    /**\n     * @constructor\n     * @extends {base}\n     * @implements {Polymer_PropertyEffects}\n     * @implements {Polymer_PropertiesMixin}\n     */\n    var polymerElementBase = Polymer.PropertiesMixin(Polymer.PropertyEffects(base));\n\n    /**\n     * Returns a list of properties with default values.\n     * This list is created as an optimization since it is a subset of\n     * the list returned from `_properties`.\n     * This list is used in `_initializeProperties` to set property defaults.\n     *\n     * @param {PolymerElementConstructor} constructor Element class\n     * @return {PolymerElementProperties} Flattened properties for this class\n     *   that have default values\n     * @private\n     */\n    function propertyDefaults(constructor) {\n      if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n        constructor.__propertyDefaults = null;\n        var props = constructor._properties;\n        for (var p in props) {\n          var info = props[p];\n          if ('value' in info) {\n            constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n            constructor.__propertyDefaults[p] = info;\n          }\n        }\n      }\n      return constructor.__propertyDefaults;\n    }\n\n    /**\n     * Returns a memoized version of the the `observers` array.\n     * @param {PolymerElementConstructor} constructor Element class\n     * @return {Array} Array containing own observers for the given class\n     * @protected\n     */\n    function ownObservers(constructor) {\n      if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownObservers', constructor))) {\n        constructor.__ownObservers = constructor.hasOwnProperty(JSCompiler_renameProperty('observers', constructor)) ?\n        /** @type {PolymerElementConstructor} */constructor.observers : null;\n      }\n      return constructor.__ownObservers;\n    }\n\n    /**\n     * Creates effects for a property.\n     *\n     * Note, once a property has been set to\n     * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n     * these values may not be changed. For example, a subclass cannot\n     * alter these settings. However, additional `observers` may be added\n     * by subclasses.\n     *\n     * The info object should may contain property metadata as follows:\n     *\n     * * `type`: {function} type to which an attribute matching the property\n     * is deserialized. Note the property is camel-cased from a dash-cased\n     * attribute. For example, 'foo-bar' attribute is deserialized to a\n     * property named 'fooBar'.\n     *\n     * * `readOnly`: {boolean} creates a readOnly property and\n     * makes a private setter for the private of the form '_setFoo' for a\n     * property 'foo',\n     *\n     * * `computed`: {string} creates a computed property. A computed property\n     * also automatically is set to `readOnly: true`. The value is calculated\n     * by running a method and arguments parsed from the given string. For\n     * example 'compute(foo)' will compute a given property when the\n     * 'foo' property changes by executing the 'compute' method. This method\n     * must return the computed value.\n     *\n     * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n     * to an attribute of the same name. Note, the attribute is dash-cased\n     * so a property named 'fooBar' is reflected as 'foo-bar'.\n     *\n     * * `notify`: {boolean} sends a non-bubbling notification event when\n     * the property changes. For example, a property named 'foo' sends an\n     * event named 'foo-changed' with `event.detail` set to the value of\n     * the property.\n     *\n     * * observer: {string} name of a method that runs when the property\n     * changes. The arguments of the method are (value, previousValue).\n     *\n     * Note: Users may want control over modifying property\n     * effects via subclassing. For example, a user might want to make a\n     * reflectToAttribute property not do so in a subclass. We've chosen to\n     * disable this because it leads to additional complication.\n     * For example, a readOnly effect generates a special setter. If a subclass\n     * disables the effect, the setter would fail unexpectedly.\n     * Based on feedback, we may want to try to make effects more malleable\n     * and/or provide an advanced api for manipulating them.\n     * Also consider adding warnings when an effect cannot be changed.\n     *\n     * @param {!PolymerElement} proto Element class prototype to add accessors\n     *   and effects to\n     * @param {string} name Name of the property.\n     * @param {Object} info Info object from which to create property effects.\n     * Supported keys:\n     * @param {Object} allProps Flattened map of all properties defined in this\n     *   element (including inherited properties)\n     * @return {void}\n     * @private\n     */\n    function createPropertyFromConfig(proto, name, info, allProps) {\n      // computed forces readOnly...\n      if (info.computed) {\n        info.readOnly = true;\n      }\n      // Note, since all computed properties are readOnly, this prevents\n      // adding additional computed property effects (which leads to a confusing\n      // setup where multiple triggers for setting a property)\n      // While we do have `hasComputedEffect` this is set on the property's\n      // dependencies rather than itself.\n      if (info.computed && !proto._hasReadOnlyEffect(name)) {\n        proto._createComputedProperty(name, info.computed, allProps);\n      }\n      if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n        proto._createReadOnlyProperty(name, !info.computed);\n      }\n      if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n        proto._createReflectedProperty(name);\n      }\n      if (info.notify && !proto._hasNotifyEffect(name)) {\n        proto._createNotifyingProperty(name);\n      }\n      // always add observer\n      if (info.observer) {\n        proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n      }\n      // always create the mapping from attribute back to property for deserialization.\n      proto._addPropertyToAttributeMap(name);\n    }\n\n    /**\n     * Process all style elements in the element template. Styles with the\n     * `include` attribute are processed such that any styles in\n     * the associated \"style modules\" are included in the element template.\n     * @param {PolymerElementConstructor} klass Element class\n     * @param {!HTMLTemplateElement} template Template to process\n     * @param {string} is Name of element\n     * @param {string} baseURI Base URI for element\n     * @private\n     */\n    function processElementStyles(klass, template, is, baseURI) {\n      var templateStyles = template.content.querySelectorAll('style');\n      var stylesWithImports = Polymer.StyleGather.stylesFromTemplate(template);\n      // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n      var linkedStyles = Polymer.StyleGather.stylesFromModuleImports(is);\n      var firstTemplateChild = template.content.firstElementChild;\n      for (var idx = 0; idx < linkedStyles.length; idx++) {\n        var s = linkedStyles[idx];\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n        template.content.insertBefore(s, firstTemplateChild);\n      }\n      // keep track of the last \"concrete\" style in the template we have encountered\n      var templateStyleIndex = 0;\n      // ensure all gathered styles are actually in this template.\n      for (var i = 0; i < stylesWithImports.length; i++) {\n        var _s = stylesWithImports[i];\n        var templateStyle = templateStyles[templateStyleIndex];\n        // if the style is not in this template, it's been \"included\" and\n        // we put a clone of it in the template before the style that included it\n        if (templateStyle !== _s) {\n          _s = _s.cloneNode(true);\n          templateStyle.parentNode.insertBefore(_s, templateStyle);\n        } else {\n          templateStyleIndex++;\n        }\n        _s.textContent = klass._processStyleText(_s.textContent, baseURI);\n      }\n      if (window.ShadyCSS) {\n        window.ShadyCSS.prepareTemplate(template, is);\n      }\n    }\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @unrestricted\n     * @implements {Polymer_ElementMixin}\n     */\n\n    var PolymerElement = function (_polymerElementBase) {\n      _inherits(PolymerElement, _polymerElementBase);\n\n      _createClass(PolymerElement, null, [{\n        key: '_finalizeClass',\n\n\n        /**\n         * Override of PropertiesMixin _finalizeClass to create observers and\n         * find the template.\n         * @return {void}\n         * @protected\n         * @override\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n        value: function _finalizeClass() {\n          _get(PolymerElement.__proto__ || Object.getPrototypeOf(PolymerElement), '_finalizeClass', this).call(this);\n          if (this.hasOwnProperty(JSCompiler_renameProperty('is', this)) && this.is) {\n            Polymer.telemetry.register(this.prototype);\n          }\n          var observers = ownObservers(this);\n          if (observers) {\n            this.createObservers(observers, this._properties);\n          }\n          // note: create \"working\" template that is finalized at instance time\n          var template = /** @type {PolymerElementConstructor} */this.template;\n          if (template) {\n            if (typeof template === 'string') {\n              var t = document.createElement('template');\n              t.innerHTML = template;\n              template = t;\n            } else {\n              template = template.cloneNode(true);\n            }\n            this.prototype._template = template;\n          }\n        }\n\n        /**\n         * Override of PropertiesChanged createProperties to create accessors\n         * and property effects for all of the properties.\n         * @return {void}\n         * @protected\n         * @override\n         */\n\n      }, {\n        key: 'createProperties',\n        value: function createProperties(props) {\n          for (var p in props) {\n            createPropertyFromConfig(this.prototype, p, props[p], props);\n          }\n        }\n\n        /**\n         * Creates observers for the given `observers` array.\n         * Leverages `PropertyEffects` to create observers.\n         * @param {Object} observers Array of observer descriptors for\n         *   this class\n         * @param {Object} dynamicFns Object containing keys for any properties\n         *   that are functions and should trigger the effect when the function\n         *   reference is changed\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createObservers',\n        value: function createObservers(observers, dynamicFns) {\n          var proto = this.prototype;\n          for (var i = 0; i < observers.length; i++) {\n            proto._createMethodObserver(observers[i], dynamicFns);\n          }\n        }\n\n        /**\n         * Returns the template that will be stamped into this element's shadow root.\n         *\n         * If a `static get is()` getter is defined, the default implementation\n         * will return the first `<template>` in a `dom-module` whose `id`\n         * matches this element's `is`.\n         *\n         * Users may override this getter to return an arbitrary template\n         * (in which case the `is` getter is unnecessary). The template returned\n         * may be either an `HTMLTemplateElement` or a string that will be\n         * automatically parsed into a template.\n         *\n         * Note that when subclassing, if the super class overrode the default\n         * implementation and the subclass would like to provide an alternate\n         * template via a `dom-module`, it should override this getter and\n         * return `Polymer.DomModule.import(this.is, 'template')`.\n         *\n         * If a subclass would like to modify the super class template, it should\n         * clone it rather than modify it in place.  If the getter does expensive\n         * work such as cloning/modifying a template, it should memoize the\n         * template for maximum performance:\n         *\n         *   let memoizedTemplate;\n         *   class MySubClass extends MySuperClass {\n         *     static get template() {\n         *       if (!memoizedTemplate) {\n         *         memoizedTemplate = super.template.cloneNode(true);\n         *         let subContent = document.createElement('div');\n         *         subContent.textContent = 'This came from MySubClass';\n         *         memoizedTemplate.content.appendChild(subContent);\n         *       }\n         *       return memoizedTemplate;\n         *     }\n         *   }\n         *\n         * @return {HTMLTemplateElement|string} Template to be stamped\n         */\n\n      }, {\n        key: 'template',\n        get: function get() {\n          if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n            this._template = Polymer.DomModule && Polymer.DomModule.import(\n            /** @type {PolymerElementConstructor}*/this.is, 'template') ||\n            // note: implemented so a subclass can retrieve the super\n            // template; call the super impl this way so that `this` points\n            // to the superclass.\n            Object.getPrototypeOf( /** @type {PolymerElementConstructor}*/this.prototype).constructor.template;\n          }\n          return this._template;\n        }\n\n        /**\n         * Path matching the url from which the element was imported.\n         * This path is used to resolve url's in template style cssText.\n         * The `importPath` property is also set on element instances and can be\n         * used to create bindings relative to the import path.\n         * Defaults to the path matching the url containing a `dom-module` element\n         * matching this element's static `is` property.\n         * Note, this path should contain a trailing `/`.\n         *\n         * @return {string} The import path for this element class\n         */\n\n      }, {\n        key: 'importPath',\n        get: function get() {\n          if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n            var module = Polymer.DomModule && Polymer.DomModule.import( /** @type {PolymerElementConstructor} */this.is);\n            this._importPath = module ? module.assetpath : '' || Object.getPrototypeOf( /** @type {PolymerElementConstructor}*/this.prototype).constructor.importPath;\n          }\n          return this._importPath;\n        }\n      }]);\n\n      function PolymerElement() {\n        _classCallCheck(this, PolymerElement);\n\n        /** @type {HTMLTemplateElement} */\n        var _this = _possibleConstructorReturn(this, (PolymerElement.__proto__ || Object.getPrototypeOf(PolymerElement)).call(this));\n\n        _this._template;\n        /** @type {string} */\n        _this._importPath;\n        /** @type {string} */\n        _this.rootPath;\n        /** @type {string} */\n        _this.importPath;\n        /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n        _this.root;\n        /** @type {!Object<string, !Element>} */\n        _this.$;\n        return _this;\n      }\n\n      /**\n       * Overrides the default `Polymer.PropertyAccessors` to ensure class\n       * metaprogramming related to property accessors and effects has\n       * completed (calls `finalize`).\n       *\n       * It also initializes any property defaults provided via `value` in\n       * `properties` metadata.\n       *\n       * @return {void}\n       * @override\n       * @suppress {invalidCasts}\n       */\n\n\n      _createClass(PolymerElement, [{\n        key: '_initializeProperties',\n        value: function _initializeProperties() {\n          Polymer.telemetry.instanceCount++;\n          this.constructor.finalize();\n          var importPath = this.constructor.importPath;\n          // note: finalize template when we have access to `localName` to\n          // avoid dependence on `is` for polyfilling styling.\n          this.constructor._finalizeTemplate( /** @type {!HTMLElement} */this.localName);\n          _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), '_initializeProperties', this).call(this);\n          // set path defaults\n          this.rootPath = Polymer.rootPath;\n          this.importPath = importPath;\n          // apply property defaults...\n          var p$ = propertyDefaults(this.constructor);\n          if (!p$) {\n            return;\n          }\n          for (var p in p$) {\n            var info = p$[p];\n            // Don't set default value if there is already an own property, which\n            // happens when a `properties` property with default but no effects had\n            // a property set (e.g. bound) by its host before upgrade\n            if (!this.hasOwnProperty(p)) {\n              var value = typeof info.value == 'function' ? info.value.call(this) : info.value;\n              // Set via `_setProperty` if there is an accessor, to enable\n              // initializing readOnly property defaults\n              if (this._hasAccessor(p)) {\n                this._setPendingProperty(p, value, true);\n              } else {\n                this[p] = value;\n              }\n            }\n          }\n        }\n\n        /**\n         * Gather style text for a style element in the template.\n         *\n         * @param {string} cssText Text containing styling to process\n         * @param {string} baseURI Base URI to rebase CSS paths against\n         * @return {string} The processed CSS text\n         * @protected\n         */\n\n      }, {\n        key: 'connectedCallback',\n\n\n        /**\n         * Provides a default implementation of the standard Custom Elements\n         * `connectedCallback`.\n         *\n         * The default implementation enables the property effects system and\n         * flushes any pending properties, and updates shimmed CSS properties\n         * when using the ShadyCSS scoping/custom properties polyfill.\n         *\n         * @suppress {missingProperties, invalidCasts} Super may or may not implement the callback\n         * @return {void}\n         */\n        value: function connectedCallback() {\n          if (window.ShadyCSS && this._template) {\n            window.ShadyCSS.styleElement( /** @type {!HTMLElement} */this);\n          }\n          _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), 'connectedCallback', this).call(this);\n        }\n\n        /**\n         * Stamps the element template.\n         *\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: 'ready',\n        value: function ready() {\n          if (this._template) {\n            this.root = this._stampTemplate(this._template);\n            this.$ = this.root.$;\n          }\n          _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), 'ready', this).call(this);\n        }\n\n        /**\n         * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n         * element dom by calling `_attachDom` with the dom stamped from the\n         * element's template via `_stampTemplate`. Note that this allows\n         * client dom to be attached to the element prior to any observers\n         * running.\n         *\n         * @return {void}\n         * @override\n         */\n\n      }, {\n        key: '_readyClients',\n        value: function _readyClients() {\n          if (this._template) {\n            this.root = this._attachDom( /** @type {StampedTemplate} */this.root);\n          }\n          // The super._readyClients here sets the clients initialized flag.\n          // We must wait to do this until after client dom is created/attached\n          // so that this flag can be checked to prevent notifications fired\n          // during this process from being handled before clients are ready.\n          _get(PolymerElement.prototype.__proto__ || Object.getPrototypeOf(PolymerElement.prototype), '_readyClients', this).call(this);\n        }\n\n        /**\n         * Attaches an element's stamped dom to itself. By default,\n         * this method creates a `shadowRoot` and adds the dom to it.\n         * However, this method may be overridden to allow an element\n         * to put its dom in another location.\n         *\n         * @throws {Error}\n         * @suppress {missingReturn}\n         * @param {StampedTemplate} dom to attach to the element.\n         * @return {ShadowRoot} node to which the dom has been attached.\n         */\n\n      }, {\n        key: '_attachDom',\n        value: function _attachDom(dom) {\n          if (this.attachShadow) {\n            if (dom) {\n              if (!this.shadowRoot) {\n                this.attachShadow({ mode: 'open' });\n              }\n              this.shadowRoot.appendChild(dom);\n              return this.shadowRoot;\n            }\n            return null;\n          } else {\n            throw new Error('ShadowDOM not available. ' +\n            // TODO(sorvell): move to compile-time conditional when supported\n            'Polymer.Element can create dom as children instead of in ' + 'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n          }\n        }\n\n        /**\n         * When using the ShadyCSS scoping and custom property shim, causes all\n         * shimmed styles in this element (and its subtree) to be updated\n         * based on current custom property values.\n         *\n         * The optional parameter overrides inline custom property styles with an\n         * object of properties where the keys are CSS properties, and the values\n         * are strings.\n         *\n         * Example: `this.updateStyles({'--color': 'blue'})`\n         *\n         * These properties are retained unless a value of `null` is set.\n         *\n         * @param {Object=} properties Bag of custom property key/values to\n         *   apply to this element.\n         * @return {void}\n         * @suppress {invalidCasts}\n         */\n\n      }, {\n        key: 'updateStyles',\n        value: function updateStyles(properties) {\n          if (window.ShadyCSS) {\n            window.ShadyCSS.styleSubtree( /** @type {!HTMLElement} */this, properties);\n          }\n        }\n\n        /**\n         * Rewrites a given URL relative to a base URL. The base URL defaults to\n         * the original location of the document containing the `dom-module` for\n         * this element. This method will return the same URL before and after\n         * bundling.\n         *\n         * Note that this function performs no resolution for URLs that start\n         * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n         * URL resolution, use `window.URL`.\n         *\n         * @param {string} url URL to resolve.\n         * @param {string=} base Optional base URL to resolve against, defaults\n         * to the element's `importPath`\n         * @return {string} Rewritten URL relative to base\n         */\n\n      }, {\n        key: 'resolveUrl',\n        value: function resolveUrl(url, base) {\n          if (!base && this.importPath) {\n            base = Polymer.ResolveUrl.resolveUrl(this.importPath);\n          }\n          return Polymer.ResolveUrl.resolveUrl(url, base);\n        }\n\n        /**\n         * Overrides `PropertyAccessors` to add map of dynamic functions on\n         * template info, for consumption by `PropertyEffects` template binding\n         * code. This map determines which method templates should have accessors\n         * created for them.\n         *\n         * @override\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n\n      }], [{\n        key: '_processStyleText',\n        value: function _processStyleText(cssText, baseURI) {\n          return Polymer.ResolveUrl.resolveCss(cssText, baseURI);\n        }\n\n        /**\n        * Configures an element `proto` to function with a given `template`.\n        * The element name `is` and extends `ext` must be specified for ShadyCSS\n        * style scoping.\n        *\n        * @param {string} is Tag name (or type extension name) for this element\n        * @return {void}\n        * @protected\n        */\n\n      }, {\n        key: '_finalizeTemplate',\n        value: function _finalizeTemplate(is) {\n          /** @const {HTMLTemplateElement} */\n          var template = this.prototype._template;\n          if (template && !template.__polymerFinalized) {\n            template.__polymerFinalized = true;\n            var importPath = this.importPath;\n            var baseURI = importPath ? Polymer.ResolveUrl.resolveUrl(importPath) : '';\n            // e.g. support `include=\"module-name\"`, and ShadyCSS\n            processElementStyles(this, template, is, baseURI);\n            this.prototype._bindTemplate(template);\n          }\n        }\n      }, {\n        key: '_parseTemplateContent',\n        value: function _parseTemplateContent(template, templateInfo, nodeInfo) {\n          templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n          return _get(PolymerElement.__proto__ || Object.getPrototypeOf(PolymerElement), '_parseTemplateContent', this).call(this, template, templateInfo, nodeInfo);\n        }\n      }]);\n\n      return PolymerElement;\n    }(polymerElementBase);\n\n    return PolymerElement;\n  });\n\n  /**\n   * Provides basic tracking of element definitions (registrations) and\n   * instance counts.\n   *\n   * @namespace\n   * @summary Provides basic tracking of element definitions (registrations) and\n   * instance counts.\n   */\n  Polymer.telemetry = {\n    /**\n     * Total number of Polymer element instances created.\n     * @type {number}\n     */\n    instanceCount: 0,\n    /**\n     * Array of Polymer element classes that have been finalized.\n     * @type {Array<Polymer.Element>}\n     */\n    registrations: [],\n    /**\n     * @param {!PolymerElementConstructor} prototype Element prototype to log\n     * @this {this}\n     * @private\n     */\n    _regLog: function _regLog(prototype) {\n      console.log('[' + prototype.is + ']: registered');\n    },\n    /**\n     * Registers a class prototype for telemetry purposes.\n     * @param {HTMLElement} prototype Element prototype to register\n     * @this {this}\n     * @protected\n     */\n    register: function register(prototype) {\n      this.registrations.push(prototype);\n      Polymer.log && this._regLog(prototype);\n    },\n    /**\n     * Logs all elements registered with an `is` to the console.\n     * @public\n     * @this {this}\n     */\n    dumpRegistrations: function dumpRegistrations() {\n      this.registrations.forEach(this._regLog);\n    }\n  };\n\n  /**\n   * When using the ShadyCSS scoping and custom property shim, causes all\n   * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n   * to be updated based on current custom property values.\n   *\n   * The optional parameter overrides inline custom property styles with an\n   * object of properties where the keys are CSS properties, and the values\n   * are strings.\n   *\n   * Example: `Polymer.updateStyles({'--color': 'blue'})`\n   *\n   * These properties are retained unless a value of `null` is set.\n   *\n   * @param {Object=} props Bag of custom property key/values to\n   *   apply to the document.\n   * @return {void}\n   */\n  Polymer.updateStyles = function (props) {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleDocument(props);\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/element-mixin.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/gesture-event-listeners.html":
/*!**************************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/gesture-event-listeners.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/gestures.html */ \"./bower_components/polymer/lib/utils/gestures.html\");\n\n(function () {\n\n  'use strict';\n\n  /**\n   * @const {Polymer.Gestures}\n   */\n\n  var gestures = Polymer.Gestures;\n\n  /**\n   * Element class mixin that provides API for adding Polymer's cross-platform\n   * gesture events to nodes.\n   *\n   * The API is designed to be compatible with override points implemented\n   * in `Polymer.TemplateStamp` such that declarative event listeners in\n   * templates will support gesture events when this mixin is applied along with\n   * `Polymer.TemplateStamp`.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin that provides API for adding Polymer's cross-platform\n   * gesture events to nodes\n   */\n  Polymer.GestureEventListeners = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_GestureEventListeners}\n     */\n    var GestureEventListeners = function (_superClass) {\n      _inherits(GestureEventListeners, _superClass);\n\n      function GestureEventListeners() {\n        _classCallCheck(this, GestureEventListeners);\n\n        return _possibleConstructorReturn(this, (GestureEventListeners.__proto__ || Object.getPrototypeOf(GestureEventListeners)).apply(this, arguments));\n      }\n\n      _createClass(GestureEventListeners, [{\n        key: '_addEventListenerToNode',\n\n\n        /**\n         * Add the event listener to the node if it is a gestures event.\n         *\n         * @param {!Node} node Node to add event listener to\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to add\n         * @return {void}\n         */\n        value: function _addEventListenerToNode(node, eventName, handler) {\n          if (!gestures.addListener(node, eventName, handler)) {\n            _get(GestureEventListeners.prototype.__proto__ || Object.getPrototypeOf(GestureEventListeners.prototype), '_addEventListenerToNode', this).call(this, node, eventName, handler);\n          }\n        }\n\n        /**\n         * Remove the event listener to the node if it is a gestures event.\n         *\n         * @param {!Node} node Node to remove event listener from\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to remove\n         * @return {void}\n         */\n\n      }, {\n        key: '_removeEventListenerFromNode',\n        value: function _removeEventListenerFromNode(node, eventName, handler) {\n          if (!gestures.removeListener(node, eventName, handler)) {\n            _get(GestureEventListeners.prototype.__proto__ || Object.getPrototypeOf(GestureEventListeners.prototype), '_removeEventListenerFromNode', this).call(this, node, eventName, handler);\n          }\n        }\n      }]);\n\n      return GestureEventListeners;\n    }(superClass);\n\n    return GestureEventListeners;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/gesture-event-listeners.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/mutable-data.html":
/*!***************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/mutable-data.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n(function () {\n  'use strict';\n\n  // Common implementation for mixin & behavior\n\n  function mutablePropertyChange(inst, property, value, old, mutableData) {\n    var isObject = void 0;\n    if (mutableData) {\n      isObject = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n      // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n      if (isObject) {\n        old = inst.__dataTemp[property];\n      }\n    }\n    // Strict equality check, but return false for NaN===NaN\n    var shouldChange = old !== value && (old === old || value === value);\n    // Objects are stored in temporary cache (cleared at end of\n    // turn), which is used for dirty-checking\n    if (isObject && shouldChange) {\n      inst.__dataTemp[property] = value;\n    }\n    return shouldChange;\n  }\n\n  /**\n   * Element class mixin to skip strict dirty-checking for objects and arrays\n   * (always consider them to be \"dirty\"), for use on elements utilizing\n   * `Polymer.PropertyEffects`\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will cause Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   * Specifically, any elements in the binding tree between the source of a\n   * mutation and the consumption of it must apply this mixin or enable the\n   * `Polymer.OptionalMutableData` mixin.\n   *\n   * In order to make the dirty check strategy configurable, see\n   * `Polymer.OptionalMutableData`.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse as opposed to using strict dirty checking with immutable\n   * patterns or Polymer's path notification API.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin to skip strict dirty-checking for objects\n   *   and arrays\n   */\n  Polymer.MutableData = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_MutableData}\n     */\n    var MutableData = function (_superClass) {\n      _inherits(MutableData, _superClass);\n\n      function MutableData() {\n        _classCallCheck(this, MutableData);\n\n        return _possibleConstructorReturn(this, (MutableData.__proto__ || Object.getPrototypeOf(MutableData)).apply(this, arguments));\n      }\n\n      _createClass(MutableData, [{\n        key: '_shouldPropertyChange',\n\n        /**\n         * Overrides `Polymer.PropertyEffects` to provide option for skipping\n         * strict equality checking for Objects and Arrays.\n         *\n         * This method pulls the value to dirty check against from the `__dataTemp`\n         * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n         * cache is cleared at the end of a turn, this implementation allows\n         * side-effects of deep object changes to be processed by re-setting the\n         * same object (using the temp cache as an in-turn backstop to prevent\n         * cycles due to 2-way notification).\n         *\n         * @param {string} property Property name\n         * @param {*} value New property value\n         * @param {*} old Previous property value\n         * @return {boolean} Whether the property should be considered a change\n         * @protected\n         */\n        value: function _shouldPropertyChange(property, value, old) {\n          return mutablePropertyChange(this, property, value, old, true);\n        }\n      }]);\n\n      return MutableData;\n    }(superClass);\n    /** @type {boolean} */\n\n\n    MutableData.prototype.mutableData = false;\n\n    return MutableData;\n  });\n\n  /**\n   * Element class mixin to add the optional ability to skip strict\n   * dirty-checking for objects and arrays (always consider them to be\n   * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n   *\n   * By default, `Polymer.PropertyEffects` performs strict dirty checking on\n   * objects, which means that any deep modifications to an object or array will\n   * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n   * references from the root to the mutation were changed).\n   *\n   * Polymer also provides a proprietary data mutation and path notification API\n   * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n   * mutation and notification of deep changes in an object graph to all elements\n   * bound to the same object graph.\n   *\n   * In cases where neither immutable patterns nor the data mutation API can be\n   * used, applying this mixin will allow Polymer to skip dirty checking for\n   * objects and arrays (always consider them to be \"dirty\").  This allows a\n   * user to make a deep modification to a bound object graph, and then either\n   * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n   * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n   * elements that wish to be updated based on deep mutations must apply this\n   * mixin or otherwise skip strict dirty checking for objects/arrays.\n   * Specifically, any elements in the binding tree between the source of a\n   * mutation and the consumption of it must enable this mixin or apply the\n   * `Polymer.MutableData` mixin.\n   *\n   * While this mixin adds the ability to forgo Object/Array dirty checking,\n   * the `mutableData` flag defaults to false and must be set on the instance.\n   *\n   * Note, the performance characteristics of propagating large object graphs\n   * will be worse by relying on `mutableData: true` as opposed to using\n   * strict dirty checking with immutable patterns or Polymer's path notification\n   * API.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin to optionally skip strict dirty-checking\n   *   for objects and arrays\n   */\n  Polymer.OptionalMutableData = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @mixinClass\n     * @polymer\n     * @implements {Polymer_OptionalMutableData}\n     */\n    var OptionalMutableData = function (_superClass2) {\n      _inherits(OptionalMutableData, _superClass2);\n\n      function OptionalMutableData() {\n        _classCallCheck(this, OptionalMutableData);\n\n        return _possibleConstructorReturn(this, (OptionalMutableData.__proto__ || Object.getPrototypeOf(OptionalMutableData)).apply(this, arguments));\n      }\n\n      _createClass(OptionalMutableData, [{\n        key: '_shouldPropertyChange',\n\n\n        /**\n         * Overrides `Polymer.PropertyEffects` to provide option for skipping\n         * strict equality checking for Objects and Arrays.\n         *\n         * When `this.mutableData` is true on this instance, this method\n         * pulls the value to dirty check against from the `__dataTemp` cache\n         * (rather than the normal `__data` cache) for Objects.  Since the temp\n         * cache is cleared at the end of a turn, this implementation allows\n         * side-effects of deep object changes to be processed by re-setting the\n         * same object (using the temp cache as an in-turn backstop to prevent\n         * cycles due to 2-way notification).\n         *\n         * @param {string} property Property name\n         * @param {*} value New property value\n         * @param {*} old Previous property value\n         * @return {boolean} Whether the property should be considered a change\n         * @protected\n         */\n        value: function _shouldPropertyChange(property, value, old) {\n          return mutablePropertyChange(this, property, value, old, this.mutableData);\n        }\n      }], [{\n        key: 'properties',\n        get: function get() {\n          return {\n            /**\n             * Instance-level flag for configuring the dirty-checking strategy\n             * for this element.  When true, Objects and Arrays will skip dirty\n             * checking, otherwise strict equality checking will be used.\n             */\n            mutableData: Boolean\n          };\n        }\n      }]);\n\n      return OptionalMutableData;\n    }(superClass);\n\n    return OptionalMutableData;\n  });\n\n  // Export for use by legacy behavior\n  Polymer.MutableData._mutablePropertyChange = mutablePropertyChange;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/mutable-data.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/properties-changed.html":
/*!*********************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/properties-changed.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/async.html */ \"./bower_components/polymer/lib/utils/async.html\");\n\n(function () {\n\n  'use strict';\n\n  /** @const {!AsyncInterface} */\n\n  var microtask = Polymer.Async.microTask;\n\n  /**\n   * Element class mixin that provides basic meta-programming for creating one\n   * or more property accessors (getter/setter pair) that enqueue an async\n   * (batched) `_propertiesChanged` callback.\n   *\n   * For basic usage of this mixin, call `MyClass.createProperties(props)`\n   * once at class definition time to create property accessors for properties\n   * named in props, implement `_propertiesChanged` to react as desired to\n   * property changes, and implement `static get observedAttributes()` and\n   * include lowercase versions of any property names that should be set from\n   * attributes. Last, call `this._enableProperties()` in the element's\n   * `connectedCallback` to enable the accessors.\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin for reacting to property changes from\n   *   generated property accessors.\n   */\n  Polymer.PropertiesChanged = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @extends {superClass}\n     * @implements {Polymer_PropertiesChanged}\n     * @unrestricted\n     */\n    var PropertiesChanged = function (_superClass) {\n      _inherits(PropertiesChanged, _superClass);\n\n      _createClass(PropertiesChanged, [{\n        key: '_createPropertyAccessor',\n        //eslint-disable-line no-unused-vars\n\n        /**\n         * Creates a setter/getter pair for the named property with its own\n         * local storage.  The getter returns the value in the local storage,\n         * and the setter calls `_setProperty`, which updates the local storage\n         * for the property and enqueues a `_propertiesChanged` callback.\n         *\n         * This method may be called on a prototype or an instance.  Calling\n         * this method may overwrite a property value that already exists on\n         * the prototype/instance by creating the accessor.\n         *\n         * @param {string} property Name of the property\n         * @param {boolean=} readOnly When true, no setter is created; the\n         *   protected `_setProperty` function must be used to set the property\n         * @return {void}\n         * @protected\n         */\n        value: function _createPropertyAccessor(property, readOnly) {\n          this._addPropertyToAttributeMap(property);\n          if (!this.hasOwnProperty('__dataHasAccessor')) {\n            this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n          }\n          if (!this.__dataHasAccessor[property]) {\n            this.__dataHasAccessor[property] = true;\n            this._definePropertyAccessor(property, readOnly);\n          }\n        }\n\n        /**\n         * Adds the given `property` to a map matching attribute names\n         * to property names, using `attributeNameForProperty`. This map is\n         * used when deserializing attribute values to properties.\n         *\n         * @param {string} property Name of the property\n         */\n\n      }, {\n        key: '_addPropertyToAttributeMap',\n        value: function _addPropertyToAttributeMap(property) {\n          if (!this.hasOwnProperty('__dataAttributes')) {\n            this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n          }\n          if (!this.__dataAttributes[property]) {\n            var attr = this.constructor.attributeNameForProperty(property);\n            this.__dataAttributes[attr] = property;\n          }\n        }\n\n        /**\n         * Defines a property accessor for the given property.\n         * @param {string} property Name of the property\n         * @param {boolean=} readOnly When true, no setter is created\n         * @return {void}\n         */\n\n      }, {\n        key: '_definePropertyAccessor',\n        value: function _definePropertyAccessor(property, readOnly) {\n          Object.defineProperty(this, property, {\n            /* eslint-disable valid-jsdoc */\n            /** @this {PropertiesChanged} */\n            get: function get() {\n              return this.__data[property];\n            },\n\n            /** @this {PropertiesChanged} */\n            set: readOnly ? function () {} : function (value) {\n              this._setProperty(property, value);\n            }\n            /* eslint-enable */\n          });\n        }\n      }], [{\n        key: 'createProperties',\n\n\n        /**\n         * Creates property accessors for the given property names.\n         * @param {!Object} props Object whose keys are names of accessors.\n         * @return {void}\n         * @protected\n         */\n        value: function createProperties(props) {\n          var proto = this.prototype;\n          for (var prop in props) {\n            // don't stomp an existing accessor\n            if (!(prop in proto)) {\n              proto._createPropertyAccessor(prop);\n            }\n          }\n        }\n\n        /**\n         * Returns an attribute name that corresponds to the given property.\n         * The attribute name is the lowercased property name. Override to\n         * customize this mapping.\n         * @param {string} property Property to convert\n         * @return {string} Attribute name corresponding to the given property.\n         *\n         * @protected\n         */\n\n      }, {\n        key: 'attributeNameForProperty',\n        value: function attributeNameForProperty(property) {\n          return property.toLowerCase();\n        }\n\n        /**\n         * Override point to provide a type to which to deserialize a value to\n         * a given property.\n         * @param {string} name Name of property\n         *\n         * @protected\n         */\n\n      }, {\n        key: 'typeForProperty',\n        value: function typeForProperty(name) {}\n      }]);\n\n      function PropertiesChanged() {\n        _classCallCheck(this, PropertiesChanged);\n\n        var _this = _possibleConstructorReturn(this, (PropertiesChanged.__proto__ || Object.getPrototypeOf(PropertiesChanged)).call(this));\n\n        _this.__dataEnabled = false;\n        _this.__dataReady = false;\n        _this.__dataInvalid = false;\n        _this.__data = {};\n        _this.__dataPending = null;\n        _this.__dataOld = null;\n        _this.__dataInstanceProps = null;\n        _this.__serializing = false;\n        _this._initializeProperties();\n        return _this;\n      }\n\n      /**\n       * Lifecycle callback called when properties are enabled via\n       * `_enableProperties`.\n       *\n       * Users may override this function to implement behavior that is\n       * dependent on the element having its property data initialized, e.g.\n       * from defaults (initialized from `constructor`, `_initializeProperties`),\n       * `attributeChangedCallback`, or values propagated from host e.g. via\n       * bindings.  `super.ready()` must be called to ensure the data system\n       * becomes enabled.\n       *\n       * @return {void}\n       * @public\n       */\n\n\n      _createClass(PropertiesChanged, [{\n        key: 'ready',\n        value: function ready() {\n          this.__dataReady = true;\n          this._flushProperties();\n        }\n\n        /**\n         * Initializes the local storage for property accessors.\n         *\n         * Provided as an override point for performing any setup work prior\n         * to initializing the property accessor system.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_initializeProperties',\n        value: function _initializeProperties() {\n          // Capture instance properties; these will be set into accessors\n          // during first flush. Don't set them here, since we want\n          // these to overwrite defaults/constructor assignments\n          for (var p in this.__dataHasAccessor) {\n            if (this.hasOwnProperty(p)) {\n              this.__dataInstanceProps = this.__dataInstanceProps || {};\n              this.__dataInstanceProps[p] = this[p];\n              delete this[p];\n            }\n          }\n        }\n\n        /**\n         * Called at ready time with bag of instance properties that overwrote\n         * accessors when the element upgraded.\n         *\n         * The default implementation sets these properties back into the\n         * setter at ready time.  This method is provided as an override\n         * point for customizing or providing more efficient initialization.\n         *\n         * @param {Object} props Bag of property values that were overwritten\n         *   when creating property accessors.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_initializeInstanceProperties',\n        value: function _initializeInstanceProperties(props) {\n          Object.assign(this, props);\n        }\n\n        /**\n         * Updates the local storage for a property (via `_setPendingProperty`)\n         * and enqueues a `_proeprtiesChanged` callback.\n         *\n         * @param {string} property Name of the property\n         * @param {*} value Value to set\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_setProperty',\n        value: function _setProperty(property, value) {\n          if (this._setPendingProperty(property, value)) {\n            this._invalidateProperties();\n          }\n        }\n\n        /**\n         * Returns the value for the given property.\n         * @param {string} property Name of property\n         * @return {*} Value for the given property\n         * @protected\n         */\n\n      }, {\n        key: '_getProperty',\n        value: function _getProperty(property) {\n          return this.__data[property];\n        }\n\n        /* eslint-disable no-unused-vars */\n        /**\n         * Updates the local storage for a property, records the previous value,\n         * and adds it to the set of \"pending changes\" that will be passed to the\n         * `_propertiesChanged` callback.  This method does not enqueue the\n         * `_propertiesChanged` callback.\n         *\n         * @param {string} property Name of the property\n         * @param {*} value Value to set\n         * @param {boolean=} ext Not used here; affordance for closure\n         * @return {boolean} Returns true if the property changed\n         * @protected\n         */\n\n      }, {\n        key: '_setPendingProperty',\n        value: function _setPendingProperty(property, value, ext) {\n          var old = this.__data[property];\n          var changed = this._shouldPropertyChange(property, value, old);\n          if (changed) {\n            if (!this.__dataPending) {\n              this.__dataPending = {};\n              this.__dataOld = {};\n            }\n            // Ensure old is captured from the last turn\n            if (this.__dataOld && !(property in this.__dataOld)) {\n              this.__dataOld[property] = old;\n            }\n            this.__data[property] = value;\n            this.__dataPending[property] = value;\n          }\n          return changed;\n        }\n        /* eslint-enable */\n\n        /**\n         * Marks the properties as invalid, and enqueues an async\n         * `_propertiesChanged` callback.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_invalidateProperties',\n        value: function _invalidateProperties() {\n          var _this2 = this;\n\n          if (!this.__dataInvalid && this.__dataReady) {\n            this.__dataInvalid = true;\n            microtask.run(function () {\n              if (_this2.__dataInvalid) {\n                _this2.__dataInvalid = false;\n                _this2._flushProperties();\n              }\n            });\n          }\n        }\n\n        /**\n         * Call to enable property accessor processing. Before this method is\n         * called accessor values will be set but side effects are\n         * queued. When called, any pending side effects occur immediately.\n         * For elements, generally `connectedCallback` is a normal spot to do so.\n         * It is safe to call this method multiple times as it only turns on\n         * property accessors once.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_enableProperties',\n        value: function _enableProperties() {\n          if (!this.__dataEnabled) {\n            this.__dataEnabled = true;\n            if (this.__dataInstanceProps) {\n              this._initializeInstanceProperties(this.__dataInstanceProps);\n              this.__dataInstanceProps = null;\n            }\n            this.ready();\n          }\n        }\n\n        /**\n         * Calls the `_propertiesChanged` callback with the current set of\n         * pending changes (and old values recorded when pending changes were\n         * set), and resets the pending set of changes. Generally, this method\n         * should not be called in user code.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_flushProperties',\n        value: function _flushProperties() {\n          if (this.__dataPending && this.__dataOld) {\n            var changedProps = this.__dataPending;\n            this.__dataPending = null;\n            this._propertiesChanged(this.__data, changedProps, this.__dataOld);\n          }\n        }\n\n        /**\n         * Callback called when any properties with accessors created via\n         * `_createPropertyAccessor` have been set.\n         *\n         * @param {!Object} currentProps Bag of all current accessor values\n         * @param {!Object} changedProps Bag of properties changed since the last\n         *   call to `_propertiesChanged`\n         * @param {!Object} oldProps Bag of previous values for each property\n         *   in `changedProps`\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_propertiesChanged',\n        value: function _propertiesChanged(currentProps, changedProps, oldProps) {} // eslint-disable-line no-unused-vars\n\n\n        /**\n         * Method called to determine whether a property value should be\n         * considered as a change and cause the `_propertiesChanged` callback\n         * to be enqueued.\n         *\n         * The default implementation returns `true` if a strict equality\n         * check fails. The method always returns false for `NaN`.\n         *\n         * Override this method to e.g. provide stricter checking for\n         * Objects/Arrays when using immutable patterns.\n         *\n         * @param {string} property Property name\n         * @param {*} value New property value\n         * @param {*} old Previous property value\n         * @return {boolean} Whether the property should be considered a change\n         *   and enqueue a `_proeprtiesChanged` callback\n         * @protected\n         */\n\n      }, {\n        key: '_shouldPropertyChange',\n        value: function _shouldPropertyChange(property, value, old) {\n          return (\n            // Strict equality check\n            old !== value && (\n            // This ensures (old==NaN, value==NaN) always returns false\n            old === old || value === value)\n          );\n        }\n\n        /**\n         * Implements native Custom Elements `attributeChangedCallback` to\n         * set an attribute value to a property via `_attributeToProperty`.\n         *\n         * @param {string} name Name of attribute that changed\n         * @param {?string} old Old attribute value\n         * @param {?string} value New attribute value\n         * @return {void}\n         * @suppress {missingProperties} Super may or may not implement the callback\n         */\n\n      }, {\n        key: 'attributeChangedCallback',\n        value: function attributeChangedCallback(name, old, value) {\n          if (old !== value) {\n            this._attributeToProperty(name, value);\n          }\n          if (_get(PropertiesChanged.prototype.__proto__ || Object.getPrototypeOf(PropertiesChanged.prototype), 'attributeChangedCallback', this)) {\n            _get(PropertiesChanged.prototype.__proto__ || Object.getPrototypeOf(PropertiesChanged.prototype), 'attributeChangedCallback', this).call(this, name, old, value);\n          }\n        }\n\n        /**\n         * Deserializes an attribute to its associated property.\n         *\n         * This method calls the `_deserializeValue` method to convert the string to\n         * a typed value.\n         *\n         * @param {string} attribute Name of attribute to deserialize.\n         * @param {?string} value of the attribute.\n         * @param {*=} type type to deserialize to, defaults to the value\n         * returned from `typeForProperty`\n         * @return {void}\n         */\n\n      }, {\n        key: '_attributeToProperty',\n        value: function _attributeToProperty(attribute, value, type) {\n          if (!this.__serializing) {\n            var map = this.__dataAttributes;\n            var property = map && map[attribute] || attribute;\n            this[property] = this._deserializeValue(value, type || this.constructor.typeForProperty(property));\n          }\n        }\n\n        /**\n         * Serializes a property to its associated attribute.\n         *\n         * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n         *\n         * @param {string} property Property name to reflect.\n         * @param {string=} attribute Attribute name to reflect to.\n         * @param {*=} value Property value to refect.\n         * @return {void}\n         */\n\n      }, {\n        key: '_propertyToAttribute',\n        value: function _propertyToAttribute(property, attribute, value) {\n          this.__serializing = true;\n          value = arguments.length < 3 ? this[property] : value;\n          this._valueToNodeAttribute( /** @type {!HTMLElement} */this, value, attribute || this.constructor.attributeNameForProperty(property));\n          this.__serializing = false;\n        }\n\n        /**\n         * Sets a typed value to an HTML attribute on a node.\n         *\n         * This method calls the `_serializeValue` method to convert the typed\n         * value to a string.  If the `_serializeValue` method returns `undefined`,\n         * the attribute will be removed (this is the default for boolean\n         * type `false`).\n         *\n         * @param {Element} node Element to set attribute to.\n         * @param {*} value Value to serialize.\n         * @param {string} attribute Attribute name to serialize to.\n         * @return {void}\n         */\n\n      }, {\n        key: '_valueToNodeAttribute',\n        value: function _valueToNodeAttribute(node, value, attribute) {\n          var str = this._serializeValue(value);\n          if (str === undefined) {\n            node.removeAttribute(attribute);\n          } else {\n            node.setAttribute(attribute, str);\n          }\n        }\n\n        /**\n         * Converts a typed JavaScript value to a string.\n         *\n         * This method is called when setting JS property values to\n         * HTML attributes.  Users may override this method to provide\n         * serialization for custom types.\n         *\n         * @param {*} value Property value to serialize.\n         * @return {string | undefined} String serialized from the provided\n         * property  value.\n         */\n\n      }, {\n        key: '_serializeValue',\n        value: function _serializeValue(value) {\n          switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n            case 'boolean':\n              return value ? '' : undefined;\n            default:\n              return value != null ? value.toString() : undefined;\n          }\n        }\n\n        /**\n         * Converts a string to a typed JavaScript value.\n         *\n         * This method is called when reading HTML attribute values to\n         * JS properties.  Users may override this method to provide\n         * deserialization for custom `type`s. Types for `Boolean`, `String`,\n         * and `Number` convert attributes to the expected types.\n         *\n         * @param {?string} value Value to deserialize.\n         * @param {*=} type Type to deserialize the string to.\n         * @return {*} Typed value deserialized from the provided string.\n         */\n\n      }, {\n        key: '_deserializeValue',\n        value: function _deserializeValue(value, type) {\n          switch (type) {\n            case Boolean:\n              return value !== null;\n            case Number:\n              return Number(value);\n            default:\n              return value;\n          }\n        }\n      }]);\n\n      return PropertiesChanged;\n    }(superClass);\n\n    return PropertiesChanged;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/properties-changed.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/properties-mixin.html":
/*!*******************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/properties-mixin.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../mixins/properties-changed.html */ \"./bower_components/polymer/lib/mixins/properties-changed.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Creates a copy of `props` with each property normalized such that\n   * upgraded it is an object with at least a type property { type: Type}.\n   *\n   * @param {Object} props Properties to normalize\n   * @return {Object} Copy of input `props` with normalized properties that\n   * are in the form {type: Type}\n   * @private\n   */\n\n  function normalizeProperties(props) {\n    var output = {};\n    for (var p in props) {\n      var o = props[p];\n      output[p] = typeof o === 'function' ? { type: o } : o;\n    }\n    return output;\n  }\n\n  /**\n   * Mixin that provides a minimal starting point to using the PropertiesChanged\n   * mixin by providing a mechanism to declare properties in a static\n   * getter (e.g. static get properties() { return { foo: String } }). Changes\n   * are reported via the `_propertiesChanged` method.\n   *\n   * This mixin provides no specific support for rendering. Users are expected\n   * to create a ShadowRoot and put content into it and update it in whatever\n   * way makes sense. This can be done in reaction to properties changing by\n   * implementing `_propertiesChanged`.\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.PropertiesChanged\n   * @memberof Polymer\n   * @summary Mixin that provides a minimal starting point for using\n   * the PropertiesChanged mixin by providing a declarative `properties` object.\n   */\n  Polymer.PropertiesMixin = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @constructor\n     * @extends {superClass}\n     * @implements {Polymer_PropertiesChanged}\n     */\n    var base = Polymer.PropertiesChanged(superClass);\n\n    /**\n     * Returns the super class constructor for the given class, if it is an\n     * instance of the PropertiesMixin.\n     *\n     * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n     * @return {PropertiesMixinConstructor} Super class constructor\n     */\n    function superPropertiesClass(constructor) {\n      var superCtor = Object.getPrototypeOf(constructor);\n\n      // Note, the `PropertiesMixin` class below only refers to the class\n      // generated by this call to the mixin; the instanceof test only works\n      // because the mixin is deduped and guaranteed only to apply once, hence\n      // all constructors in a proto chain will see the same `PropertiesMixin`\n      return superCtor.prototype instanceof PropertiesMixin ?\n      /** @type {PropertiesMixinConstructor} */superCtor : null;\n    }\n\n    /**\n     * Returns a memoized version of the `properties` object for the\n     * given class. Properties not in object format are converted to at\n     * least {type}.\n     *\n     * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n     * @return {Object} Memoized properties object\n     */\n    function ownProperties(constructor) {\n      if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n        var props = null;\n\n        if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor)) && constructor.properties) {\n          props = normalizeProperties(constructor.properties);\n        }\n\n        constructor.__ownProperties = props;\n      }\n      return constructor.__ownProperties;\n    }\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @extends {base}\n     * @implements {Polymer_PropertiesMixin}\n     * @unrestricted\n     */\n\n    var PropertiesMixin = function (_base) {\n      _inherits(PropertiesMixin, _base);\n\n      function PropertiesMixin() {\n        _classCallCheck(this, PropertiesMixin);\n\n        return _possibleConstructorReturn(this, (PropertiesMixin.__proto__ || Object.getPrototypeOf(PropertiesMixin)).apply(this, arguments));\n      }\n\n      _createClass(PropertiesMixin, [{\n        key: '_initializeProperties',\n\n\n        /**\n         * Overrides `PropertiesChanged` method and adds a call to\n         * `finalize` which lazily configures the element's property accessors.\n         * @override\n         * @return {void}\n         */\n        value: function _initializeProperties() {\n          this.constructor.finalize();\n          _get(PropertiesMixin.prototype.__proto__ || Object.getPrototypeOf(PropertiesMixin.prototype), '_initializeProperties', this).call(this);\n        }\n\n        /**\n         * Called when the element is added to a document.\n         * Calls `_enableProperties` to turn on property system from\n         * `PropertiesChanged`.\n         * @suppress {missingProperties} Super may or may not implement the callback\n         * @return {void}\n         */\n\n      }, {\n        key: 'connectedCallback',\n        value: function connectedCallback() {\n          if (_get(PropertiesMixin.prototype.__proto__ || Object.getPrototypeOf(PropertiesMixin.prototype), 'connectedCallback', this)) {\n            _get(PropertiesMixin.prototype.__proto__ || Object.getPrototypeOf(PropertiesMixin.prototype), 'connectedCallback', this).call(this);\n          }\n          this._enableProperties();\n        }\n\n        /**\n         * Called when the element is removed from a document\n         * @suppress {missingProperties} Super may or may not implement the callback\n         * @return {void}\n         */\n\n      }, {\n        key: 'disconnectedCallback',\n        value: function disconnectedCallback() {\n          if (_get(PropertiesMixin.prototype.__proto__ || Object.getPrototypeOf(PropertiesMixin.prototype), 'disconnectedCallback', this)) {\n            _get(PropertiesMixin.prototype.__proto__ || Object.getPrototypeOf(PropertiesMixin.prototype), 'disconnectedCallback', this).call(this);\n          }\n        }\n      }], [{\n        key: 'finalize',\n\n\n        /**\n         * Finalizes an element definition, including ensuring any super classes\n         * are also finalized. This includes ensuring property\n         * accessors exist on the element prototype. This method calls\n         * `_finalizeClass` to finalize each constructor in the prototype chain.\n         * @return {void}\n         */\n        value: function finalize() {\n          if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n            var superCtor = superPropertiesClass( /** @type {PropertiesMixinConstructor} */this);\n            if (superCtor) {\n              superCtor.finalize();\n            }\n            this.__finalized = true;\n            this._finalizeClass();\n          }\n        }\n\n        /**\n         * Finalize an element class. This includes ensuring property\n         * accessors exist on the element prototype. This method is called by\n         * `finalize` and finalizes the class constructor.\n         *\n         * @protected\n         */\n\n      }, {\n        key: '_finalizeClass',\n        value: function _finalizeClass() {\n          var props = ownProperties( /** @type {PropertiesMixinConstructor} */this);\n          if (props) {\n            this.createProperties(props);\n          }\n        }\n\n        /**\n         * Returns a memoized version of all properties, including those inherited\n         * from super classes. Properties not in object format are converted to\n         * at least {type}.\n         *\n         * @return {Object} Object containing properties for this class\n         * @protected\n         */\n\n      }, {\n        key: 'typeForProperty',\n\n\n        /**\n         * Overrides `PropertiesChanged` method to return type specified in the\n         * static `properties` object for the given property.\n         * @param {string} name Name of property\n         * @return {*} Type to which to deserialize attribute\n         *\n         * @protected\n         */\n        value: function typeForProperty(name) {\n          var info = this._properties[name];\n          return info && info.type;\n        }\n      }, {\n        key: 'observedAttributes',\n\n\n        /**\n         * Implements standard custom elements getter to observes the attributes\n         * listed in `properties`.\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n        get: function get() {\n          var _this2 = this;\n\n          var props = this._properties;\n          return props ? Object.keys(props).map(function (p) {\n            return _this2.attributeNameForProperty(p);\n          }) : [];\n        }\n      }, {\n        key: '_properties',\n        get: function get() {\n          if (!this.hasOwnProperty(JSCompiler_renameProperty('__properties', this))) {\n            var superCtor = superPropertiesClass( /** @type {PropertiesMixinConstructor} */this);\n            this.__properties = Object.assign({}, superCtor && superCtor._properties, ownProperties( /** @type {PropertiesMixinConstructor} */this));\n          }\n          return this.__properties;\n        }\n      }]);\n\n      return PropertiesMixin;\n    }(base);\n\n    return PropertiesMixin;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/properties-mixin.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/property-accessors.html":
/*!*********************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/property-accessors.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/case-map.html */ \"./bower_components/polymer/lib/utils/case-map.html\");\n\n__webpack_require__(/*! ./properties-changed.html */ \"./bower_components/polymer/lib/mixins/properties-changed.html\");\n\n(function () {\n\n  'use strict';\n\n  var caseMap = Polymer.CaseMap;\n\n  // Save map of native properties; this forms a blacklist or properties\n  // that won't have their values \"saved\" by `saveAccessorValue`, since\n  // reading from an HTMLElement accessor from the context of a prototype throws\n  var nativeProperties = {};\n  var proto = HTMLElement.prototype;\n  while (proto) {\n    var props = Object.getOwnPropertyNames(proto);\n    for (var i = 0; i < props.length; i++) {\n      nativeProperties[props[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  /**\n   * Used to save the value of a property that will be overridden with\n   * an accessor. If the `model` is a prototype, the values will be saved\n   * in `__dataProto`, and it's up to the user (or downstream mixin) to\n   * decide how/when to set these values back into the accessors.\n   * If `model` is already an instance (it has a `__data` property), then\n   * the value will be set as a pending property, meaning the user should\n   * call `_invalidateProperties` or `_flushProperties` to take effect\n   *\n   * @param {Object} model Prototype or instance\n   * @param {string} property Name of property\n   * @return {void}\n   * @private\n   */\n  function saveAccessorValue(model, property) {\n    // Don't read/store value for any native properties since they could throw\n    if (!nativeProperties[property]) {\n      var value = model[property];\n      if (value !== undefined) {\n        if (model.__data) {\n          // Adding accessor to instance; update the property\n          // It is the user's responsibility to call _flushProperties\n          model._setPendingProperty(property, value);\n        } else {\n          // Adding accessor to proto; save proto's value for instance-time use\n          if (!model.__dataProto) {\n            model.__dataProto = {};\n          } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n            model.__dataProto = Object.create(model.__dataProto);\n          }\n          model.__dataProto[property] = value;\n        }\n      }\n    }\n  }\n\n  /**\n   * Element class mixin that provides basic meta-programming for creating one\n   * or more property accessors (getter/setter pair) that enqueue an async\n   * (batched) `_propertiesChanged` callback.\n   *\n   * For basic usage of this mixin:\n   * \n   * -   Declare attributes to observe via the standard `static get observedAttributes()`. Use\n   *     `dash-case` attribute names to represent `camelCase` property names. \n   * -   Implement the `_propertiesChanged` callback on the class.\n   * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to generate \n   *     property accessors for each observed attribute. This must be called before the first \n   *     instance is created, for example, by calling it before calling `customElements.define`.\n   *     It can also be called lazily from the element's `constructor`, as long as it's guarded so\n   *     that the call is only made once, when the first instance is created.\n   * -   Call `this._enableProperties()` in the element's `connectedCallback` to enable \n   *     the accessors.\n   *\n   * Any `observedAttributes` will automatically be\n   * deserialized via `attributeChangedCallback` and set to the associated\n   * property using `dash-case`-to-`camelCase` convention.\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.PropertiesChanged\n   * @memberof Polymer\n   * @summary Element class mixin for reacting to property changes from\n   *   generated property accessors.\n   */\n  Polymer.PropertyAccessors = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @constructor\n     * @extends {superClass}\n     * @implements {Polymer_PropertiesChanged}\n     * @unrestricted\n     */\n    var base = Polymer.PropertiesChanged(superClass);\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_PropertyAccessors}\n     * @extends {base}\n     * @unrestricted\n     */\n\n    var PropertyAccessors = function (_base) {\n      _inherits(PropertyAccessors, _base);\n\n      function PropertyAccessors() {\n        _classCallCheck(this, PropertyAccessors);\n\n        return _possibleConstructorReturn(this, (PropertyAccessors.__proto__ || Object.getPrototypeOf(PropertyAccessors)).apply(this, arguments));\n      }\n\n      _createClass(PropertyAccessors, [{\n        key: '_initializeProperties',\n\n\n        /**\n         * Overrides PropertiesChanged implementation to initialize values for\n         * accessors created for values that already existed on the element\n         * prototype.\n         *\n         * @return {void}\n         * @protected\n         */\n        value: function _initializeProperties() {\n          if (this.__dataProto) {\n            this._initializeProtoProperties(this.__dataProto);\n            this.__dataProto = null;\n          }\n          _get(PropertyAccessors.prototype.__proto__ || Object.getPrototypeOf(PropertyAccessors.prototype), '_initializeProperties', this).call(this);\n        }\n\n        /**\n         * Called at instance time with bag of properties that were overwritten\n         * by accessors on the prototype when accessors were created.\n         *\n         * The default implementation sets these properties back into the\n         * setter at instance time.  This method is provided as an override\n         * point for customizing or providing more efficient initialization.\n         *\n         * @param {Object} props Bag of property values that were overwritten\n         *   when creating property accessors.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_initializeProtoProperties',\n        value: function _initializeProtoProperties(props) {\n          for (var p in props) {\n            this._setProperty(p, props[p]);\n          }\n        }\n\n        /**\n         * Ensures the element has the given attribute. If it does not,\n         * assigns the given value to the attribute.\n         *\n         * @suppress {invalidCasts} Closure can't figure out `this` is infact an element\n         *\n         * @param {string} attribute Name of attribute to ensure is set.\n         * @param {string} value of the attribute.\n         * @return {void}\n         */\n\n      }, {\n        key: '_ensureAttribute',\n        value: function _ensureAttribute(attribute, value) {\n          var el = /** @type {!HTMLElement} */this;\n          if (!el.hasAttribute(attribute)) {\n            this._valueToNodeAttribute(el, value, attribute);\n          }\n        }\n\n        /**\n         * Overrides PropertiesChanged implemention to serialize objects as JSON.\n         *\n         * @param {*} value Property value to serialize.\n         * @return {string | undefined} String serialized from the provided property value.\n         */\n\n      }, {\n        key: '_serializeValue',\n        value: function _serializeValue(value) {\n          /* eslint-disable no-fallthrough */\n          switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n            case 'object':\n              if (value instanceof Date) {\n                return value.toString();\n              } else if (value) {\n                try {\n                  return JSON.stringify(value);\n                } catch (x) {\n                  return '';\n                }\n              }\n\n            default:\n              return _get(PropertyAccessors.prototype.__proto__ || Object.getPrototypeOf(PropertyAccessors.prototype), '_serializeValue', this).call(this, value);\n          }\n        }\n\n        /**\n         * Converts a string to a typed JavaScript value.\n         *\n         * This method is called by Polymer when reading HTML attribute values to\n         * JS properties.  Users may override this method on Polymer element\n         * prototypes to provide deserialization for custom `type`s.  Note,\n         * the `type` argument is the value of the `type` field provided in the\n         * `properties` configuration object for a given property, and is\n         * by convention the constructor for the type to deserialize.\n         *\n         *\n         * @param {?string} value Attribute value to deserialize.\n         * @param {*=} type Type to deserialize the string to.\n         * @return {*} Typed value deserialized from the provided string.\n         */\n\n      }, {\n        key: '_deserializeValue',\n        value: function _deserializeValue(value, type) {\n          /**\n           * @type {*}\n           */\n          var outValue = void 0;\n          switch (type) {\n            case Object:\n              try {\n                outValue = JSON.parse( /** @type {string} */value);\n              } catch (x) {\n                // allow non-JSON literals like Strings and Numbers\n                outValue = value;\n              }\n              break;\n            case Array:\n              try {\n                outValue = JSON.parse( /** @type {string} */value);\n              } catch (x) {\n                outValue = null;\n                console.warn('Polymer::Attributes: couldn\\'t decode Array as JSON: ' + value);\n              }\n              break;\n            case Date:\n              outValue = isNaN(value) ? String(value) : Number(value);\n              outValue = new Date(outValue);\n              break;\n            default:\n              outValue = _get(PropertyAccessors.prototype.__proto__ || Object.getPrototypeOf(PropertyAccessors.prototype), '_deserializeValue', this).call(this, value, type);\n              break;\n          }\n          return outValue;\n        }\n        /* eslint-enable no-fallthrough */\n\n        /**\n         * Overrides PropertiesChanged implementation to save existing prototype\n         * property value so that it can be reset.\n         * @param {string} property Name of the property\n         * @param {boolean=} readOnly When true, no setter is created\n         *\n         * When calling on a prototype, any overwritten values are saved in\n         * `__dataProto`, and it is up to the subclasser to decide how/when\n         * to set those properties back into the accessor.  When calling on an\n         * instance, the overwritten value is set via `_setPendingProperty`,\n         * and the user should call `_invalidateProperties` or `_flushProperties`\n         * for the values to take effect.\n         * @protected\n         * @return {void}\n         */\n\n      }, {\n        key: '_definePropertyAccessor',\n        value: function _definePropertyAccessor(property, readOnly) {\n          saveAccessorValue(this, property);\n          _get(PropertyAccessors.prototype.__proto__ || Object.getPrototypeOf(PropertyAccessors.prototype), '_definePropertyAccessor', this).call(this, property, readOnly);\n        }\n\n        /**\n         * Returns true if this library created an accessor for the given property.\n         *\n         * @param {string} property Property name\n         * @return {boolean} True if an accessor was created\n         */\n\n      }, {\n        key: '_hasAccessor',\n        value: function _hasAccessor(property) {\n          return this.__dataHasAccessor && this.__dataHasAccessor[property];\n        }\n\n        /**\n         * Returns true if the specified property has a pending change.\n         *\n         * @param {string} prop Property name\n         * @return {boolean} True if property has a pending change\n         * @protected\n         */\n\n      }, {\n        key: '_isPropertyPending',\n        value: function _isPropertyPending(prop) {\n          return Boolean(this.__dataPending && prop in this.__dataPending);\n        }\n      }], [{\n        key: 'createPropertiesForAttributes',\n\n\n        /**\n         * Generates property accessors for all attributes in the standard\n         * static `observedAttributes` array.\n         *\n         * Attribute names are mapped to property names using the `dash-case` to\n         * `camelCase` convention\n         *\n         * @return {void}\n         */\n        value: function createPropertiesForAttributes() {\n          var a$ = this.observedAttributes;\n          for (var _i = 0; _i < a$.length; _i++) {\n            this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[_i]));\n          }\n        }\n\n        /**\n         * Returns an attribute name that corresponds to the given property.\n         * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n         * @param {string} property Property to convert\n         * @return {string} Attribute name corresponding to the given property.\n         *\n         * @protected\n         */\n\n      }, {\n        key: 'attributeNameForProperty',\n        value: function attributeNameForProperty(property) {\n          return caseMap.camelToDashCase(property);\n        }\n      }]);\n\n      return PropertyAccessors;\n    }(base);\n\n    return PropertyAccessors;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/property-accessors.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/property-effects.html":
/*!*******************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/property-effects.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ../utils/path.html */ \"./bower_components/polymer/lib/utils/path.html\");\n\n__webpack_require__(/*! ../utils/case-map.html */ \"./bower_components/polymer/lib/utils/case-map.html\");\n\n__webpack_require__(/*! ./property-accessors.html */ \"./bower_components/polymer/lib/mixins/property-accessors.html\");\n\n__webpack_require__(/*! ./template-stamp.html */ \"./bower_components/polymer/lib/mixins/template-stamp.html\");\n\n(function () {\n\n  'use strict';\n\n  /** @const {Object} */\n\n  var CaseMap = Polymer.CaseMap;\n\n  // Monotonically increasing unique ID used for de-duping effects triggered\n  // from multiple properties in the same turn\n  var dedupeId = 0;\n\n  /**\n   * Property effect types; effects are stored on the prototype using these keys\n   * @enum {string}\n   */\n  var TYPES = {\n    COMPUTE: '__computeEffects',\n    REFLECT: '__reflectEffects',\n    NOTIFY: '__notifyEffects',\n    PROPAGATE: '__propagateEffects',\n    OBSERVE: '__observeEffects',\n    READ_ONLY: '__readOnly'\n  };\n\n  /**\n   * @typedef {{\n   * name: (string | undefined),\n   * structured: (boolean | undefined),\n   * wildcard: (boolean | undefined)\n   * }}\n   */\n  var DataTrigger = void 0; //eslint-disable-line no-unused-vars\n\n  /**\n   * @typedef {{\n   * info: ?,\n   * trigger: (!DataTrigger | undefined),\n   * fn: (!Function | undefined)\n   * }}\n   */\n  var DataEffect = void 0; //eslint-disable-line no-unused-vars\n\n  var PropertyEffectsType = void 0; //eslint-disable-line no-unused-vars\n\n  /**\n   * Ensures that the model has an own-property map of effects for the given type.\n   * The model may be a prototype or an instance.\n   *\n   * Property effects are stored as arrays of effects by property in a map,\n   * by named type on the model. e.g.\n   *\n   *   __computeEffects: {\n   *     foo: [ ... ],\n   *     bar: [ ... ]\n   *   }\n   *\n   * If the model does not yet have an effect map for the type, one is created\n   * and returned.  If it does, but it is not an own property (i.e. the\n   * prototype had effects), the the map is deeply cloned and the copy is\n   * set on the model and returned, ready for new effects to be added.\n   *\n   * @param {Object} model Prototype or instance\n   * @param {string} type Property effect type\n   * @return {Object} The own-property map of effects for the given type\n   * @private\n   */\n  function ensureOwnEffectMap(model, type) {\n    var effects = model[type];\n    if (!effects) {\n      effects = model[type] = {};\n    } else if (!model.hasOwnProperty(type)) {\n      effects = model[type] = Object.create(model[type]);\n      for (var p in effects) {\n        var protoFx = effects[p];\n        var instFx = effects[p] = Array(protoFx.length);\n        for (var i = 0; i < protoFx.length; i++) {\n          instFx[i] = protoFx[i];\n        }\n      }\n    }\n    return effects;\n  }\n\n  // -- effects ----------------------------------------------\n\n  /**\n   * Runs all effects of a given type for the given set of property changes\n   * on an instance.\n   *\n   * @param {!PropertyEffectsType} inst The instance with effects to run\n   * @param {Object} effects Object map of property-to-Array of effects\n   * @param {Object} props Bag of current property changes\n   * @param {Object=} oldProps Bag of previous values for changed properties\n   * @param {boolean=} hasPaths True with `props` contains one or more paths\n   * @param {*=} extraArgs Additional metadata to pass to effect function\n   * @return {boolean} True if an effect ran for this property\n   * @private\n   */\n  function runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n    if (effects) {\n      var ran = false;\n      var id = dedupeId++;\n      for (var prop in props) {\n        if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n          ran = true;\n        }\n      }\n      return ran;\n    }\n    return false;\n  }\n\n  /**\n   * Runs a list of effects for a given property.\n   *\n   * @param {!PropertyEffectsType} inst The instance with effects to run\n   * @param {Object} effects Object map of property-to-Array of effects\n   * @param {number} dedupeId Counter used for de-duping effects\n   * @param {string} prop Name of changed property\n   * @param {*} props Changed properties\n   * @param {*} oldProps Old properties\n   * @param {boolean=} hasPaths True with `props` contains one or more paths\n   * @param {*=} extraArgs Additional metadata to pass to effect function\n   * @return {boolean} True if an effect ran for this property\n   * @private\n   */\n  function runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n    var ran = false;\n    var rootProperty = hasPaths ? Polymer.Path.root(prop) : prop;\n    var fxs = effects[rootProperty];\n    if (fxs) {\n      for (var i = 0, l = fxs.length, fx; i < l && (fx = fxs[i]); i++) {\n        if ((!fx.info || fx.info.lastRun !== dedupeId) && (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n          if (fx.info) {\n            fx.info.lastRun = dedupeId;\n          }\n          fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n          ran = true;\n        }\n      }\n    }\n    return ran;\n  }\n\n  /**\n   * Determines whether a property/path that has changed matches the trigger\n   * criteria for an effect.  A trigger is a descriptor with the following\n   * structure, which matches the descriptors returned from `parseArg`.\n   * e.g. for `foo.bar.*`:\n   * ```\n   * trigger: {\n   *   name: 'a.b',\n   *   structured: true,\n   *   wildcard: true\n   * }\n   * ```\n   * If no trigger is given, the path is deemed to match.\n   *\n   * @param {string} path Path or property that changed\n   * @param {DataTrigger} trigger Descriptor\n   * @return {boolean} Whether the path matched the trigger\n   */\n  function pathMatchesTrigger(path, trigger) {\n    if (trigger) {\n      var triggerPath = trigger.name;\n      return triggerPath == path || trigger.structured && Polymer.Path.isAncestor(triggerPath, path) || trigger.wildcard && Polymer.Path.isDescendant(triggerPath, path);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Implements the \"observer\" effect.\n   *\n   * Calls the method with `info.methodName` on the instance, passing the\n   * new and old values.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} property Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @return {void}\n   * @private\n   */\n  function runObserverEffect(inst, property, props, oldProps, info) {\n    var fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n    var changedProp = info.property;\n    if (fn) {\n      fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n    } else if (!info.dynamicFn) {\n      console.warn('observer method `' + info.method + '` not defined');\n    }\n  }\n\n  /**\n   * Runs \"notify\" effects for a set of changed properties.\n   *\n   * This method differs from the generic `runEffects` method in that it\n   * will dispatch path notification events in the case that the property\n   * changed was a path and the root property for that path didn't have a\n   * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n   * `notify: true` to ensure object sub-property notifications were\n   * sent.\n   *\n   * @param {!PropertyEffectsType} inst The instance with effects to run\n   * @param {Object} notifyProps Bag of properties to notify\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {boolean} hasPaths True with `props` contains one or more paths\n   * @return {void}\n   * @private\n   */\n  function runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n    // Notify\n    var fxs = inst[TYPES.NOTIFY];\n    var notified = void 0;\n    var id = dedupeId++;\n    // Try normal notify effects; if none, fall back to try path notification\n    for (var prop in notifyProps) {\n      if (notifyProps[prop]) {\n        if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n          notified = true;\n        } else if (hasPaths && notifyPath(inst, prop, props)) {\n          notified = true;\n        }\n      }\n    }\n    // Flush host if we actually notified and host was batching\n    // And the host has already initialized clients; this prevents\n    // an issue with a host observing data changes before clients are ready.\n    var host = void 0;\n    if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n      host._invalidateProperties();\n    }\n  }\n\n  /**\n   * Dispatches {property}-changed events with path information in the detail\n   * object to indicate a sub-path of the property was changed.\n   *\n   * @param {!PropertyEffectsType} inst The element from which to fire the event\n   * @param {string} path The path that was changed\n   * @param {Object} props Bag of current property changes\n   * @return {boolean} Returns true if the path was notified\n   * @private\n   */\n  function notifyPath(inst, path, props) {\n    var rootProperty = Polymer.Path.root(path);\n    if (rootProperty !== path) {\n      var eventName = Polymer.CaseMap.camelToDashCase(rootProperty) + '-changed';\n      dispatchNotifyEvent(inst, eventName, props[path], path);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Dispatches {property}-changed events to indicate a property (or path)\n   * changed.\n   *\n   * @param {!PropertyEffectsType} inst The element from which to fire the event\n   * @param {string} eventName The name of the event to send ('{property}-changed')\n   * @param {*} value The value of the changed property\n   * @param {string | null | undefined} path If a sub-path of this property changed, the path\n   *   that changed (optional).\n   * @return {void}\n   * @private\n   * @suppress {invalidCasts}\n   */\n  function dispatchNotifyEvent(inst, eventName, value, path) {\n    var detail = {\n      value: value,\n      queueProperty: true\n    };\n    if (path) {\n      detail.path = path;\n    }\n    /** @type {!HTMLElement} */inst.dispatchEvent(new CustomEvent(eventName, { detail: detail }));\n  }\n\n  /**\n   * Implements the \"notify\" effect.\n   *\n   * Dispatches a non-bubbling event named `info.eventName` on the instance\n   * with a detail object containing the new `value`.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} property Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @param {boolean} hasPaths True with `props` contains one or more paths\n   * @return {void}\n   * @private\n   */\n  function runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n    var rootProperty = hasPaths ? Polymer.Path.root(property) : property;\n    var path = rootProperty != property ? property : null;\n    var value = path ? Polymer.Path.get(inst, path) : inst.__data[property];\n    if (path && value === undefined) {\n      value = props[property]; // specifically for .splices\n    }\n    dispatchNotifyEvent(inst, info.eventName, value, path);\n  }\n\n  /**\n   * Handler function for 2-way notification events. Receives context\n   * information captured in the `addNotifyListener` closure from the\n   * `__notifyListeners` metadata.\n   *\n   * Sets the value of the notified property to the host property or path.  If\n   * the event contained path information, translate that path to the host\n   * scope's name for that path first.\n   *\n   * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n   * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n   * @param {string} fromProp Child element property that was bound\n   * @param {string} toPath Host property/path that was bound\n   * @param {boolean} negate Whether the binding was negated\n   * @return {void}\n   * @private\n   */\n  function handleNotification(event, inst, fromProp, toPath, negate) {\n    var value = void 0;\n    var detail = /** @type {Object} */event.detail;\n    var fromPath = detail && detail.path;\n    if (fromPath) {\n      toPath = Polymer.Path.translate(fromProp, toPath, fromPath);\n      value = detail && detail.value;\n    } else {\n      value = event.target[fromProp];\n    }\n    value = negate ? !value : value;\n    if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n      if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath)) && (!detail || !detail.queueProperty)) {\n        inst._invalidateProperties();\n      }\n    }\n  }\n\n  /**\n   * Implements the \"reflect\" effect.\n   *\n   * Sets the attribute named `info.attrName` to the given property value.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} property Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @return {void}\n   * @private\n   */\n  function runReflectEffect(inst, property, props, oldProps, info) {\n    var value = inst.__data[property];\n    if (Polymer.sanitizeDOMValue) {\n      value = Polymer.sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */inst);\n    }\n    inst._propertyToAttribute(property, info.attrName, value);\n  }\n\n  /**\n   * Runs \"computed\" effects for a set of changed properties.\n   *\n   * This method differs from the generic `runEffects` method in that it\n   * continues to run computed effects based on the output of each pass until\n   * there are no more newly computed properties.  This ensures that all\n   * properties that will be computed by the initial set of changes are\n   * computed before other effects (binding propagation, observers, and notify)\n   * run.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {!Object} changedProps Bag of changed properties\n   * @param {!Object} oldProps Bag of previous values for changed properties\n   * @param {boolean} hasPaths True with `props` contains one or more paths\n   * @return {void}\n   * @private\n   */\n  function runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n    var computeEffects = inst[TYPES.COMPUTE];\n    if (computeEffects) {\n      var inputProps = changedProps;\n      while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n        Object.assign(oldProps, inst.__dataOld);\n        Object.assign(changedProps, inst.__dataPending);\n        inputProps = inst.__dataPending;\n        inst.__dataPending = null;\n      }\n    }\n  }\n\n  /**\n   * Implements the \"computed property\" effect by running the method with the\n   * values of the arguments specified in the `info` object and setting the\n   * return value to the computed property specified.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} property Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @return {void}\n   * @private\n   */\n  function runComputedEffect(inst, property, props, oldProps, info) {\n    var result = runMethodEffect(inst, property, props, oldProps, info);\n    var computedProp = info.methodInfo;\n    if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n      inst._setPendingProperty(computedProp, result, true);\n    } else {\n      inst[computedProp] = result;\n    }\n  }\n\n  /**\n   * Computes path changes based on path links set up using the `linkPaths`\n   * API.\n   *\n   * @param {!PropertyEffectsType} inst The instance whose props are changing\n   * @param {string | !Array<(string|number)>} path Path that has changed\n   * @param {*} value Value of changed path\n   * @return {void}\n   * @private\n   */\n  function computeLinkedPaths(inst, path, value) {\n    var links = inst.__dataLinkedPaths;\n    if (links) {\n      var link = void 0;\n      for (var a in links) {\n        var b = links[a];\n        if (Polymer.Path.isDescendant(a, path)) {\n          link = Polymer.Path.translate(a, b, path);\n          inst._setPendingPropertyOrPath(link, value, true, true);\n        } else if (Polymer.Path.isDescendant(b, path)) {\n          link = Polymer.Path.translate(b, a, path);\n          inst._setPendingPropertyOrPath(link, value, true, true);\n        }\n      }\n    }\n  }\n\n  // -- bindings ----------------------------------------------\n\n  /**\n   * Adds binding metadata to the current `nodeInfo`, and binding effects\n   * for all part dependencies to `templateInfo`.\n   *\n   * @param {Function} constructor Class that `_parseTemplate` is currently\n   *   running on\n   * @param {TemplateInfo} templateInfo Template metadata for current template\n   * @param {NodeInfo} nodeInfo Node metadata for current template node\n   * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n   * @param {string} target Target property name\n   * @param {!Array<!BindingPart>} parts Array of binding part metadata\n   * @param {string=} literal Literal text surrounding binding parts (specified\n   *   only for 'property' bindings, since these must be initialized as part\n   *   of boot-up)\n   * @return {void}\n   * @private\n   */\n  function addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n    // Create binding metadata and add to nodeInfo\n    nodeInfo.bindings = nodeInfo.bindings || [];\n    var /** Binding */binding = { kind: kind, target: target, parts: parts, literal: literal, isCompound: parts.length !== 1 };\n    nodeInfo.bindings.push(binding);\n    // Add listener info to binding metadata\n    if (shouldAddListener(binding)) {\n      var _binding$parts$ = binding.parts[0],\n          event = _binding$parts$.event,\n          negate = _binding$parts$.negate;\n\n      binding.listenerEvent = event || CaseMap.camelToDashCase(target) + '-changed';\n      binding.listenerNegate = negate;\n    }\n    // Add \"propagate\" property effects to templateInfo\n    var index = templateInfo.nodeInfoList.length;\n    for (var i = 0; i < binding.parts.length; i++) {\n      var part = binding.parts[i];\n      part.compoundIndex = i;\n      addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n    }\n  }\n\n  /**\n   * Adds property effects to the given `templateInfo` for the given binding\n   * part.\n   *\n   * @param {Function} constructor Class that `_parseTemplate` is currently\n   *   running on\n   * @param {TemplateInfo} templateInfo Template metadata for current template\n   * @param {!Binding} binding Binding metadata\n   * @param {!BindingPart} part Binding part metadata\n   * @param {number} index Index into `nodeInfoList` for this node\n   * @return {void}\n   */\n  function addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n    if (!part.literal) {\n      if (binding.kind === 'attribute' && binding.target[0] === '-') {\n        console.warn('Cannot set attribute ' + binding.target + ' because \"-\" is not a valid attribute starting character');\n      } else {\n        var dependencies = part.dependencies;\n        var info = { index: index, binding: binding, part: part, evaluator: constructor };\n        for (var j = 0; j < dependencies.length; j++) {\n          var trigger = dependencies[j];\n          if (typeof trigger == 'string') {\n            trigger = parseArg(trigger);\n            trigger.wildcard = true;\n          }\n          constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n            fn: runBindingEffect,\n            info: info, trigger: trigger\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Implements the \"binding\" (property/path binding) effect.\n   *\n   * Note that binding syntax is overridable via `_parseBindings` and\n   * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n   * non-literal parts returned from `_parseBindings`.  However,\n   * there is no support for _path_ bindings via custom binding parts,\n   * as this is specific to Polymer's path binding syntax.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} path Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @param {boolean} hasPaths True with `props` contains one or more paths\n   * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n   *   metadata\n   * @return {void}\n   * @private\n   */\n  function runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n    var node = nodeList[info.index];\n    var binding = info.binding;\n    var part = info.part;\n    // Subpath notification: transform path and set to client\n    // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n    if (hasPaths && part.source && path.length > part.source.length && binding.kind == 'property' && !binding.isCompound && node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n      var value = props[path];\n      path = Polymer.Path.translate(part.source, binding.target, path);\n      if (node._setPendingPropertyOrPath(path, value, false, true)) {\n        inst._enqueueClient(node);\n      }\n    } else {\n      var _value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n      // Propagate value to child\n      applyBindingValue(inst, node, binding, part, _value);\n    }\n  }\n\n  /**\n   * Sets the value for an \"binding\" (binding) effect to a node,\n   * either as a property or attribute.\n   *\n   * @param {!PropertyEffectsType} inst The instance owning the binding effect\n   * @param {Node} node Target node for binding\n   * @param {!Binding} binding Binding metadata\n   * @param {!BindingPart} part Binding part metadata\n   * @param {*} value Value to set\n   * @return {void}\n   * @private\n   */\n  function applyBindingValue(inst, node, binding, part, value) {\n    value = computeBindingValue(node, value, binding, part);\n    if (Polymer.sanitizeDOMValue) {\n      value = Polymer.sanitizeDOMValue(value, binding.target, binding.kind, node);\n    }\n    if (binding.kind == 'attribute') {\n      // Attribute binding\n      inst._valueToNodeAttribute( /** @type {Element} */node, value, binding.target);\n    } else {\n      // Property binding\n      var prop = binding.target;\n      if (node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n        if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n          if (node._setPendingProperty(prop, value)) {\n            inst._enqueueClient(node);\n          }\n        }\n      } else {\n        inst._setUnmanagedPropertyToNode(node, prop, value);\n      }\n    }\n  }\n\n  /**\n   * Transforms an \"binding\" effect value based on compound & negation\n   * effect metadata, as well as handling for special-case properties\n   *\n   * @param {Node} node Node the value will be set to\n   * @param {*} value Value to set\n   * @param {!Binding} binding Binding metadata\n   * @param {!BindingPart} part Binding part metadata\n   * @return {*} Transformed value to set\n   * @private\n   */\n  function computeBindingValue(node, value, binding, part) {\n    if (binding.isCompound) {\n      var storage = node.__dataCompoundStorage[binding.target];\n      storage[part.compoundIndex] = value;\n      value = storage.join('');\n    }\n    if (binding.kind !== 'attribute') {\n      // Some browsers serialize `undefined` to `\"undefined\"`\n      if (binding.target === 'textContent' || binding.target === 'value' && (node.localName === 'input' || node.localName === 'textarea')) {\n        value = value == undefined ? '' : value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Returns true if a binding's metadata meets all the requirements to allow\n   * 2-way binding, and therefore a `<property>-changed` event listener should be\n   * added:\n   * - used curly braces\n   * - is a property (not attribute) binding\n   * - is not a textContent binding\n   * - is not compound\n   *\n   * @param {!Binding} binding Binding metadata\n   * @return {boolean} True if 2-way listener should be added\n   * @private\n   */\n  function shouldAddListener(binding) {\n    return Boolean(binding.target) && binding.kind != 'attribute' && binding.kind != 'text' && !binding.isCompound && binding.parts[0].mode === '{';\n  }\n\n  /**\n   * Setup compound binding storage structures, notify listeners, and dataHost\n   * references onto the bound nodeList.\n   *\n   * @param {!PropertyEffectsType} inst Instance that bas been previously bound\n   * @param {TemplateInfo} templateInfo Template metadata\n   * @return {void}\n   * @private\n   */\n  function setupBindings(inst, templateInfo) {\n    // Setup compound storage, dataHost, and notify listeners\n    var nodeList = templateInfo.nodeList,\n        nodeInfoList = templateInfo.nodeInfoList;\n\n    if (nodeInfoList.length) {\n      for (var i = 0; i < nodeInfoList.length; i++) {\n        var info = nodeInfoList[i];\n        var node = nodeList[i];\n        var bindings = info.bindings;\n        if (bindings) {\n          for (var _i = 0; _i < bindings.length; _i++) {\n            var binding = bindings[_i];\n            setupCompoundStorage(node, binding);\n            addNotifyListener(node, inst, binding);\n          }\n        }\n        node.__dataHost = inst;\n      }\n    }\n  }\n\n  /**\n   * Initializes `__dataCompoundStorage` local storage on a bound node with\n   * initial literal data for compound bindings, and sets the joined\n   * literal parts to the bound property.\n   *\n   * When changes to compound parts occur, they are first set into the compound\n   * storage array for that property, and then the array is joined to result in\n   * the final value set to the property/attribute.\n   *\n   * @param {Node} node Bound node to initialize\n   * @param {Binding} binding Binding metadata\n   * @return {void}\n   * @private\n   */\n  function setupCompoundStorage(node, binding) {\n    if (binding.isCompound) {\n      // Create compound storage map\n      var storage = node.__dataCompoundStorage || (node.__dataCompoundStorage = {});\n      var parts = binding.parts;\n      // Copy literals from parts into storage for this binding\n      var literals = new Array(parts.length);\n      for (var j = 0; j < parts.length; j++) {\n        literals[j] = parts[j].literal;\n      }\n      var target = binding.target;\n      storage[target] = literals;\n      // Configure properties with their literal parts\n      if (binding.literal && binding.kind == 'property') {\n        node[target] = binding.literal;\n      }\n    }\n  }\n\n  /**\n   * Adds a 2-way binding notification event listener to the node specified\n   *\n   * @param {Object} node Child element to add listener to\n   * @param {!PropertyEffectsType} inst Host element instance to handle notification event\n   * @param {Binding} binding Binding metadata\n   * @return {void}\n   * @private\n   */\n  function addNotifyListener(node, inst, binding) {\n    if (binding.listenerEvent) {\n      var part = binding.parts[0];\n      node.addEventListener(binding.listenerEvent, function (e) {\n        handleNotification(e, inst, binding.target, part.source, part.negate);\n      });\n    }\n  }\n\n  // -- for method-based effects (complexObserver & computed) --------------\n\n  /**\n   * Adds property effects for each argument in the method signature (and\n   * optionally, for the method name if `dynamic` is true) that calls the\n   * provided effect function.\n   *\n   * @param {Element | Object} model Prototype or instance\n   * @param {!MethodSignature} sig Method signature metadata\n   * @param {string} type Type of property effect to add\n   * @param {Function} effectFn Function to run when arguments change\n   * @param {*=} methodInfo Effect-specific information to be included in\n   *   method effect metadata\n   * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n   *   method names should be included as a dependency to the effect. Note,\n   *   defaults to true if the signature is static (sig.static is true).\n   * @return {void}\n   * @private\n   */\n  function createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n    dynamicFn = sig.static || dynamicFn && ((typeof dynamicFn === 'undefined' ? 'undefined' : _typeof(dynamicFn)) !== 'object' || dynamicFn[sig.methodName]);\n    var info = {\n      methodName: sig.methodName,\n      args: sig.args,\n      methodInfo: methodInfo,\n      dynamicFn: dynamicFn\n    };\n    for (var i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {\n      if (!arg.literal) {\n        model._addPropertyEffect(arg.rootProperty, type, {\n          fn: effectFn, info: info, trigger: arg\n        });\n      }\n    }\n    if (dynamicFn) {\n      model._addPropertyEffect(sig.methodName, type, {\n        fn: effectFn, info: info\n      });\n    }\n  }\n\n  /**\n   * Calls a method with arguments marshaled from properties on the instance\n   * based on the method signature contained in the effect metadata.\n   *\n   * Multi-property observers, computed properties, and inline computing\n   * functions call this function to invoke the method, then use the return\n   * value accordingly.\n   *\n   * @param {!PropertyEffectsType} inst The instance the effect will be run on\n   * @param {string} property Name of property\n   * @param {Object} props Bag of current property changes\n   * @param {Object} oldProps Bag of previous values for changed properties\n   * @param {?} info Effect metadata\n   * @return {*} Returns the return value from the method invocation\n   * @private\n   */\n  function runMethodEffect(inst, property, props, oldProps, info) {\n    // Instances can optionally have a _methodHost which allows redirecting where\n    // to find methods. Currently used by `templatize`.\n    var context = inst._methodHost || inst;\n    var fn = context[info.methodName];\n    if (fn) {\n      var args = marshalArgs(inst.__data, info.args, property, props);\n      return fn.apply(context, args);\n    } else if (!info.dynamicFn) {\n      console.warn('method `' + info.methodName + '` not defined');\n    }\n  }\n\n  var emptyArray = [];\n\n  // Regular expressions used for binding\n  var IDENT = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\n  var NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\n  var SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\n  var DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\n  var STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\n  var ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' + STRING + ')\\\\s*' + ')';\n  var ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\n  var ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' + '(?:' + ARGUMENTS + '?' + ')' + '\\\\)\\\\s*' + ')';\n  var BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\n  var OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\n  var CLOSE_BRACKET = '(?:]]|}})';\n  var NEGATE = '(?:(!)\\\\s*)?'; // Group 2\n  var EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\n  var bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n  /**\n   * Create a string from binding parts of all the literal parts\n   *\n   * @param {!Array<BindingPart>} parts All parts to stringify\n   * @return {string} String made from the literal parts\n   */\n  function literalFromParts(parts) {\n    var s = '';\n    for (var i = 0; i < parts.length; i++) {\n      var literal = parts[i].literal;\n      s += literal || '';\n    }\n    return s;\n  }\n\n  /**\n   * Parses an expression string for a method signature, and returns a metadata\n   * describing the method in terms of `methodName`, `static` (whether all the\n   * arguments are literals), and an array of `args`\n   *\n   * @param {string} expression The expression to parse\n   * @return {?MethodSignature} The method metadata object if a method expression was\n   *   found, otherwise `undefined`\n   * @private\n   */\n  function parseMethod(expression) {\n    // tries to match valid javascript property names\n    var m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n    if (m) {\n      var methodName = m[1];\n      var sig = { methodName: methodName, static: true, args: emptyArray };\n      if (m[2].trim()) {\n        // replace escaped commas with comma entity, split on un-escaped commas\n        var args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n        return parseArgs(args, sig);\n      } else {\n        return sig;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Parses an array of arguments and sets the `args` property of the supplied\n   * signature metadata object. Sets the `static` property to false if any\n   * argument is a non-literal.\n   *\n   * @param {!Array<string>} argList Array of argument names\n   * @param {!MethodSignature} sig Method signature metadata object\n   * @return {!MethodSignature} The updated signature metadata object\n   * @private\n   */\n  function parseArgs(argList, sig) {\n    sig.args = argList.map(function (rawArg) {\n      var arg = parseArg(rawArg);\n      if (!arg.literal) {\n        sig.static = false;\n      }\n      return arg;\n    }, this);\n    return sig;\n  }\n\n  /**\n   * Parses an individual argument, and returns an argument metadata object\n   * with the following fields:\n   *\n   *   {\n   *     value: 'prop',        // property/path or literal value\n   *     literal: false,       // whether argument is a literal\n   *     structured: false,    // whether the property is a path\n   *     rootProperty: 'prop', // the root property of the path\n   *     wildcard: false       // whether the argument was a wildcard '.*' path\n   *   }\n   *\n   * @param {string} rawArg The string value of the argument\n   * @return {!MethodArg} Argument metadata object\n   * @private\n   */\n  function parseArg(rawArg) {\n    // clean up whitespace\n    var arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1');\n    // basic argument descriptor\n    var a = {\n      name: arg,\n      value: '',\n      literal: false\n    };\n    // detect literal value (must be String or Number)\n    var fc = arg[0];\n    if (fc === '-') {\n      fc = arg[1];\n    }\n    if (fc >= '0' && fc <= '9') {\n      fc = '#';\n    }\n    switch (fc) {\n      case \"'\":\n      case '\"':\n        a.value = arg.slice(1, -1);\n        a.literal = true;\n        break;\n      case '#':\n        a.value = Number(arg);\n        a.literal = true;\n        break;\n    }\n    // if not literal, look for structured path\n    if (!a.literal) {\n      a.rootProperty = Polymer.Path.root(arg);\n      // detect structured path (has dots)\n      a.structured = Polymer.Path.isPath(arg);\n      if (a.structured) {\n        a.wildcard = arg.slice(-2) == '.*';\n        if (a.wildcard) {\n          a.name = arg.slice(0, -2);\n        }\n      }\n    }\n    return a;\n  }\n\n  /**\n   * Gather the argument values for a method specified in the provided array\n   * of argument metadata.\n   *\n   * The `path` and `value` arguments are used to fill in wildcard descriptor\n   * when the method is being called as a result of a path notification.\n   *\n   * @param {Object} data Instance data storage object to read properties from\n   * @param {!Array<!MethodArg>} args Array of argument metadata\n   * @param {string} path Property/path name that triggered the method effect\n   * @param {Object} props Bag of current property changes\n   * @return {Array<*>} Array of argument values\n   * @private\n   */\n  function marshalArgs(data, args, path, props) {\n    var values = [];\n    for (var i = 0, l = args.length; i < l; i++) {\n      var arg = args[i];\n      var name = arg.name;\n      var v = void 0;\n      if (arg.literal) {\n        v = arg.value;\n      } else {\n        if (arg.structured) {\n          v = Polymer.Path.get(data, name);\n          // when data is not stored e.g. `splices`\n          if (v === undefined) {\n            v = props[name];\n          }\n        } else {\n          v = data[name];\n        }\n      }\n      if (arg.wildcard) {\n        // Only send the actual path changed info if the change that\n        // caused the observer to run matched the wildcard\n        var baseChanged = name.indexOf(path + '.') === 0;\n        var matches = path.indexOf(name) === 0 && !baseChanged;\n        values[i] = {\n          path: matches ? path : name,\n          value: matches ? props[path] : v,\n          base: v\n        };\n      } else {\n        values[i] = v;\n      }\n    }\n    return values;\n  }\n\n  // data api\n\n  /**\n   * Sends array splice notifications (`.splices` and `.length`)\n   *\n   * Note: this implementation only accepts normalized paths\n   *\n   * @param {!PropertyEffectsType} inst Instance to send notifications to\n   * @param {Array} array The array the mutations occurred on\n   * @param {string} path The path to the array that was mutated\n   * @param {Array} splices Array of splice records\n   * @return {void}\n   * @private\n   */\n  function _notifySplices(inst, array, path, splices) {\n    var splicesPath = path + '.splices';\n    inst.notifyPath(splicesPath, { indexSplices: splices });\n    inst.notifyPath(path + '.length', array.length);\n    // Null here to allow potentially large splice records to be GC'ed.\n    inst.__data[splicesPath] = { indexSplices: null };\n  }\n\n  /**\n   * Creates a splice record and sends an array splice notification for\n   * the described mutation\n   *\n   * Note: this implementation only accepts normalized paths\n   *\n   * @param {!PropertyEffectsType} inst Instance to send notifications to\n   * @param {Array} array The array the mutations occurred on\n   * @param {string} path The path to the array that was mutated\n   * @param {number} index Index at which the array mutation occurred\n   * @param {number} addedCount Number of added items\n   * @param {Array} removed Array of removed items\n   * @return {void}\n   * @private\n   */\n  function notifySplice(inst, array, path, index, addedCount, removed) {\n    _notifySplices(inst, array, path, [{\n      index: index,\n      addedCount: addedCount,\n      removed: removed,\n      object: array,\n      type: 'splice'\n    }]);\n  }\n\n  /**\n   * Returns an upper-cased version of the string.\n   *\n   * @param {string} name String to uppercase\n   * @return {string} Uppercased string\n   * @private\n   */\n  function upper(name) {\n    return name[0].toUpperCase() + name.substring(1);\n  }\n\n  /**\n   * Element class mixin that provides meta-programming for Polymer's template\n   * binding and data observation (collectively, \"property effects\") system.\n   *\n   * This mixin uses provides the following key static methods for adding\n   * property effects to an element class:\n   * - `addPropertyEffect`\n   * - `createPropertyObserver`\n   * - `createMethodObserver`\n   * - `createNotifyingProperty`\n   * - `createReadOnlyProperty`\n   * - `createReflectedProperty`\n   * - `createComputedProperty`\n   * - `bindTemplate`\n   *\n   * Each method creates one or more property accessors, along with metadata\n   * used by this mixin's implementation of `_propertiesChanged` to perform\n   * the property effects.\n   *\n   * Underscored versions of the above methods also exist on the element\n   * prototype for adding property effects on instances at runtime.\n   *\n   * Note that this mixin overrides several `PropertyAccessors` methods, in\n   * many cases to maintain guarantees provided by the Polymer 1.x features;\n   * notably it changes property accessors to be synchronous by default\n   * whereas the default when using `PropertyAccessors` standalone is to be\n   * async by default.\n   *\n   * @mixinFunction\n   * @polymer\n   * @appliesMixin Polymer.TemplateStamp\n   * @appliesMixin Polymer.PropertyAccessors\n   * @memberof Polymer\n   * @summary Element class mixin that provides meta-programming for Polymer's\n   * template binding and data observation system.\n   */\n  Polymer.PropertyEffects = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @constructor\n     * @extends {superClass}\n     * @implements {Polymer_PropertyAccessors}\n     * @implements {Polymer_TemplateStamp}\n     * @unrestricted\n     */\n    var propertyEffectsBase = Polymer.TemplateStamp(Polymer.PropertyAccessors(superClass));\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_PropertyEffects}\n     * @extends {propertyEffectsBase}\n     * @unrestricted\n     */\n\n    var PropertyEffects = function (_propertyEffectsBase) {\n      _inherits(PropertyEffects, _propertyEffectsBase);\n\n      function PropertyEffects() {\n        _classCallCheck(this, PropertyEffects);\n\n        /** @type {number} */\n        // NOTE: used to track re-entrant calls to `_flushProperties`\n        // path changes dirty check against `__dataTemp` only during one \"turn\"\n        // and are cleared when `__dataCounter` returns to 0.\n        var _this = _possibleConstructorReturn(this, (PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects)).call(this));\n\n        _this.__dataCounter = 0;\n        /** @type {boolean} */\n        _this.__dataClientsReady;\n        /** @type {Array} */\n        _this.__dataPendingClients;\n        /** @type {Object} */\n        _this.__dataToNotify;\n        /** @type {Object} */\n        _this.__dataLinkedPaths;\n        /** @type {boolean} */\n        _this.__dataHasPaths;\n        /** @type {Object} */\n        _this.__dataCompoundStorage;\n        /** @type {Polymer_PropertyEffects} */\n        _this.__dataHost;\n        /** @type {!Object} */\n        _this.__dataTemp;\n        /** @type {boolean} */\n        _this.__dataClientsInitialized;\n        /** @type {!Object} */\n        _this.__data;\n        /** @type {!Object} */\n        _this.__dataPending;\n        /** @type {!Object} */\n        _this.__dataOld;\n        /** @type {Object} */\n        _this.__computeEffects;\n        /** @type {Object} */\n        _this.__reflectEffects;\n        /** @type {Object} */\n        _this.__notifyEffects;\n        /** @type {Object} */\n        _this.__propagateEffects;\n        /** @type {Object} */\n        _this.__observeEffects;\n        /** @type {Object} */\n        _this.__readOnly;\n        /** @type {!TemplateInfo} */\n        _this.__templateInfo;\n        return _this;\n      }\n\n      _createClass(PropertyEffects, [{\n        key: '_initializeProperties',\n\n\n        /**\n         * @return {void}\n         */\n        value: function _initializeProperties() {\n          _get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_initializeProperties', this).call(this);\n          hostStack.registerHost(this);\n          this.__dataClientsReady = false;\n          this.__dataPendingClients = null;\n          this.__dataToNotify = null;\n          this.__dataLinkedPaths = null;\n          this.__dataHasPaths = false;\n          // May be set on instance prior to upgrade\n          this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n          this.__dataHost = this.__dataHost || null;\n          this.__dataTemp = {};\n          this.__dataClientsInitialized = false;\n        }\n\n        /**\n         * Overrides `Polymer.PropertyAccessors` implementation to provide a\n         * more efficient implementation of initializing properties from\n         * the prototype on the instance.\n         *\n         * @override\n         * @param {Object} props Properties to initialize on the prototype\n         * @return {void}\n         */\n\n      }, {\n        key: '_initializeProtoProperties',\n        value: function _initializeProtoProperties(props) {\n          this.__data = Object.create(props);\n          this.__dataPending = Object.create(props);\n          this.__dataOld = {};\n        }\n\n        /**\n         * Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n         * `_setProperty`'s `shouldNotify: true`.\n         *\n         * @override\n         * @param {Object} props Properties to initialize on the instance\n         * @return {void}\n         */\n\n      }, {\n        key: '_initializeInstanceProperties',\n        value: function _initializeInstanceProperties(props) {\n          var readOnly = this[TYPES.READ_ONLY];\n          for (var prop in props) {\n            if (!readOnly || !readOnly[prop]) {\n              this.__dataPending = this.__dataPending || {};\n              this.__dataOld = this.__dataOld || {};\n              this.__data[prop] = this.__dataPending[prop] = props[prop];\n            }\n          }\n        }\n\n        // Prototype setup ----------------------------------------\n\n        /**\n         * Equivalent to static `addPropertyEffect` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Property that should trigger the effect\n         * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n         * @param {Object=} effect Effect metadata object\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_addPropertyEffect',\n        value: function _addPropertyEffect(property, type, effect) {\n          this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n          // effects are accumulated into arrays per property based on type\n          var effects = ensureOwnEffectMap(this, type)[property];\n          if (!effects) {\n            effects = this[type][property] = [];\n          }\n          effects.push(effect);\n        }\n\n        /**\n         * Removes the given property effect.\n         *\n         * @param {string} property Property the effect was associated with\n         * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n         * @param {Object=} effect Effect metadata object to remove\n         * @return {void}\n         */\n\n      }, {\n        key: '_removePropertyEffect',\n        value: function _removePropertyEffect(property, type, effect) {\n          var effects = ensureOwnEffectMap(this, type)[property];\n          var idx = effects.indexOf(effect);\n          if (idx >= 0) {\n            effects.splice(idx, 1);\n          }\n        }\n\n        /**\n         * Returns whether the current prototype/instance has a property effect\n         * of a certain type.\n         *\n         * @param {string} property Property name\n         * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n         * @return {boolean} True if the prototype/instance has an effect of this type\n         * @protected\n         */\n\n      }, {\n        key: '_hasPropertyEffect',\n        value: function _hasPropertyEffect(property, type) {\n          var effects = this[type];\n          return Boolean(effects && effects[property]);\n        }\n\n        /**\n         * Returns whether the current prototype/instance has a \"read only\"\n         * accessor for the given property.\n         *\n         * @param {string} property Property name\n         * @return {boolean} True if the prototype/instance has an effect of this type\n         * @protected\n         */\n\n      }, {\n        key: '_hasReadOnlyEffect',\n        value: function _hasReadOnlyEffect(property) {\n          return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n        }\n\n        /**\n         * Returns whether the current prototype/instance has a \"notify\"\n         * property effect for the given property.\n         *\n         * @param {string} property Property name\n         * @return {boolean} True if the prototype/instance has an effect of this type\n         * @protected\n         */\n\n      }, {\n        key: '_hasNotifyEffect',\n        value: function _hasNotifyEffect(property) {\n          return this._hasPropertyEffect(property, TYPES.NOTIFY);\n        }\n\n        /**\n         * Returns whether the current prototype/instance has a \"reflect to attribute\"\n         * property effect for the given property.\n         *\n         * @param {string} property Property name\n         * @return {boolean} True if the prototype/instance has an effect of this type\n         * @protected\n         */\n\n      }, {\n        key: '_hasReflectEffect',\n        value: function _hasReflectEffect(property) {\n          return this._hasPropertyEffect(property, TYPES.REFLECT);\n        }\n\n        /**\n         * Returns whether the current prototype/instance has a \"computed\"\n         * property effect for the given property.\n         *\n         * @param {string} property Property name\n         * @return {boolean} True if the prototype/instance has an effect of this type\n         * @protected\n         */\n\n      }, {\n        key: '_hasComputedEffect',\n        value: function _hasComputedEffect(property) {\n          return this._hasPropertyEffect(property, TYPES.COMPUTE);\n        }\n\n        // Runtime ----------------------------------------\n\n        /**\n         * Sets a pending property or path.  If the root property of the path in\n         * question had no accessor, the path is set, otherwise it is enqueued\n         * via `_setPendingProperty`.\n         *\n         * This function isolates relatively expensive functionality necessary\n         * for the public API (`set`, `setProperties`, `notifyPath`, and property\n         * change listeners via {{...}} bindings), such that it is only done\n         * when paths enter the system, and not at every propagation step.  It\n         * also sets a `__dataHasPaths` flag on the instance which is used to\n         * fast-path slower path-matching code in the property effects host paths.\n         *\n         * `path` can be a path string or array of path parts as accepted by the\n         * public API.\n         *\n         * @param {string | !Array<number|string>} path Path to set\n         * @param {*} value Value to set\n         * @param {boolean=} shouldNotify Set to true if this change should\n         *  cause a property notification event dispatch\n         * @param {boolean=} isPathNotification If the path being set is a path\n         *   notification of an already changed value, as opposed to a request\n         *   to set and notify the change.  In the latter `false` case, a dirty\n         *   check is performed and then the value is set to the path before\n         *   enqueuing the pending property change.\n         * @return {boolean} Returns true if the property/path was enqueued in\n         *   the pending changes bag.\n         * @protected\n         */\n\n      }, {\n        key: '_setPendingPropertyOrPath',\n        value: function _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n          if (isPathNotification || Polymer.Path.root(Array.isArray(path) ? path[0] : path) !== path) {\n            // Dirty check changes being set to a path against the actual object,\n            // since this is the entry point for paths into the system; from here\n            // the only dirty checks are against the `__dataTemp` cache to prevent\n            // duplicate work in the same turn only. Note, if this was a notification\n            // of a change already set to a path (isPathNotification: true),\n            // we always let the change through and skip the `set` since it was\n            // already dirty checked at the point of entry and the underlying\n            // object has already been updated\n            if (!isPathNotification) {\n              var old = Polymer.Path.get(this, path);\n              path = /** @type {string} */Polymer.Path.set(this, path, value);\n              // Use property-accessor's simpler dirty check\n              if (!path || !_get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_shouldPropertyChange', this).call(this, path, value, old)) {\n                return false;\n              }\n            }\n            this.__dataHasPaths = true;\n            if (this._setPendingProperty( /**@type{string}*/path, value, shouldNotify)) {\n              computeLinkedPaths(this, path, value);\n              return true;\n            }\n          } else {\n            if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n              return this._setPendingProperty( /**@type{string}*/path, value, shouldNotify);\n            } else {\n              this[path] = value;\n            }\n          }\n          return false;\n        }\n\n        /**\n         * Applies a value to a non-Polymer element/node's property.\n         *\n         * The implementation makes a best-effort at binding interop:\n         * Some native element properties have side-effects when\n         * re-setting the same value (e.g. setting `<input>.value` resets the\n         * cursor position), so we do a dirty-check before setting the value.\n         * However, for better interop with non-Polymer custom elements that\n         * accept objects, we explicitly re-set object changes coming from the\n         * Polymer world (which may include deep object changes without the\n         * top reference changing), erring on the side of providing more\n         * information.\n         *\n         * Users may override this method to provide alternate approaches.\n         *\n         * @param {!Node} node The node to set a property on\n         * @param {string} prop The property to set\n         * @param {*} value The value to set\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_setUnmanagedPropertyToNode',\n        value: function _setUnmanagedPropertyToNode(node, prop, value) {\n          // It is a judgment call that resetting primitives is\n          // \"bad\" and resettings objects is also \"good\"; alternatively we could\n          // implement a whitelist of tag & property values that should never\n          // be reset (e.g. <input>.value && <select>.value)\n          if (value !== node[prop] || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {\n            node[prop] = value;\n          }\n        }\n\n        /**\n         * Overrides the `PropertiesChanged` implementation to introduce special\n         * dirty check logic depending on the property & value being set:\n         *\n         * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n         *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n         * 2. Object set to simple property (e.g. 'prop': {...})\n         *    Stored in `__dataTemp` and `__data`, dirty checked against\n         *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n         * 3. Primitive value set to simple property (e.g. 'prop': 42)\n         *    Stored in `__data`, dirty checked against `__data`\n         *\n         * The dirty-check is important to prevent cycles due to two-way\n         * notification, but paths and objects are only dirty checked against any\n         * previous value set during this turn via a \"temporary cache\" that is\n         * cleared when the last `_propertiesChanged` exits. This is so:\n         * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n         *    due to array mutations like shift/unshift/splice; this is fine\n         *    since path changes are dirty-checked at user entry points like `set`\n         * b. dirty-checking for objects only lasts one turn to allow the user\n         *    to mutate the object in-place and re-set it with the same identity\n         *    and have all sub-properties re-propagated in a subsequent turn.\n         *\n         * The temp cache is not necessarily sufficient to prevent invalid array\n         * paths, since a splice can happen during the same turn (with pathological\n         * user code); we could introduce a \"fixup\" for temporarily cached array\n         * paths if needed: https://github.com/Polymer/polymer/issues/4227\n         *\n         * @override\n         * @param {string} property Name of the property\n         * @param {*} value Value to set\n         * @param {boolean=} shouldNotify True if property should fire notification\n         *   event (applies only for `notify: true` properties)\n         * @return {boolean} Returns true if the property changed\n         */\n\n      }, {\n        key: '_setPendingProperty',\n        value: function _setPendingProperty(property, value, shouldNotify) {\n          var isPath = this.__dataHasPaths && Polymer.Path.isPath(property);\n          var prevProps = isPath ? this.__dataTemp : this.__data;\n          if (this._shouldPropertyChange(property, value, prevProps[property])) {\n            if (!this.__dataPending) {\n              this.__dataPending = {};\n              this.__dataOld = {};\n            }\n            // Ensure old is captured from the last turn\n            if (!(property in this.__dataOld)) {\n              this.__dataOld[property] = this.__data[property];\n            }\n            // Paths are stored in temporary cache (cleared at end of turn),\n            // which is used for dirty-checking, all others stored in __data\n            if (isPath) {\n              this.__dataTemp[property] = value;\n            } else {\n              this.__data[property] = value;\n            }\n            // All changes go into pending property bag, passed to _propertiesChanged\n            this.__dataPending[property] = value;\n            // Track properties that should notify separately\n            if (isPath || this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property]) {\n              this.__dataToNotify = this.__dataToNotify || {};\n              this.__dataToNotify[property] = shouldNotify;\n            }\n            return true;\n          }\n          return false;\n        }\n\n        /**\n         * Overrides base implementation to ensure all accessors set `shouldNotify`\n         * to true, for per-property notification tracking.\n         *\n         * @override\n         * @param {string} property Name of the property\n         * @param {*} value Value to set\n         * @return {void}\n         */\n\n      }, {\n        key: '_setProperty',\n        value: function _setProperty(property, value) {\n          if (this._setPendingProperty(property, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n\n        /**\n         * Overrides `PropertyAccessor`'s default async queuing of\n         * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n         * manually flushed), the function no-ops; otherwise flushes\n         * `_propertiesChanged` synchronously.\n         *\n         * @override\n         * @return {void}\n         */\n\n      }, {\n        key: '_invalidateProperties',\n        value: function _invalidateProperties() {\n          if (this.__dataReady) {\n            this._flushProperties();\n          }\n        }\n\n        /**\n         * Enqueues the given client on a list of pending clients, whose\n         * pending property changes can later be flushed via a call to\n         * `_flushClients`.\n         *\n         * @param {Object} client PropertyEffects client to enqueue\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_enqueueClient',\n        value: function _enqueueClient(client) {\n          this.__dataPendingClients = this.__dataPendingClients || [];\n          if (client !== this) {\n            this.__dataPendingClients.push(client);\n          }\n        }\n\n        /**\n         * Overrides superclass implementation.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_flushProperties',\n        value: function _flushProperties() {\n          this.__dataCounter++;\n          _get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_flushProperties', this).call(this);\n          this.__dataCounter--;\n        }\n\n        /**\n         * Flushes any clients previously enqueued via `_enqueueClient`, causing\n         * their `_flushProperties` method to run.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_flushClients',\n        value: function _flushClients() {\n          if (!this.__dataClientsReady) {\n            this.__dataClientsReady = true;\n            this._readyClients();\n            // Override point where accessors are turned on; importantly,\n            // this is after clients have fully readied, providing a guarantee\n            // that any property effects occur only after all clients are ready.\n            this.__dataReady = true;\n          } else {\n            this.__enableOrFlushClients();\n          }\n        }\n\n        // NOTE: We ensure clients either enable or flush as appropriate. This\n        // handles two corner cases:\n        // (1) clients flush properly when connected/enabled before the host\n        // enables; e.g.\n        //   (a) Templatize stamps with no properties and does not flush and\n        //   (b) the instance is inserted into dom and\n        //   (c) then the instance flushes.\n        // (2) clients enable properly when not connected/enabled when the host\n        // flushes; e.g.\n        //   (a) a template is runtime stamped and not yet connected/enabled\n        //   (b) a host sets a property, causing stamped dom to flush\n        //   (c) the stamped dom enables.\n\n      }, {\n        key: '__enableOrFlushClients',\n        value: function __enableOrFlushClients() {\n          var clients = this.__dataPendingClients;\n          if (clients) {\n            this.__dataPendingClients = null;\n            for (var i = 0; i < clients.length; i++) {\n              var client = clients[i];\n              if (!client.__dataEnabled) {\n                client._enableProperties();\n              } else if (client.__dataPending) {\n                client._flushProperties();\n              }\n            }\n          }\n        }\n\n        /**\n         * Perform any initial setup on client dom. Called before the first\n         * `_flushProperties` call on client dom and before any element\n         * observers are called.\n         *\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_readyClients',\n        value: function _readyClients() {\n          this.__enableOrFlushClients();\n        }\n\n        /**\n         * Sets a bag of property changes to this instance, and\n         * synchronously processes all effects of the properties as a batch.\n         *\n         * Property names must be simple properties, not paths.  Batched\n         * path propagation is not supported.\n         *\n         * @param {Object} props Bag of one or more key-value pairs whose key is\n         *   a property and value is the new value to set for that property.\n         * @param {boolean=} setReadOnly When true, any private values set in\n         *   `props` will be set. By default, `setProperties` will not set\n         *   `readOnly: true` root properties.\n         * @return {void}\n         * @public\n         */\n\n      }, {\n        key: 'setProperties',\n        value: function setProperties(props, setReadOnly) {\n          for (var path in props) {\n            if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n              //TODO(kschaaf): explicitly disallow paths in setProperty?\n              // wildcard observers currently only pass the first changed path\n              // in the `info` object, and you could do some odd things batching\n              // paths, e.g. {'foo.bar': {...}, 'foo': null}\n              this._setPendingPropertyOrPath(path, props[path], true);\n            }\n          }\n          this._invalidateProperties();\n        }\n\n        /**\n         * Overrides `PropertyAccessors` so that property accessor\n         * side effects are not enabled until after client dom is fully ready.\n         * Also calls `_flushClients` callback to ensure client dom is enabled\n         * that was not enabled as a result of flushing properties.\n         *\n         * @override\n         * @return {void}\n         */\n\n      }, {\n        key: 'ready',\n        value: function ready() {\n          // It is important that `super.ready()` is not called here as it\n          // immediately turns on accessors. Instead, we wait until `readyClients`\n          // to enable accessors to provide a guarantee that clients are ready\n          // before processing any accessors side effects.\n          this._flushProperties();\n          // If no data was pending, `_flushProperties` will not `flushClients`\n          // so ensure this is done.\n          if (!this.__dataClientsReady) {\n            this._flushClients();\n          }\n          // Before ready, client notifications do not trigger _flushProperties.\n          // Therefore a flush is necessary here if data has been set.\n          if (this.__dataPending) {\n            this._flushProperties();\n          }\n        }\n\n        /**\n         * Implements `PropertyAccessors`'s properties changed callback.\n         *\n         * Runs each class of effects for the batch of changed properties in\n         * a specific order (compute, propagate, reflect, observe, notify).\n         *\n         * @param {!Object} currentProps Bag of all current accessor values\n         * @param {!Object} changedProps Bag of properties changed since the last\n         *   call to `_propertiesChanged`\n         * @param {!Object} oldProps Bag of previous values for each property\n         *   in `changedProps`\n         * @return {void}\n         */\n\n      }, {\n        key: '_propertiesChanged',\n        value: function _propertiesChanged(currentProps, changedProps, oldProps) {\n          // ----------------------------\n          // let c = Object.getOwnPropertyNames(changedProps || {});\n          // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n          // if (window.debug) { debugger; }\n          // ----------------------------\n          var hasPaths = this.__dataHasPaths;\n          this.__dataHasPaths = false;\n          // Compute properties\n          runComputedEffects(this, changedProps, oldProps, hasPaths);\n          // Clear notify properties prior to possible reentry (propagate, observe),\n          // but after computing effects have a chance to add to them\n          var notifyProps = this.__dataToNotify;\n          this.__dataToNotify = null;\n          // Propagate properties to clients\n          this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n          // Flush clients\n          this._flushClients();\n          // Reflect properties\n          runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n          // Observe properties\n          runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n          // Notify properties to host\n          if (notifyProps) {\n            runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n          }\n          // Clear temporary cache at end of turn\n          if (this.__dataCounter == 1) {\n            this.__dataTemp = {};\n          }\n          // ----------------------------\n          // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n          // ----------------------------\n        }\n\n        /**\n         * Called to propagate any property changes to stamped template nodes\n         * managed by this element.\n         *\n         * @param {Object} changedProps Bag of changed properties\n         * @param {Object} oldProps Bag of previous values for changed properties\n         * @param {boolean} hasPaths True with `props` contains one or more paths\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_propagatePropertyChanges',\n        value: function _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n          if (this[TYPES.PROPAGATE]) {\n            runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n          }\n          var templateInfo = this.__templateInfo;\n          while (templateInfo) {\n            runEffects(this, templateInfo.propertyEffects, changedProps, oldProps, hasPaths, templateInfo.nodeList);\n            templateInfo = templateInfo.nextTemplateInfo;\n          }\n        }\n\n        /**\n         * Aliases one data path as another, such that path notifications from one\n         * are routed to the other.\n         *\n         * @param {string | !Array<string|number>} to Target path to link.\n         * @param {string | !Array<string|number>} from Source path to link.\n         * @return {void}\n         * @public\n         */\n\n      }, {\n        key: 'linkPaths',\n        value: function linkPaths(to, from) {\n          to = Polymer.Path.normalize(to);\n          from = Polymer.Path.normalize(from);\n          this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n          this.__dataLinkedPaths[to] = from;\n        }\n\n        /**\n         * Removes a data path alias previously established with `_linkPaths`.\n         *\n         * Note, the path to unlink should be the target (`to`) used when\n         * linking the paths.\n         *\n         * @param {string | !Array<string|number>} path Target path to unlink.\n         * @return {void}\n         * @public\n         */\n\n      }, {\n        key: 'unlinkPaths',\n        value: function unlinkPaths(path) {\n          path = Polymer.Path.normalize(path);\n          if (this.__dataLinkedPaths) {\n            delete this.__dataLinkedPaths[path];\n          }\n        }\n\n        /**\n         * Notify that an array has changed.\n         *\n         * Example:\n         *\n         *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n         *     ...\n         *     this.items.splice(1, 1, {name: 'Sam'});\n         *     this.items.push({name: 'Bob'});\n         *     this.notifySplices('items', [\n         *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n         *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n         *     ]);\n         *\n         * @param {string} path Path that should be notified.\n         * @param {Array} splices Array of splice records indicating ordered\n         *   changes that occurred to the array. Each record should have the\n         *   following fields:\n         *    * index: index at which the change occurred\n         *    * removed: array of items that were removed from this index\n         *    * addedCount: number of new items added at this index\n         *    * object: a reference to the array in question\n         *    * type: the string literal 'splice'\n         *\n         *   Note that splice records _must_ be normalized such that they are\n         *   reported in index order (raw results from `Object.observe` are not\n         *   ordered and must be normalized/merged before notifying).\n         * @return {void}\n         * @public\n        */\n\n      }, {\n        key: 'notifySplices',\n        value: function notifySplices(path, splices) {\n          var info = { path: '' };\n          var array = /** @type {Array} */Polymer.Path.get(this, path, info);\n          _notifySplices(this, array, info.path, splices);\n        }\n\n        /**\n         * Convenience method for reading a value from a path.\n         *\n         * Note, if any part in the path is undefined, this method returns\n         * `undefined` (this method does not throw when dereferencing undefined\n         * paths).\n         *\n         * @param {(string|!Array<(string|number)>)} path Path to the value\n         *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n         *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n         *   bracketed expressions are not supported; string-based path parts\n         *   *must* be separated by dots.  Note that when dereferencing array\n         *   indices, the index may be used as a dotted part directly\n         *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n         * @param {Object=} root Root object from which the path is evaluated.\n         * @return {*} Value at the path, or `undefined` if any part of the path\n         *   is undefined.\n         * @public\n         */\n\n      }, {\n        key: 'get',\n        value: function get(path, root) {\n          return Polymer.Path.get(root || this, path);\n        }\n\n        /**\n         * Convenience method for setting a value to a path and notifying any\n         * elements bound to the same path.\n         *\n         * Note, if any part in the path except for the last is undefined,\n         * this method does nothing (this method does not throw when\n         * dereferencing undefined paths).\n         *\n         * @param {(string|!Array<(string|number)>)} path Path to the value\n         *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n         *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n         *   bracketed expressions are not supported; string-based path parts\n         *   *must* be separated by dots.  Note that when dereferencing array\n         *   indices, the index may be used as a dotted part directly\n         *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n         * @param {*} value Value to set at the specified path.\n         * @param {Object=} root Root object from which the path is evaluated.\n         *   When specified, no notification will occur.\n         * @return {void}\n         * @public\n        */\n\n      }, {\n        key: 'set',\n        value: function set(path, value, root) {\n          if (root) {\n            Polymer.Path.set(root, path, value);\n          } else {\n            if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */path]) {\n              if (this._setPendingPropertyOrPath(path, value, true)) {\n                this._invalidateProperties();\n              }\n            }\n          }\n        }\n\n        /**\n         * Adds items onto the end of the array at the path specified.\n         *\n         * The arguments after `path` and return value match that of\n         * `Array.prototype.push`.\n         *\n         * This method notifies other paths to the same array that a\n         * splice occurred to the array.\n         *\n         * @param {string | !Array<string|number>} path Path to array.\n         * @param {...*} items Items to push onto array\n         * @return {number} New length of the array.\n         * @public\n         */\n\n      }, {\n        key: 'push',\n        value: function push(path) {\n          var info = { path: '' };\n          var array = /** @type {Array}*/Polymer.Path.get(this, path, info);\n          var len = array.length;\n\n          for (var _len = arguments.length, items = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            items[_key - 1] = arguments[_key];\n          }\n\n          var ret = array.push.apply(array, items);\n          if (items.length) {\n            notifySplice(this, array, info.path, len, items.length, []);\n          }\n          return ret;\n        }\n\n        /**\n         * Removes an item from the end of array at the path specified.\n         *\n         * The arguments after `path` and return value match that of\n         * `Array.prototype.pop`.\n         *\n         * This method notifies other paths to the same array that a\n         * splice occurred to the array.\n         *\n         * @param {string | !Array<string|number>} path Path to array.\n         * @return {*} Item that was removed.\n         * @public\n         */\n\n      }, {\n        key: 'pop',\n        value: function pop(path) {\n          var info = { path: '' };\n          var array = /** @type {Array} */Polymer.Path.get(this, path, info);\n          var hadLength = Boolean(array.length);\n          var ret = array.pop();\n          if (hadLength) {\n            notifySplice(this, array, info.path, array.length, 0, [ret]);\n          }\n          return ret;\n        }\n\n        /**\n         * Starting from the start index specified, removes 0 or more items\n         * from the array and inserts 0 or more new items in their place.\n         *\n         * The arguments after `path` and return value match that of\n         * `Array.prototype.splice`.\n         *\n         * This method notifies other paths to the same array that a\n         * splice occurred to the array.\n         *\n         * @param {string | !Array<string|number>} path Path to array.\n         * @param {number} start Index from which to start removing/inserting.\n         * @param {number} deleteCount Number of items to remove.\n         * @param {...*} items Items to insert into array.\n         * @return {Array} Array of removed items.\n         * @public\n         */\n\n      }, {\n        key: 'splice',\n        value: function splice(path, start, deleteCount) {\n          for (var _len2 = arguments.length, items = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n            items[_key2 - 3] = arguments[_key2];\n          }\n\n          var info = { path: '' };\n          var array = /** @type {Array} */Polymer.Path.get(this, path, info);\n          // Normalize fancy native splice handling of crazy start values\n          if (start < 0) {\n            start = array.length - Math.floor(-start);\n          } else if (start) {\n            start = Math.floor(start);\n          }\n          // array.splice does different things based on the number of arguments\n          // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n          // do different things. In the former, the whole array is cleared. In the\n          // latter, no items are removed.\n          // This means that we need to detect whether 1. one of the arguments\n          // is actually passed in and then 2. determine how many arguments\n          // we should pass on to the native array.splice\n          //\n          var ret = void 0;\n          // Omit any additional arguments if they were not passed in\n          if (arguments.length === 2) {\n            ret = array.splice(start);\n            // Either start was undefined and the others were defined, but in this\n            // case we can safely pass on all arguments\n            //\n            // Note: this includes the case where none of the arguments were passed in,\n            // e.g. this.splice('array'). However, if both start and deleteCount\n            // are undefined, array.splice will not modify the array (as expected)\n          } else {\n            ret = array.splice.apply(array, [start, deleteCount].concat(items));\n          }\n          // At the end, check whether any items were passed in (e.g. insertions)\n          // or if the return array contains items (e.g. deletions).\n          // Only notify if items were added or deleted.\n          if (items.length || ret.length) {\n            notifySplice(this, array, info.path, start, items.length, ret);\n          }\n          return ret;\n        }\n\n        /**\n         * Removes an item from the beginning of array at the path specified.\n         *\n         * The arguments after `path` and return value match that of\n         * `Array.prototype.pop`.\n         *\n         * This method notifies other paths to the same array that a\n         * splice occurred to the array.\n         *\n         * @param {string | !Array<string|number>} path Path to array.\n         * @return {*} Item that was removed.\n         * @public\n         */\n\n      }, {\n        key: 'shift',\n        value: function shift(path) {\n          var info = { path: '' };\n          var array = /** @type {Array} */Polymer.Path.get(this, path, info);\n          var hadLength = Boolean(array.length);\n          var ret = array.shift();\n          if (hadLength) {\n            notifySplice(this, array, info.path, 0, 0, [ret]);\n          }\n          return ret;\n        }\n\n        /**\n         * Adds items onto the beginning of the array at the path specified.\n         *\n         * The arguments after `path` and return value match that of\n         * `Array.prototype.push`.\n         *\n         * This method notifies other paths to the same array that a\n         * splice occurred to the array.\n         *\n         * @param {string | !Array<string|number>} path Path to array.\n         * @param {...*} items Items to insert info array\n         * @return {number} New length of the array.\n         * @public\n         */\n\n      }, {\n        key: 'unshift',\n        value: function unshift(path) {\n          var info = { path: '' };\n          var array = /** @type {Array} */Polymer.Path.get(this, path, info);\n\n          for (var _len3 = arguments.length, items = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n            items[_key3 - 1] = arguments[_key3];\n          }\n\n          var ret = array.unshift.apply(array, items);\n          if (items.length) {\n            notifySplice(this, array, info.path, 0, items.length, []);\n          }\n          return ret;\n        }\n\n        /**\n         * Notify that a path has changed.\n         *\n         * Example:\n         *\n         *     this.item.user.name = 'Bob';\n         *     this.notifyPath('item.user.name');\n         *\n         * @param {string} path Path that should be notified.\n         * @param {*=} value Value at the path (optional).\n         * @return {void}\n         * @public\n        */\n\n      }, {\n        key: 'notifyPath',\n        value: function notifyPath(path, value) {\n          /** @type {string} */\n          var propPath = void 0;\n          if (arguments.length == 1) {\n            // Get value if not supplied\n            var info = { path: '' };\n            value = Polymer.Path.get(this, path, info);\n            propPath = info.path;\n          } else if (Array.isArray(path)) {\n            // Normalize path if needed\n            propPath = Polymer.Path.normalize(path);\n          } else {\n            propPath = /** @type{string} */path;\n          }\n          if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n            this._invalidateProperties();\n          }\n        }\n\n        /**\n         * Equivalent to static `createReadOnlyProperty` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Property name\n         * @param {boolean=} protectedSetter Creates a custom protected setter\n         *   when `true`.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createReadOnlyProperty',\n        value: function _createReadOnlyProperty(property, protectedSetter) {\n          this._addPropertyEffect(property, TYPES.READ_ONLY);\n          if (protectedSetter) {\n            this['_set' + upper(property)] = /** @this {PropertyEffects} */function (value) {\n              this._setProperty(property, value);\n            };\n          }\n        }\n\n        /**\n         * Equivalent to static `createPropertyObserver` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Property name\n         * @param {string|function(*,*)} method Function or name of observer method to call\n         * @param {boolean=} dynamicFn Whether the method name should be included as\n         *   a dependency to the effect.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createPropertyObserver',\n        value: function _createPropertyObserver(property, method, dynamicFn) {\n          var info = { property: property, method: method, dynamicFn: Boolean(dynamicFn) };\n          this._addPropertyEffect(property, TYPES.OBSERVE, {\n            fn: runObserverEffect, info: info, trigger: { name: property }\n          });\n          if (dynamicFn) {\n            this._addPropertyEffect( /** @type {string} */method, TYPES.OBSERVE, {\n              fn: runObserverEffect, info: info, trigger: { name: method }\n            });\n          }\n        }\n\n        /**\n         * Equivalent to static `createMethodObserver` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} expression Method expression\n         * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n         *   whether method names should be included as a dependency to the effect.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createMethodObserver',\n        value: function _createMethodObserver(expression, dynamicFn) {\n          var sig = parseMethod(expression);\n          if (!sig) {\n            throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n          }\n          createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n        }\n\n        /**\n         * Equivalent to static `createNotifyingProperty` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Property name\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createNotifyingProperty',\n        value: function _createNotifyingProperty(property) {\n          this._addPropertyEffect(property, TYPES.NOTIFY, {\n            fn: runNotifyEffect,\n            info: {\n              eventName: CaseMap.camelToDashCase(property) + '-changed',\n              property: property\n            }\n          });\n        }\n\n        /**\n         * Equivalent to static `createReflectedProperty` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Property name\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createReflectedProperty',\n        value: function _createReflectedProperty(property) {\n          var attr = this.constructor.attributeNameForProperty(property);\n          if (attr[0] === '-') {\n            console.warn('Property ' + property + ' cannot be reflected to attribute ' + attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n          } else {\n            this._addPropertyEffect(property, TYPES.REFLECT, {\n              fn: runReflectEffect,\n              info: {\n                attrName: attr\n              }\n            });\n          }\n        }\n\n        /**\n         * Equivalent to static `createComputedProperty` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * @param {string} property Name of computed property to set\n         * @param {string} expression Method expression\n         * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n         *   whether method names should be included as a dependency to the effect.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_createComputedProperty',\n        value: function _createComputedProperty(property, expression, dynamicFn) {\n          var sig = parseMethod(expression);\n          if (!sig) {\n            throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n          }\n          createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n        }\n\n        // -- static class methods ------------\n\n        /**\n         * Ensures an accessor exists for the specified property, and adds\n         * to a list of \"property effects\" that will run when the accessor for\n         * the specified property is set.  Effects are grouped by \"type\", which\n         * roughly corresponds to a phase in effect processing.  The effect\n         * metadata should be in the following form:\n         *\n         *     {\n         *       fn: effectFunction, // Reference to function to call to perform effect\n         *       info: { ... }       // Effect metadata passed to function\n         *       trigger: {          // Optional triggering metadata; if not provided\n         *         name: string      // the property is treated as a wildcard\n         *         structured: boolean\n         *         wildcard: boolean\n         *       }\n         *     }\n         *\n         * Effects are called from `_propertiesChanged` in the following order by\n         * type:\n         *\n         * 1. COMPUTE\n         * 2. PROPAGATE\n         * 3. REFLECT\n         * 4. OBSERVE\n         * 5. NOTIFY\n         *\n         * Effect functions are called with the following signature:\n         *\n         *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n         *\n         * @param {string} property Property that should trigger the effect\n         * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n         * @param {Object=} effect Effect metadata object\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_bindTemplate',\n\n\n        // -- binding ----------------------------------------------\n\n        /**\n         * Equivalent to static `bindTemplate` API but can be called on\n         * an instance to add effects at runtime.  See that method for\n         * full API docs.\n         *\n         * This method may be called on the prototype (for prototypical template\n         * binding, to avoid creating accessors every instance) once per prototype,\n         * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n         * create and link an instance of the template metadata associated with a\n         * particular stamping.\n         *\n         * @param {!HTMLTemplateElement} template Template containing binding\n         *   bindings\n         * @param {boolean=} instanceBinding When false (default), performs\n         *   \"prototypical\" binding of the template and overwrites any previously\n         *   bound template for the class. When true (as passed from\n         *   `_stampTemplate`), the template info is instanced and linked into\n         *   the list of bound templates.\n         * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n         *   this is an instance of the prototypical template info\n         * @protected\n         */\n        value: function _bindTemplate(template, instanceBinding) {\n          var templateInfo = this.constructor._parseTemplate(template);\n          var wasPreBound = this.__templateInfo == templateInfo;\n          // Optimization: since this is called twice for proto-bound templates,\n          // don't attempt to recreate accessors if this template was pre-bound\n          if (!wasPreBound) {\n            for (var prop in templateInfo.propertyEffects) {\n              this._createPropertyAccessor(prop);\n            }\n          }\n          if (instanceBinding) {\n            // For instance-time binding, create instance of template metadata\n            // and link into list of templates if necessary\n            templateInfo = /** @type {!TemplateInfo} */Object.create(templateInfo);\n            templateInfo.wasPreBound = wasPreBound;\n            if (!wasPreBound && this.__templateInfo) {\n              var last = this.__templateInfoLast || this.__templateInfo;\n              this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n              templateInfo.previousTemplateInfo = last;\n              return templateInfo;\n            }\n          }\n          return this.__templateInfo = templateInfo;\n        }\n\n        /**\n         * Adds a property effect to the given template metadata, which is run\n         * at the \"propagate\" stage of `_propertiesChanged` when the template\n         * has been bound to the element via `_bindTemplate`.\n         *\n         * The `effect` object should match the format in `_addPropertyEffect`.\n         *\n         * @param {Object} templateInfo Template metadata to add effect to\n         * @param {string} prop Property that should trigger the effect\n         * @param {Object=} effect Effect metadata object\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_stampTemplate',\n\n\n        /**\n         * Stamps the provided template and performs instance-time setup for\n         * Polymer template features, including data bindings, declarative event\n         * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n         * is returned containing the stamped DOM, ready for insertion into the\n         * DOM.\n         *\n         * This method may be called more than once; however note that due to\n         * `shadycss` polyfill limitations, only styles from templates prepared\n         * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n         * to the shadow root and support CSS custom properties), and note that\n         * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n         * any styles required by in runtime-stamped templates must be included\n         * in the main element template.\n         *\n         * @param {!HTMLTemplateElement} template Template to stamp\n         * @return {!StampedTemplate} Cloned template content\n         * @override\n         * @protected\n         */\n        value: function _stampTemplate(template) {\n          // Ensures that created dom is `_enqueueClient`'d to this element so\n          // that it can be flushed on next call to `_flushProperties`\n          hostStack.beginHosting(this);\n          var dom = _get(PropertyEffects.prototype.__proto__ || Object.getPrototypeOf(PropertyEffects.prototype), '_stampTemplate', this).call(this, template);\n          hostStack.endHosting(this);\n          var templateInfo = /** @type {!TemplateInfo} */this._bindTemplate(template, true);\n          // Add template-instance-specific data to instanced templateInfo\n          templateInfo.nodeList = dom.nodeList;\n          // Capture child nodes to allow unstamping of non-prototypical templates\n          if (!templateInfo.wasPreBound) {\n            var nodes = templateInfo.childNodes = [];\n            for (var n = dom.firstChild; n; n = n.nextSibling) {\n              nodes.push(n);\n            }\n          }\n          dom.templateInfo = templateInfo;\n          // Setup compound storage, 2-way listeners, and dataHost for bindings\n          setupBindings(this, templateInfo);\n          // Flush properties into template nodes if already booted\n          if (this.__dataReady) {\n            runEffects(this, templateInfo.propertyEffects, this.__data, null, false, templateInfo.nodeList);\n          }\n          return dom;\n        }\n\n        /**\n         * Removes and unbinds the nodes previously contained in the provided\n         * DocumentFragment returned from `_stampTemplate`.\n         *\n         * @param {!StampedTemplate} dom DocumentFragment previously returned\n         *   from `_stampTemplate` associated with the nodes to be removed\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: '_removeBoundDom',\n        value: function _removeBoundDom(dom) {\n          // Unlink template info\n          var templateInfo = dom.templateInfo;\n          if (templateInfo.previousTemplateInfo) {\n            templateInfo.previousTemplateInfo.nextTemplateInfo = templateInfo.nextTemplateInfo;\n          }\n          if (templateInfo.nextTemplateInfo) {\n            templateInfo.nextTemplateInfo.previousTemplateInfo = templateInfo.previousTemplateInfo;\n          }\n          if (this.__templateInfoLast == templateInfo) {\n            this.__templateInfoLast = templateInfo.previousTemplateInfo;\n          }\n          templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n          // Remove stamped nodes\n          var nodes = templateInfo.childNodes;\n          for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.parentNode.removeChild(node);\n          }\n        }\n\n        /**\n         * Overrides default `TemplateStamp` implementation to add support for\n         * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n         * array is added to `nodeInfo` and populated with binding metadata\n         * with information capturing the binding target, and a `parts` array\n         * with one or more metadata objects capturing the source(s) of the\n         * binding.\n         *\n         * @override\n         * @param {Node} node Node to parse\n         * @param {TemplateInfo} templateInfo Template metadata for current template\n         * @param {NodeInfo} nodeInfo Node metadata for current template node\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         * @protected\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n\n      }, {\n        key: 'PROPERTY_EFFECT_TYPES',\n        get: function get() {\n          return TYPES;\n        }\n      }], [{\n        key: 'addPropertyEffect',\n        value: function addPropertyEffect(property, type, effect) {\n          this.prototype._addPropertyEffect(property, type, effect);\n        }\n\n        /**\n         * Creates a single-property observer for the given property.\n         *\n         * @param {string} property Property name\n         * @param {string|function(*,*)} method Function or name of observer method to call\n         * @param {boolean=} dynamicFn Whether the method name should be included as\n         *   a dependency to the effect.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createPropertyObserver',\n        value: function createPropertyObserver(property, method, dynamicFn) {\n          this.prototype._createPropertyObserver(property, method, dynamicFn);\n        }\n\n        /**\n         * Creates a multi-property \"method observer\" based on the provided\n         * expression, which should be a string in the form of a normal JavaScript\n         * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n         * should correspond to a property or path in the context of this\n         * prototype (or instance), or may be a literal string or number.\n         *\n         * @param {string} expression Method expression\n         * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n         * @return {void}\n         *   whether method names should be included as a dependency to the effect.\n         * @protected\n         */\n\n      }, {\n        key: 'createMethodObserver',\n        value: function createMethodObserver(expression, dynamicFn) {\n          this.prototype._createMethodObserver(expression, dynamicFn);\n        }\n\n        /**\n         * Causes the setter for the given property to dispatch `<property>-changed`\n         * events to notify of changes to the property.\n         *\n         * @param {string} property Property name\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createNotifyingProperty',\n        value: function createNotifyingProperty(property) {\n          this.prototype._createNotifyingProperty(property);\n        }\n\n        /**\n         * Creates a read-only accessor for the given property.\n         *\n         * To set the property, use the protected `_setProperty` API.\n         * To create a custom protected setter (e.g. `_setMyProp()` for\n         * property `myProp`), pass `true` for `protectedSetter`.\n         *\n         * Note, if the property will have other property effects, this method\n         * should be called first, before adding other effects.\n         *\n         * @param {string} property Property name\n         * @param {boolean=} protectedSetter Creates a custom protected setter\n         *   when `true`.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createReadOnlyProperty',\n        value: function createReadOnlyProperty(property, protectedSetter) {\n          this.prototype._createReadOnlyProperty(property, protectedSetter);\n        }\n\n        /**\n         * Causes the setter for the given property to reflect the property value\n         * to a (dash-cased) attribute of the same name.\n         *\n         * @param {string} property Property name\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createReflectedProperty',\n        value: function createReflectedProperty(property) {\n          this.prototype._createReflectedProperty(property);\n        }\n\n        /**\n         * Creates a computed property whose value is set to the result of the\n         * method described by the given `expression` each time one or more\n         * arguments to the method changes.  The expression should be a string\n         * in the form of a normal JavaScript function signature:\n         * `'methodName(arg1, [..., argn])'`\n         *\n         * @param {string} property Name of computed property to set\n         * @param {string} expression Method expression\n         * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n         *   method names should be included as a dependency to the effect.\n         * @return {void}\n         * @protected\n         */\n\n      }, {\n        key: 'createComputedProperty',\n        value: function createComputedProperty(property, expression, dynamicFn) {\n          this.prototype._createComputedProperty(property, expression, dynamicFn);\n        }\n\n        /**\n         * Parses the provided template to ensure binding effects are created\n         * for them, and then ensures property accessors are created for any\n         * dependent properties in the template.  Binding effects for bound\n         * templates are stored in a linked list on the instance so that\n         * templates can be efficiently stamped and unstamped.\n         *\n         * @param {!HTMLTemplateElement} template Template containing binding\n         *   bindings\n         * @return {!TemplateInfo} Template metadata object\n         * @protected\n         */\n\n      }, {\n        key: 'bindTemplate',\n        value: function bindTemplate(template) {\n          return this.prototype._bindTemplate(template);\n        }\n      }, {\n        key: '_addTemplatePropertyEffect',\n        value: function _addTemplatePropertyEffect(templateInfo, prop, effect) {\n          var hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n          hostProps[prop] = true;\n          var effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n          var propEffects = effects[prop] = effects[prop] || [];\n          propEffects.push(effect);\n        }\n      }, {\n        key: '_parseTemplateNode',\n        value: function _parseTemplateNode(node, templateInfo, nodeInfo) {\n          var noted = _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNode', this).call(this, node, templateInfo, nodeInfo);\n          if (node.nodeType === Node.TEXT_NODE) {\n            var parts = this._parseBindings(node.textContent, templateInfo);\n            if (parts) {\n              // Initialize the textContent with any literal parts\n              // NOTE: default to a space here so the textNode remains; some browsers\n              // (IE) omit an empty textNode following cloneNode/importNode.\n              node.textContent = literalFromParts(parts) || ' ';\n              addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n              noted = true;\n            }\n          }\n          return noted;\n        }\n\n        /**\n         * Overrides default `TemplateStamp` implementation to add support for\n         * parsing bindings from attributes.  A `bindings`\n         * array is added to `nodeInfo` and populated with binding metadata\n         * with information capturing the binding target, and a `parts` array\n         * with one or more metadata objects capturing the source(s) of the\n         * binding.\n         *\n         * @override\n         * @param {Element} node Node to parse\n         * @param {TemplateInfo} templateInfo Template metadata for current template\n         * @param {NodeInfo} nodeInfo Node metadata for current template node\n         * @param {string} name Attribute name\n         * @param {string} value Attribute value\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         * @protected\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n\n      }, {\n        key: '_parseTemplateNodeAttribute',\n        value: function _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n          var parts = this._parseBindings(value, templateInfo);\n          if (parts) {\n            // Attribute or property\n            var origName = name;\n            var kind = 'property';\n            if (name[name.length - 1] == '$') {\n              name = name.slice(0, -1);\n              kind = 'attribute';\n            }\n            // Initialize attribute bindings with any literal parts\n            var literal = literalFromParts(parts);\n            if (literal && kind == 'attribute') {\n              node.setAttribute(name, literal);\n            }\n            // Clear attribute before removing, since IE won't allow removing\n            // `value` attribute if it previously had a value (can't\n            // unconditionally set '' before removing since attributes with `$`\n            // can't be set using setAttribute)\n            if (node.localName === 'input' && origName === 'value') {\n              node.setAttribute(origName, '');\n            }\n            // Remove annotation\n            node.removeAttribute(origName);\n            // Case hackery: attributes are lower-case, but bind targets\n            // (properties) are case sensitive. Gambit is to map dash-case to\n            // camel-case: `foo-bar` becomes `fooBar`.\n            // Attribute bindings are excepted.\n            if (kind === 'property') {\n              name = Polymer.CaseMap.dashToCamelCase(name);\n            }\n            addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n            return true;\n          } else {\n            return _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNodeAttribute', this).call(this, node, templateInfo, nodeInfo, name, value);\n          }\n        }\n\n        /**\n         * Overrides default `TemplateStamp` implementation to add support for\n         * binding the properties that a nested template depends on to the template\n         * as `_host_<property>`.\n         *\n         * @override\n         * @param {Node} node Node to parse\n         * @param {TemplateInfo} templateInfo Template metadata for current template\n         * @param {NodeInfo} nodeInfo Node metadata for current template node\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         * @protected\n         * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n         */\n\n      }, {\n        key: '_parseTemplateNestedTemplate',\n        value: function _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n          var noted = _get(PropertyEffects.__proto__ || Object.getPrototypeOf(PropertyEffects), '_parseTemplateNestedTemplate', this).call(this, node, templateInfo, nodeInfo);\n          // Merge host props into outer template and add bindings\n          var hostProps = nodeInfo.templateInfo.hostProps;\n          var mode = '{';\n          for (var source in hostProps) {\n            var parts = [{ mode: mode, source: source, dependencies: [source] }];\n            addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n          }\n          return noted;\n        }\n\n        /**\n         * Called to parse text in a template (either attribute values or\n         * textContent) into binding metadata.\n         *\n         * Any overrides of this method should return an array of binding part\n         * metadata  representing one or more bindings found in the provided text\n         * and any \"literal\" text in between.  Any non-literal parts will be passed\n         * to `_evaluateBinding` when any dependencies change.  The only required\n         * fields of each \"part\" in the returned array are as follows:\n         *\n         * - `dependencies` - Array containing trigger metadata for each property\n         *   that should trigger the binding to update\n         * - `literal` - String containing text if the part represents a literal;\n         *   in this case no `dependencies` are needed\n         *\n         * Additional metadata for use by `_evaluateBinding` may be provided in\n         * each part object as needed.\n         *\n         * The default implementation handles the following types of bindings\n         * (one or more may be intermixed with literal strings):\n         * - Property binding: `[[prop]]`\n         * - Path binding: `[[object.prop]]`\n         * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n         * - Two-way property or path bindings (supports negation):\n         *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n         * - Inline computed method (supports negation):\n         *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n         *\n         * @param {string} text Text to parse from attribute or textContent\n         * @param {Object} templateInfo Current template metadata\n         * @return {Array<!BindingPart>} Array of binding part metadata\n         * @protected\n         */\n\n      }, {\n        key: '_parseBindings',\n        value: function _parseBindings(text, templateInfo) {\n          var parts = [];\n          var lastIndex = 0;\n          var m = void 0;\n          // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n          // Regex matches:\n          //        Iteration 1:  Iteration 2:\n          // m[1]: '{{'          '[['\n          // m[2]: ''            '!'\n          // m[3]: 'prop'        'compute(foo,bar)'\n          while ((m = bindingRegex.exec(text)) !== null) {\n            // Add literal part\n            if (m.index > lastIndex) {\n              parts.push({ literal: text.slice(lastIndex, m.index) });\n            }\n            // Add binding part\n            var mode = m[1][0];\n            var negate = Boolean(m[2]);\n            var source = m[3].trim();\n            var customEvent = false,\n                notifyEvent = '',\n                colon = -1;\n            if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n              notifyEvent = source.substring(colon + 2);\n              source = source.substring(0, colon);\n              customEvent = true;\n            }\n            var signature = parseMethod(source);\n            var dependencies = [];\n            if (signature) {\n              // Inline computed function\n              var args = signature.args,\n                  methodName = signature.methodName;\n\n              for (var i = 0; i < args.length; i++) {\n                var arg = args[i];\n                if (!arg.literal) {\n                  dependencies.push(arg);\n                }\n              }\n              var dynamicFns = templateInfo.dynamicFns;\n              if (dynamicFns && dynamicFns[methodName] || signature.static) {\n                dependencies.push(methodName);\n                signature.dynamicFn = true;\n              }\n            } else {\n              // Property or path\n              dependencies.push(source);\n            }\n            parts.push({\n              source: source, mode: mode, negate: negate, customEvent: customEvent, signature: signature, dependencies: dependencies,\n              event: notifyEvent\n            });\n            lastIndex = bindingRegex.lastIndex;\n          }\n          // Add a final literal part\n          if (lastIndex && lastIndex < text.length) {\n            var literal = text.substring(lastIndex);\n            if (literal) {\n              parts.push({\n                literal: literal\n              });\n            }\n          }\n          if (parts.length) {\n            return parts;\n          } else {\n            return null;\n          }\n        }\n\n        /**\n         * Called to evaluate a previously parsed binding part based on a set of\n         * one or more changed dependencies.\n         *\n         * @param {this} inst Element that should be used as scope for\n         *   binding dependencies\n         * @param {BindingPart} part Binding part metadata\n         * @param {string} path Property/path that triggered this effect\n         * @param {Object} props Bag of current property changes\n         * @param {Object} oldProps Bag of previous values for changed properties\n         * @param {boolean} hasPaths True with `props` contains one or more paths\n         * @return {*} Value the binding part evaluated to\n         * @protected\n         */\n\n      }, {\n        key: '_evaluateBinding',\n        value: function _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n          var value = void 0;\n          if (part.signature) {\n            value = runMethodEffect(inst, path, props, oldProps, part.signature);\n          } else if (path != part.source) {\n            value = Polymer.Path.get(inst, part.source);\n          } else {\n            if (hasPaths && Polymer.Path.isPath(path)) {\n              value = Polymer.Path.get(inst, path);\n            } else {\n              value = inst.__data[path];\n            }\n          }\n          if (part.negate) {\n            value = !value;\n          }\n          return value;\n        }\n      }]);\n\n      return PropertyEffects;\n    }(propertyEffectsBase);\n\n    // make a typing for closure :P\n\n\n    PropertyEffectsType = PropertyEffects;\n\n    return PropertyEffects;\n  });\n\n  /**\n   * Helper api for enqueuing client dom created by a host element.\n   *\n   * By default elements are flushed via `_flushProperties` when\n   * `connectedCallback` is called. Elements attach their client dom to\n   * themselves at `ready` time which results from this first flush.\n   * This provides an ordering guarantee that the client dom an element\n   * creates is flushed before the element itself (i.e. client `ready`\n   * fires before host `ready`).\n   *\n   * However, if `_flushProperties` is called *before* an element is connected,\n   * as for example `Templatize` does, this ordering guarantee cannot be\n   * satisfied because no elements are connected. (Note: Bound elements that\n   * receive data do become enqueued clients and are properly ordered but\n   * unbound elements are not.)\n   *\n   * To maintain the desired \"client before host\" ordering guarantee for this\n   * case we rely on the \"host stack. Client nodes registers themselves with\n   * the creating host element when created. This ensures that all client dom\n   * is readied in the proper order, maintaining the desired guarantee.\n   *\n   * @private\n   */\n  var hostStack = {\n\n    stack: [],\n\n    /**\n     * @param {*} inst Instance to add to hostStack\n     * @return {void}\n     * @this {hostStack}\n     */\n    registerHost: function registerHost(inst) {\n      if (this.stack.length) {\n        var host = this.stack[this.stack.length - 1];\n        host._enqueueClient(inst);\n      }\n    },\n\n\n    /**\n     * @param {*} inst Instance to begin hosting\n     * @return {void}\n     * @this {hostStack}\n     */\n    beginHosting: function beginHosting(inst) {\n      this.stack.push(inst);\n    },\n\n\n    /**\n     * @param {*} inst Instance to end hosting\n     * @return {void}\n     * @this {hostStack}\n     */\n    endHosting: function endHosting(inst) {\n      var stackLen = this.stack.length;\n      if (stackLen && this.stack[stackLen - 1] == inst) {\n        this.stack.pop();\n      }\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/property-effects.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/mixins/template-stamp.html":
/*!*****************************************************************!*\
  !*** ./bower_components/polymer/lib/mixins/template-stamp.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n(function () {\n\n  'use strict';\n\n  // 1.x backwards-compatible auto-wrapper for template type extensions\n  // This is a clear layering violation and gives favored-nation status to\n  // dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n  // a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n  // b.) to maintain if/repeat capability in parser-constrained elements\n  //     (e.g. table, select) in lieu of native CE type extensions without\n  //     massive new invention in this space (e.g. directive system)\n\n  var templateExtensions = {\n    'dom-if': true,\n    'dom-repeat': true\n  };\n  function wrapTemplateExtension(node) {\n    var is = node.getAttribute('is');\n    if (is && templateExtensions[is]) {\n      var t = node;\n      t.removeAttribute('is');\n      node = t.ownerDocument.createElement(is);\n      t.parentNode.replaceChild(node, t);\n      node.appendChild(t);\n      while (t.attributes.length) {\n        node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n        t.removeAttribute(t.attributes[0].name);\n      }\n    }\n    return node;\n  }\n\n  function findTemplateNode(root, nodeInfo) {\n    // recursively ascend tree until we hit root\n    var parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n    // unwind the stack, returning the indexed node at each level\n    if (parent) {\n      // note: marginally faster than indexing via childNodes\n      // (http://jsperf.com/childnodes-lookup)\n      for (var n = parent.firstChild, i = 0; n; n = n.nextSibling) {\n        if (nodeInfo.parentIndex === i++) {\n          return n;\n        }\n      }\n    } else {\n      return root;\n    }\n  }\n\n  // construct `$` map (from id annotations)\n  function applyIdToMap(inst, map, node, nodeInfo) {\n    if (nodeInfo.id) {\n      map[nodeInfo.id] = node;\n    }\n  }\n\n  // install event listeners (from event annotations)\n  function applyEventListener(inst, node, nodeInfo) {\n    if (nodeInfo.events && nodeInfo.events.length) {\n      for (var j = 0, e$ = nodeInfo.events, e; j < e$.length && (e = e$[j]); j++) {\n        inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n      }\n    }\n  }\n\n  // push configuration references at configure time\n  function applyTemplateContent(inst, node, nodeInfo) {\n    if (nodeInfo.templateInfo) {\n      node._templateInfo = nodeInfo.templateInfo;\n    }\n  }\n\n  function createNodeEventHandler(context, eventName, methodName) {\n    // Instances can optionally have a _methodHost which allows redirecting where\n    // to find methods. Currently used by `templatize`.\n    context = context._methodHost || context;\n    var handler = function handler(e) {\n      if (context[methodName]) {\n        context[methodName](e, e.detail);\n      } else {\n        console.warn('listener method `' + methodName + '` not defined');\n      }\n    };\n    return handler;\n  }\n\n  /**\n   * Element mixin that provides basic template parsing and stamping, including\n   * the following template-related features for stamped templates:\n   *\n   * - Declarative event listeners (`on-eventname=\"listener\"`)\n   * - Map of node id's to stamped node instances (`this.$.id`)\n   * - Nested template content caching/removal and re-installation (performance\n   *   optimization)\n   *\n   * @mixinFunction\n   * @polymer\n   * @memberof Polymer\n   * @summary Element class mixin that provides basic template parsing and stamping\n   */\n  Polymer.TemplateStamp = Polymer.dedupingMixin(function (superClass) {\n\n    /**\n     * @polymer\n     * @mixinClass\n     * @implements {Polymer_TemplateStamp}\n     */\n    var TemplateStamp = function (_superClass) {\n      _inherits(TemplateStamp, _superClass);\n\n      function TemplateStamp() {\n        _classCallCheck(this, TemplateStamp);\n\n        return _possibleConstructorReturn(this, (TemplateStamp.__proto__ || Object.getPrototypeOf(TemplateStamp)).apply(this, arguments));\n      }\n\n      _createClass(TemplateStamp, [{\n        key: '_stampTemplate',\n\n\n        /**\n         * Clones the provided template content and returns a document fragment\n         * containing the cloned dom.\n         *\n         * The template is parsed (once and memoized) using this library's\n         * template parsing features, and provides the following value-added\n         * features:\n         * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n         * * Generates an \"id map\" for all nodes with id's under `$` on returned\n         *   document fragment\n         * * Passes template info including `content` back to templates as\n         *   `_templateInfo` (a performance optimization to avoid deep template\n         *   cloning)\n         *\n         * Note that the memoized template parsing process is destructive to the\n         * template: attributes for bindings and declarative event listeners are\n         * removed after being noted in notes, and any nested `<template>.content`\n         * is removed and stored in notes as well.\n         *\n         * @param {!HTMLTemplateElement} template Template to stamp\n         * @return {!StampedTemplate} Cloned template content\n         */\n        value: function _stampTemplate(template) {\n          // Polyfill support: bootstrap the template if it has not already been\n          if (template && !template.content && window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n            HTMLTemplateElement.decorate(template);\n          }\n          var templateInfo = this.constructor._parseTemplate(template);\n          var nodeInfo = templateInfo.nodeInfoList;\n          var content = templateInfo.content || template.content;\n          var dom = /** @type {DocumentFragment} */document.importNode(content, true);\n          // NOTE: ShadyDom optimization indicating there is an insertion point\n          dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n          var nodes = dom.nodeList = new Array(nodeInfo.length);\n          dom.$ = {};\n          for (var i = 0, l = nodeInfo.length, info; i < l && (info = nodeInfo[i]); i++) {\n            var node = nodes[i] = findTemplateNode(dom, info);\n            applyIdToMap(this, dom.$, node, info);\n            applyTemplateContent(this, node, info);\n            applyEventListener(this, node, info);\n          }\n          dom = /** @type {!StampedTemplate} */dom; // eslint-disable-line no-self-assign\n          return dom;\n        }\n\n        /**\n         * Adds an event listener by method name for the event provided.\n         *\n         * This method generates a handler function that looks up the method\n         * name at handling time.\n         *\n         * @param {!Node} node Node to add listener on\n         * @param {string} eventName Name of event\n         * @param {string} methodName Name of method\n         * @param {*=} context Context the method will be called on (defaults\n         *   to `node`)\n         * @return {Function} Generated handler function\n         */\n\n      }, {\n        key: '_addMethodEventListenerToNode',\n        value: function _addMethodEventListenerToNode(node, eventName, methodName, context) {\n          context = context || node;\n          var handler = createNodeEventHandler(context, eventName, methodName);\n          this._addEventListenerToNode(node, eventName, handler);\n          return handler;\n        }\n\n        /**\n         * Override point for adding custom or simulated event handling.\n         *\n         * @param {!Node} node Node to add event listener to\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to add\n         * @return {void}\n         */\n\n      }, {\n        key: '_addEventListenerToNode',\n        value: function _addEventListenerToNode(node, eventName, handler) {\n          node.addEventListener(eventName, handler);\n        }\n\n        /**\n         * Override point for adding custom or simulated event handling.\n         *\n         * @param {Node} node Node to remove event listener from\n         * @param {string} eventName Name of event\n         * @param {function(!Event):void} handler Listener function to remove\n         * @return {void}\n         */\n\n      }, {\n        key: '_removeEventListenerFromNode',\n        value: function _removeEventListenerFromNode(node, eventName, handler) {\n          node.removeEventListener(eventName, handler);\n        }\n      }], [{\n        key: '_parseTemplate',\n\n\n        /**\n         * Scans a template to produce template metadata.\n         *\n         * Template-specific metadata are stored in the object returned, and node-\n         * specific metadata are stored in objects in its flattened `nodeInfoList`\n         * array.  Only nodes in the template that were parsed as nodes of\n         * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n         * contains an `index` (`childNodes` index in parent) and optionally\n         * `parent`, which points to node info of its parent (including its index).\n         *\n         * The template metadata object returned from this method has the following\n         * structure (many fields optional):\n         *\n         * ```js\n         *   {\n         *     // Flattened list of node metadata (for nodes that generated metadata)\n         *     nodeInfoList: [\n         *       {\n         *         // `id` attribute for any nodes with id's for generating `$` map\n         *         id: {string},\n         *         // `on-event=\"handler\"` metadata\n         *         events: [\n         *           {\n         *             name: {string},   // event name\n         *             value: {string},  // handler method name\n         *           }, ...\n         *         ],\n         *         // Notes when the template contained a `<slot>` for shady DOM\n         *         // optimization purposes\n         *         hasInsertionPoint: {boolean},\n         *         // For nested `<template>`` nodes, nested template metadata\n         *         templateInfo: {object}, // nested template metadata\n         *         // Metadata to allow efficient retrieval of instanced node\n         *         // corresponding to this metadata\n         *         parentInfo: {number},   // reference to parent nodeInfo>\n         *         parentIndex: {number},  // index in parent's `childNodes` collection\n         *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n         *       },\n         *       ...\n         *     ],\n         *     // When true, the template had the `strip-whitespace` attribute\n         *     // or was nested in a template with that setting\n         *     stripWhitespace: {boolean},\n         *     // For nested templates, nested template content is moved into\n         *     // a document fragment stored here; this is an optimization to\n         *     // avoid the cost of nested template cloning\n         *     content: {DocumentFragment}\n         *   }\n         * ```\n         *\n         * This method kicks off a recursive treewalk as follows:\n         *\n         * ```\n         *    _parseTemplate <---------------------+\n         *      _parseTemplateContent              |\n         *        _parseTemplateNode  <------------|--+\n         *          _parseTemplateNestedTemplate --+  |\n         *          _parseTemplateChildNodes ---------+\n         *          _parseTemplateNodeAttributes\n         *            _parseTemplateNodeAttribute\n         *\n         * ```\n         *\n         * These methods may be overridden to add custom metadata about templates\n         * to either `templateInfo` or `nodeInfo`.\n         *\n         * Note that this method may be destructive to the template, in that\n         * e.g. event annotations may be removed after being noted in the\n         * template metadata.\n         *\n         * @param {!HTMLTemplateElement} template Template to parse\n         * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n         *   template, for parsing nested templates\n         * @return {!TemplateInfo} Parsed template metadata\n         */\n        value: function _parseTemplate(template, outerTemplateInfo) {\n          // since a template may be re-used, memo-ize metadata\n          if (!template._templateInfo) {\n            var templateInfo = template._templateInfo = {};\n            templateInfo.nodeInfoList = [];\n            templateInfo.stripWhiteSpace = outerTemplateInfo && outerTemplateInfo.stripWhiteSpace || template.hasAttribute('strip-whitespace');\n            this._parseTemplateContent(template, templateInfo, { parent: null });\n          }\n          return template._templateInfo;\n        }\n      }, {\n        key: '_parseTemplateContent',\n        value: function _parseTemplateContent(template, templateInfo, nodeInfo) {\n          return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n        }\n\n        /**\n         * Parses template node and adds template and node metadata based on\n         * the current node, and its `childNodes` and `attributes`.\n         *\n         * This method may be overridden to add custom node or template specific\n         * metadata based on this node.\n         *\n         * @param {Node} node Node to parse\n         * @param {!TemplateInfo} templateInfo Template metadata for current template\n         * @param {!NodeInfo} nodeInfo Node metadata for current template.\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         */\n\n      }, {\n        key: '_parseTemplateNode',\n        value: function _parseTemplateNode(node, templateInfo, nodeInfo) {\n          var noted = void 0;\n          var element = /** @type {Element} */node;\n          if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n            noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n          } else if (element.localName === 'slot') {\n            // For ShadyDom optimization, indicating there is an insertion point\n            templateInfo.hasInsertionPoint = true;\n          }\n          if (element.firstChild) {\n            noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n          }\n          if (element.hasAttributes && element.hasAttributes()) {\n            noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n          }\n          return noted;\n        }\n\n        /**\n         * Parses template child nodes for the given root node.\n         *\n         * This method also wraps whitelisted legacy template extensions\n         * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n         * wrappers, collapses text nodes, and strips whitespace from the template\n         * if the `templateInfo.stripWhitespace` setting was provided.\n         *\n         * @param {Node} root Root node whose `childNodes` will be parsed\n         * @param {!TemplateInfo} templateInfo Template metadata for current template\n         * @param {!NodeInfo} nodeInfo Node metadata for current template.\n         * @return {void}\n         */\n\n      }, {\n        key: '_parseTemplateChildNodes',\n        value: function _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n          if (root.localName === 'script' || root.localName === 'style') {\n            return;\n          }\n          for (var node = root.firstChild, parentIndex = 0, next; node; node = next) {\n            // Wrap templates\n            if (node.localName == 'template') {\n              node = wrapTemplateExtension(node);\n            }\n            // collapse adjacent textNodes: fixes an IE issue that can cause\n            // text nodes to be inexplicably split =(\n            // note that root.normalize() should work but does not so we do this\n            // manually.\n            next = node.nextSibling;\n            if (node.nodeType === Node.TEXT_NODE) {\n              var /** Node */n = next;\n              while (n && n.nodeType === Node.TEXT_NODE) {\n                node.textContent += n.textContent;\n                next = n.nextSibling;\n                root.removeChild(n);\n                n = next;\n              }\n              // optionally strip whitespace\n              if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n                root.removeChild(node);\n                continue;\n              }\n            }\n            var childInfo = { parentIndex: parentIndex, parentInfo: nodeInfo };\n            if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n              childInfo.infoIndex = templateInfo.nodeInfoList.push( /** @type {!NodeInfo} */childInfo) - 1;\n            }\n            // Increment if not removed\n            if (node.parentNode) {\n              parentIndex++;\n            }\n          }\n        }\n\n        /**\n         * Parses template content for the given nested `<template>`.\n         *\n         * Nested template info is stored as `templateInfo` in the current node's\n         * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n         * It will then be the responsibility of the host to set it back to the\n         * template and for users stamping nested templates to use the\n         * `_contentForTemplate` method to retrieve the content for this template\n         * (an optimization to avoid the cost of cloning nested template content).\n         *\n         * @param {HTMLTemplateElement} node Node to parse (a <template>)\n         * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n         *   that includes the template `node`\n         * @param {!NodeInfo} nodeInfo Node metadata for current template.\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         */\n\n      }, {\n        key: '_parseTemplateNestedTemplate',\n        value: function _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n          var templateInfo = this._parseTemplate(node, outerTemplateInfo);\n          var content = templateInfo.content = node.content.ownerDocument.createDocumentFragment();\n          content.appendChild(node.content);\n          nodeInfo.templateInfo = templateInfo;\n          return true;\n        }\n\n        /**\n         * Parses template node attributes and adds node metadata to `nodeInfo`\n         * for nodes of interest.\n         *\n         * @param {Element} node Node to parse\n         * @param {TemplateInfo} templateInfo Template metadata for current template\n         * @param {NodeInfo} nodeInfo Node metadata for current template.\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         */\n\n      }, {\n        key: '_parseTemplateNodeAttributes',\n        value: function _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n          // Make copy of original attribute list, since the order may change\n          // as attributes are added and removed\n          var noted = false;\n          var attrs = Array.from(node.attributes);\n          for (var i = attrs.length - 1, a; a = attrs[i]; i--) {\n            noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n          }\n          return noted;\n        }\n\n        /**\n         * Parses a single template node attribute and adds node metadata to\n         * `nodeInfo` for attributes of interest.\n         *\n         * This implementation adds metadata for `on-event=\"handler\"` attributes\n         * and `id` attributes.\n         *\n         * @param {Element} node Node to parse\n         * @param {!TemplateInfo} templateInfo Template metadata for current template\n         * @param {!NodeInfo} nodeInfo Node metadata for current template.\n         * @param {string} name Attribute name\n         * @param {string} value Attribute value\n         * @return {boolean} `true` if the visited node added node-specific\n         *   metadata to `nodeInfo`\n         */\n\n      }, {\n        key: '_parseTemplateNodeAttribute',\n        value: function _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n          // events (on-*)\n          if (name.slice(0, 3) === 'on-') {\n            node.removeAttribute(name);\n            nodeInfo.events = nodeInfo.events || [];\n            nodeInfo.events.push({\n              name: name.slice(3),\n              value: value\n            });\n            return true;\n          }\n          // static id\n          else if (name === 'id') {\n              nodeInfo.id = value;\n              return true;\n            }\n          return false;\n        }\n\n        /**\n         * Returns the `content` document fragment for a given template.\n         *\n         * For nested templates, Polymer performs an optimization to cache nested\n         * template content to avoid the cost of cloning deeply nested templates.\n         * This method retrieves the cached content for a given template.\n         *\n         * @param {HTMLTemplateElement} template Template to retrieve `content` for\n         * @return {DocumentFragment} Content fragment\n         */\n\n      }, {\n        key: '_contentForTemplate',\n        value: function _contentForTemplate(template) {\n          var templateInfo = /** @type {HTMLTemplateElementWithInfo} */template._templateInfo;\n          return templateInfo && templateInfo.content || template.content;\n        }\n      }]);\n\n      return TemplateStamp;\n    }(superClass);\n\n    return TemplateStamp;\n  });\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/mixins/template-stamp.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/array-splice.html":
/*!**************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/array-splice.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n\n  'use strict';\n\n  function newSplice(index, removed, addedCount) {\n    return {\n      index: index,\n      removed: removed,\n      addedCount: addedCount\n    };\n  }\n\n  var EDIT_LEAVE = 0;\n  var EDIT_UPDATE = 1;\n  var EDIT_ADD = 2;\n  var EDIT_DELETE = 3;\n\n  // Note: This function is *based* on the computation of the Levenshtein\n  // \"edit\" distance. The one change is that \"updates\" are treated as two\n  // edits - not one. With Array splices, an update is really a delete\n  // followed by an add. By retaining this, we optimize for \"keeping\" the\n  // maximum array items in the original array. For example:\n  //\n  //   'xxxx123' -> '123yyyy'\n  //\n  // With 1-edit updates, the shortest path would be just to update all seven\n  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n  // leaves the substring '123' intact.\n  function calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    var rowCount = oldEnd - oldStart + 1;\n    var columnCount = currentEnd - currentStart + 1;\n    var distances = new Array(rowCount);\n\n    // \"Addition\" rows. Initialize null column.\n    for (var i = 0; i < rowCount; i++) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    // Initialize null row\n    for (var j = 0; j < columnCount; j++) {\n      distances[0][j] = j;\n    }for (var _i = 1; _i < rowCount; _i++) {\n      for (var _j = 1; _j < columnCount; _j++) {\n        if (equals(current[currentStart + _j - 1], old[oldStart + _i - 1])) distances[_i][_j] = distances[_i - 1][_j - 1];else {\n          var north = distances[_i - 1][_j] + 1;\n          var west = distances[_i][_j - 1] + 1;\n          distances[_i][_j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  }\n\n  // This starts at the final weight, and walks \"backward\" by finding\n  // the minimum previous weight recursively until the origin of the weight\n  // matrix.\n  function spliceOperationsFromEditDistances(distances) {\n    var i = distances.length - 1;\n    var j = distances[0].length - 1;\n    var current = distances[i][j];\n    var edits = [];\n    while (i > 0 || j > 0) {\n      if (i == 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j == 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      var northWest = distances[i - 1][j - 1];\n      var west = distances[i - 1][j];\n      var north = distances[i][j - 1];\n\n      var min = void 0;\n      if (west < north) min = west < northWest ? west : northWest;else min = north < northWest ? north : northWest;\n\n      if (min == northWest) {\n        if (northWest == current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min == west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  }\n\n  /**\n   * Splice Projection functions:\n   *\n   * A splice map is a representation of how a previous array of items\n   * was transformed into a new array of items. Conceptually it is a list of\n   * tuples of\n   *\n   *   <index, removed, addedCount>\n   *\n   * which are kept in ascending index order of. The tuple represents that at\n   * the |index|, |removed| sequence of items were removed, and counting forward\n   * from |index|, |addedCount| items were added.\n   */\n\n  /**\n   * Lacking individual splice mutation information, the minimal set of\n   * splices can be synthesized given the previous state and final state of an\n   * array. The basic approach is to calculate the edit distance matrix and\n   * choose the shortest path through it.\n   *\n   * Complexity: O(l * p)\n   *   l: The length of the current array\n   *   p: The length of the old array\n   *\n   * @param {!Array} current The current \"changed\" array for which to\n   * calculate splices.\n   * @param {number} currentStart Starting index in the `current` array for\n   * which splices are calculated.\n   * @param {number} currentEnd Ending index in the `current` array for\n   * which splices are calculated.\n   * @param {!Array} old The original \"unchanged\" array to compare `current`\n   * against to determine splices.\n   * @param {number} oldStart Starting index in the `old` array for\n   * which splices are calculated.\n   * @param {number} oldEnd Ending index in the `old` array for\n   * which splices are calculated.\n   * @return {!Array} Returns an array of splice record objects. Each of these\n   * contains: `index` the location where the splice occurred; `removed`\n   * the array of removed items from this location; `addedCount` the number\n   * of items added at this location.\n   */\n  function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    var prefixCount = 0;\n    var suffixCount = 0;\n    var splice = void 0;\n\n    var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart == 0 && oldStart == 0) prefixCount = sharedPrefix(current, old, minLength);\n\n    if (currentEnd == current.length && oldEnd == old.length) suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0) return [];\n\n    if (currentStart == currentEnd) {\n      splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd) {\n        splice.removed.push(old[oldStart++]);\n      }return [splice];\n    } else if (oldStart == oldEnd) return [newSplice(currentStart, [], currentEnd - currentStart)];\n\n    var ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n\n    splice = undefined;\n    var splices = [];\n    var index = currentStart;\n    var oldIndex = oldStart;\n    for (var i = 0; i < ops.length; i++) {\n      switch (ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice) splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice) splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice) splice = newSplice(index, [], 0);\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  }\n\n  function sharedPrefix(current, old, searchLength) {\n    for (var i = 0; i < searchLength; i++) {\n      if (!equals(current[i], old[i])) return i;\n    }return searchLength;\n  }\n\n  function sharedSuffix(current, old, searchLength) {\n    var index1 = current.length;\n    var index2 = old.length;\n    var count = 0;\n    while (count < searchLength && equals(current[--index1], old[--index2])) {\n      count++;\n    }return count;\n  }\n\n  function calculateSplices(current, previous) {\n    return calcSplices(current, 0, current.length, previous, 0, previous.length);\n  }\n\n  function equals(currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n\n  /**\n   * @namespace\n   * @memberof Polymer\n   * @summary Module that provides utilities for diffing arrays.\n   */\n  Polymer.ArraySplice = {\n    /**\n     * Returns an array of splice records indicating the minimum edits required\n     * to transform the `previous` array into the `current` array.\n     *\n     * Splice records are ordered by index and contain the following fields:\n     * - `index`: index where edit started\n     * - `removed`: array of removed items from this index\n     * - `addedCount`: number of items added at this index\n     *\n     * This function is based on the Levenshtein \"minimum edit distance\"\n     * algorithm. Note that updates are treated as removal followed by addition.\n     *\n     * The worst-case time complexity of this algorithm is `O(l * p)`\n     *   l: The length of the current array\n     *   p: The length of the previous array\n     *\n     * However, the worst-case complexity is reduced by an `O(n)` optimization\n     * to detect any shared prefix & suffix between the two arrays and only\n     * perform the more expensive minimum edit distance calculation over the\n     * non-shared portions of the arrays.\n     *\n     * @function\n     * @memberof Polymer.ArraySplice\n     * @param {!Array} current The \"changed\" array for which splices will be\n     * calculated.\n     * @param {!Array} previous The \"unchanged\" original array to compare\n     * `current` against to determine the splices.\n     * @return {!Array} Returns an array of splice record objects. Each of these\n     * contains: `index` the location where the splice occurred; `removed`\n     * the array of removed items from this location; `addedCount` the number\n     * of items added at this location.\n     */\n    calculateSplices: calculateSplices\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/array-splice.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/async.html":
/*!*******************************************************!*\
  !*** ./bower_components/polymer/lib/utils/async.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n\n  'use strict';\n\n  // Microtask implemented using Mutation Observer\n\n  var microtaskCurrHandle = 0;\n  var microtaskLastHandle = 0;\n  var microtaskCallbacks = [];\n  var microtaskNodeContent = 0;\n  var microtaskNode = document.createTextNode('');\n  new window.MutationObserver(microtaskFlush).observe(microtaskNode, { characterData: true });\n\n  function microtaskFlush() {\n    var len = microtaskCallbacks.length;\n    for (var i = 0; i < len; i++) {\n      var cb = microtaskCallbacks[i];\n      if (cb) {\n        try {\n          cb();\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          });\n        }\n      }\n    }\n    microtaskCallbacks.splice(0, len);\n    microtaskLastHandle += len;\n  }\n\n  /**\n   * Module that provides a number of strategies for enqueuing asynchronous\n   * tasks.  Each sub-module provides a standard `run(fn)` interface that returns a\n   * handle, and a `cancel(handle)` interface for canceling async tasks before\n   * they run.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module that provides a number of strategies for enqueuing asynchronous\n   * tasks.\n   */\n  Polymer.Async = {\n\n    /**\n     * Async interface wrapper around `setTimeout`.\n     *\n     * @namespace\n     * @memberof Polymer.Async\n     * @summary Async interface wrapper around `setTimeout`.\n     */\n    timeOut: {\n      /**\n       * Returns a sub-module with the async interface providing the provided\n       * delay.\n       *\n       * @memberof Polymer.Async.timeOut\n       * @param {number=} delay Time to wait before calling callbacks in ms\n       * @return {!AsyncInterface} An async timeout interface\n       */\n      after: function after(delay) {\n        return {\n          run: function run(fn) {\n            return window.setTimeout(fn, delay);\n          },\n          cancel: function cancel(handle) {\n            window.clearTimeout(handle);\n          }\n        };\n      },\n\n      /**\n       * Enqueues a function called in the next task.\n       *\n       * @memberof Polymer.Async.timeOut\n       * @param {!Function} fn Callback to run\n       * @param {number=} delay Delay in milliseconds\n       * @return {number} Handle used for canceling task\n       */\n      run: function run(fn, delay) {\n        return window.setTimeout(fn, delay);\n      },\n\n      /**\n       * Cancels a previously enqueued `timeOut` callback.\n       *\n       * @memberof Polymer.Async.timeOut\n       * @param {number} handle Handle returned from `run` of callback to cancel\n       * @return {void}\n       */\n      cancel: function cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    },\n\n    /**\n     * Async interface wrapper around `requestAnimationFrame`.\n     *\n     * @namespace\n     * @memberof Polymer.Async\n     * @summary Async interface wrapper around `requestAnimationFrame`.\n     */\n    animationFrame: {\n      /**\n       * Enqueues a function called at `requestAnimationFrame` timing.\n       *\n       * @memberof Polymer.Async.animationFrame\n       * @param {function(number):void} fn Callback to run\n       * @return {number} Handle used for canceling task\n       */\n      run: function run(fn) {\n        return window.requestAnimationFrame(fn);\n      },\n\n      /**\n       * Cancels a previously enqueued `animationFrame` callback.\n       *\n       * @memberof Polymer.Async.animationFrame\n       * @param {number} handle Handle returned from `run` of callback to cancel\n       * @return {void}\n       */\n      cancel: function cancel(handle) {\n        window.cancelAnimationFrame(handle);\n      }\n    },\n\n    /**\n     * Async interface wrapper around `requestIdleCallback`.  Falls back to\n     * `setTimeout` on browsers that do not support `requestIdleCallback`.\n     *\n     * @namespace\n     * @memberof Polymer.Async\n     * @summary Async interface wrapper around `requestIdleCallback`.\n     */\n    idlePeriod: {\n      /**\n       * Enqueues a function called at `requestIdleCallback` timing.\n       *\n       * @memberof Polymer.Async.idlePeriod\n       * @param {function(!IdleDeadline):void} fn Callback to run\n       * @return {number} Handle used for canceling task\n       */\n      run: function run(fn) {\n        return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n      },\n\n      /**\n       * Cancels a previously enqueued `idlePeriod` callback.\n       *\n       * @memberof Polymer.Async.idlePeriod\n       * @param {number} handle Handle returned from `run` of callback to cancel\n       * @return {void}\n       */\n      cancel: function cancel(handle) {\n        window.cancelIdleCallback ? window.cancelIdleCallback(handle) : window.clearTimeout(handle);\n      }\n    },\n\n    /**\n     * Async interface for enqueuing callbacks that run at microtask timing.\n     *\n     * Note that microtask timing is achieved via a single `MutationObserver`,\n     * and thus callbacks enqueued with this API will all run in a single\n     * batch, and not interleaved with other microtasks such as promises.\n     * Promises are avoided as an implementation choice for the time being\n     * due to Safari bugs that cause Promises to lack microtask guarantees.\n     *\n     * @namespace\n     * @memberof Polymer.Async\n     * @summary Async interface for enqueuing callbacks that run at microtask\n     *   timing.\n     */\n    microTask: {\n\n      /**\n       * Enqueues a function called at microtask timing.\n       *\n       * @memberof Polymer.Async.microTask\n       * @param {!Function=} callback Callback to run\n       * @return {number} Handle used for canceling task\n       */\n      run: function run(callback) {\n        microtaskNode.textContent = microtaskNodeContent++;\n        microtaskCallbacks.push(callback);\n        return microtaskCurrHandle++;\n      },\n\n\n      /**\n       * Cancels a previously enqueued `microTask` callback.\n       *\n       * @memberof Polymer.Async.microTask\n       * @param {number} handle Handle returned from `run` of callback to cancel\n       * @return {void}\n       */\n      cancel: function cancel(handle) {\n        var idx = handle - microtaskLastHandle;\n        if (idx >= 0) {\n          if (!microtaskCallbacks[idx]) {\n            throw new Error('invalid async handle: ' + handle);\n          }\n          microtaskCallbacks[idx] = null;\n        }\n      }\n    }\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/async.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/boot.html":
/*!******************************************************!*\
  !*** ./bower_components/polymer/lib/utils/boot.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  var userPolymer = window.Polymer;\n\n  /**\n   * @namespace Polymer\n   * @summary Polymer is a lightweight library built on top of the web\n   *   standards-based Web Components API's, and makes it easy to build your\n   *   own custom HTML elements.\n   * @param {!PolymerInit} info Prototype for the custom element. It must contain\n   *   an `is` property to specify the element name. Other properties populate\n   *   the element prototype. The `properties`, `observers`, `hostAttributes`,\n   *   and `listeners` properties are processed to create element features.\n   * @return {!Object} Returns a custom element class for the given provided\n   *   prototype `info` object. The name of the element if given by `info.is`.\n   */\n  window.Polymer = function (info) {\n    return window.Polymer._polymerFn(info);\n  };\n\n  // support user settings on the Polymer object\n  if (userPolymer) {\n    Object.assign(Polymer, userPolymer);\n  }\n\n  // To be plugged by legacy implementation if loaded\n  /* eslint-disable valid-jsdoc */\n  /**\n   * @param {!PolymerInit} info Prototype for the custom element. It must contain\n   *   an `is` property to specify the element name. Other properties populate\n   *   the element prototype. The `properties`, `observers`, `hostAttributes`,\n   *   and `listeners` properties are processed to create element features.\n   * @return {!Object} Returns a custom element class for the given provided\n   *   prototype `info` object. The name of the element if given by `info.is`.\n   */\n  window.Polymer._polymerFn = function (info) {\n    // eslint-disable-line no-unused-vars\n    throw new Error('Load polymer.html to use the Polymer() function.');\n  };\n  /* eslint-enable */\n\n  window.Polymer.version = '2.5.0';\n\n  /* eslint-disable no-unused-vars */\n  /*\n  When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n  We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n  */\n  window.JSCompiler_renameProperty = function (prop, obj) {\n    return prop;\n  };\n  /* eslint-enable */\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/boot.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/case-map.html":
/*!**********************************************************!*\
  !*** ./bower_components/polymer/lib/utils/case-map.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n  'use strict';\n\n  var caseMap = {};\n  var DASH_TO_CAMEL = /-[a-z]/g;\n  var CAMEL_TO_DASH = /([A-Z])/g;\n\n  /**\n   * Module with utilities for converting between \"dash-case\" and \"camelCase\"\n   * identifiers.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module that provides utilities for converting between \"dash-case\"\n   *   and \"camelCase\".\n   */\n  var CaseMap = {\n\n    /**\n     * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n     * (e.g. `fooBarBaz`).\n     *\n     * @memberof Polymer.CaseMap\n     * @param {string} dash Dash-case identifier\n     * @return {string} Camel-case representation of the identifier\n     */\n    dashToCamelCase: function dashToCamelCase(dash) {\n      return caseMap[dash] || (caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL, function (m) {\n        return m[1].toUpperCase();\n      }));\n    },\n\n\n    /**\n     * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n     * (e.g. `foo-bar-baz`).\n     *\n     * @memberof Polymer.CaseMap\n     * @param {string} camel Camel-case identifier\n     * @return {string} Dash-case representation of the identifier\n     */\n    camelToDashCase: function camelToDashCase(camel) {\n      return caseMap[camel] || (caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase());\n    }\n  };\n\n  Polymer.CaseMap = CaseMap;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/case-map.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/debounce.html":
/*!**********************************************************!*\
  !*** ./bower_components/polymer/lib/utils/debounce.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ./mixin.html */ \"./bower_components/polymer/lib/utils/mixin.html\");\n\n__webpack_require__(/*! ./async.html */ \"./bower_components/polymer/lib/utils/async.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * @summary Collapse multiple callbacks into one invocation after a timer.\n   * @memberof Polymer\n   */\n\n  var Debouncer = function () {\n    function Debouncer() {\n      _classCallCheck(this, Debouncer);\n\n      this._asyncModule = null;\n      this._callback = null;\n      this._timer = null;\n    }\n    /**\n     * Sets the scheduler; that is, a module with the Async interface,\n     * a callback and optional arguments to be passed to the run function\n     * from the async module.\n     *\n     * @param {!AsyncInterface} asyncModule Object with Async interface.\n     * @param {function()} callback Callback to run.\n     * @return {void}\n     */\n\n\n    _createClass(Debouncer, [{\n      key: 'setConfig',\n      value: function setConfig(asyncModule, callback) {\n        var _this = this;\n\n        this._asyncModule = asyncModule;\n        this._callback = callback;\n        this._timer = this._asyncModule.run(function () {\n          _this._timer = null;\n          _this._callback();\n        });\n      }\n      /**\n       * Cancels an active debouncer and returns a reference to itself.\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        if (this.isActive()) {\n          this._asyncModule.cancel(this._timer);\n          this._timer = null;\n        }\n      }\n      /**\n       * Flushes an active debouncer and returns a reference to itself.\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'flush',\n      value: function flush() {\n        if (this.isActive()) {\n          this.cancel();\n          this._callback();\n        }\n      }\n      /**\n       * Returns true if the debouncer is active.\n       *\n       * @return {boolean} True if active.\n       */\n\n    }, {\n      key: 'isActive',\n      value: function isActive() {\n        return this._timer != null;\n      }\n      /**\n       * Creates a debouncer if no debouncer is passed as a parameter\n       * or it cancels an active debouncer otherwise. The following\n       * example shows how a debouncer can be called multiple times within a\n       * microtask and \"debounced\" such that the provided callback function is\n       * called once. Add this method to a custom element:\n       *\n       * _debounceWork() {\n       *   this._debounceJob = Polymer.Debouncer.debounce(this._debounceJob,\n       *       Polymer.Async.microTask, () => {\n       *     this._doWork();\n       *   });\n       * }\n       *\n       * If the `_debounceWork` method is called multiple times within the same\n       * microtask, the `_doWork` function will be called only once at the next\n       * microtask checkpoint.\n       *\n       * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n       * this with a debouncer, you can use `Polymer.enqueueDebouncer` and\n       * `Polymer.flush`. For example, extend the above example by adding\n       * `Polymer.enqueueDebouncer(this._debounceJob)` at the end of the\n       * `_debounceWork` method. Then in a test, call `Polymer.flush` to ensure\n       * the debouncer has completed.\n       *\n       * @param {Debouncer?} debouncer Debouncer object.\n       * @param {!AsyncInterface} asyncModule Object with Async interface\n       * @param {function()} callback Callback to run.\n       * @return {!Debouncer} Returns a debouncer object.\n       */\n\n    }], [{\n      key: 'debounce',\n      value: function debounce(debouncer, asyncModule, callback) {\n        if (debouncer instanceof Debouncer) {\n          debouncer.cancel();\n        } else {\n          debouncer = new Debouncer();\n        }\n        debouncer.setConfig(asyncModule, callback);\n        return debouncer;\n      }\n    }]);\n\n    return Debouncer;\n  }();\n\n  Polymer.Debouncer = Debouncer;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/debounce.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/flattened-nodes-observer.html":
/*!**************************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/flattened-nodes-observer.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/array-splice.html */ \"./bower_components/polymer/lib/utils/array-splice.html\");\n\n__webpack_require__(/*! ../utils/async.html */ \"./bower_components/polymer/lib/utils/async.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Returns true if `node` is a slot element\n   * @param {Node} node Node to test.\n   * @return {boolean} Returns true if the given `node` is a slot\n   * @private\n   */\n\n  function isSlot(node) {\n    return node.localName === 'slot';\n  }\n\n  /**\n   * Class that listens for changes (additions or removals) to\n   * \"flattened nodes\" on a given `node`. The list of flattened nodes consists\n   * of a node's children and, for any children that are `<slot>` elements,\n   * the expanded flattened list of `assignedNodes`.\n   * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n   * and the `<slot>` has one `<div>` assigned to it, then the flattened\n   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n   * `<slot>` elements assigned to it, these are flattened as well.\n   *\n   * The provided `callback` is called whenever any change to this list\n   * of flattened nodes occurs, where an addition or removal of a node is\n   * considered a change. The `callback` is called with one argument, an object\n   * containing an array of any `addedNodes` and `removedNodes`.\n   *\n   * Note: the callback is called asynchronous to any changes\n   * at a microtask checkpoint. This is because observation is performed using\n   * `MutationObserver` and the `<slot>` element's `slotchange` event which\n   * are asynchronous.\n   *\n   * An example:\n   * ```js\n   * class TestSelfObserve extends Polymer.Element {\n   *   static get is() { return 'test-self-observe';}\n   *   connectedCallback() {\n   *     super.connectedCallback();\n   *     this._observer = new Polymer.FlattenedNodesObserver(this, (info) => {\n   *       this.info = info;\n   *     });\n   *   }\n   *   disconnectedCallback() {\n   *     super.disconnectedCallback();\n   *     this._observer.disconnect();\n   *   }\n   * }\n   * customElements.define(TestSelfObserve.is, TestSelfObserve);\n   * ```\n   *\n   * @memberof Polymer\n   * @summary Class that listens for changes (additions or removals) to\n   * \"flattened nodes\" on a given `node`.\n   */\n\n  var FlattenedNodesObserver = function () {\n    _createClass(FlattenedNodesObserver, null, [{\n      key: 'getFlattenedNodes',\n\n\n      /**\n       * Returns the list of flattened nodes for the given `node`.\n       * This list consists of a node's children and, for any children\n       * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.\n       * For example, if the observed node has children `<a></a><slot></slot><b></b>`\n       * and the `<slot>` has one `<div>` assigned to it, then the flattened\n       * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other\n       * `<slot>` elements assigned to it, these are flattened as well.\n       *\n       * @param {HTMLElement|HTMLSlotElement} node The node for which to return the list of flattened nodes.\n       * @return {Array} The list of flattened nodes for the given `node`.\n      */\n      value: function getFlattenedNodes(node) {\n        if (isSlot(node)) {\n          node = /** @type {HTMLSlotElement} */node; // eslint-disable-line no-self-assign\n          return node.assignedNodes({ flatten: true });\n        } else {\n          return Array.from(node.childNodes).map(function (node) {\n            if (isSlot(node)) {\n              node = /** @type {HTMLSlotElement} */node; // eslint-disable-line no-self-assign\n              return node.assignedNodes({ flatten: true });\n            } else {\n              return [node];\n            }\n          }).reduce(function (a, b) {\n            return a.concat(b);\n          }, []);\n        }\n      }\n\n      /**\n       * @param {Element} target Node on which to listen for changes.\n       * @param {?function(!Element, { target: !Element, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions\n       * or removals from the target's list of flattened nodes.\n      */\n\n    }]);\n\n    function FlattenedNodesObserver(target, callback) {\n      var _this = this;\n\n      _classCallCheck(this, FlattenedNodesObserver);\n\n      /**\n       * @type {MutationObserver}\n       * @private\n       */\n      this._shadyChildrenObserver = null;\n      /**\n       * @type {MutationObserver}\n       * @private\n       */\n      this._nativeChildrenObserver = null;\n      this._connected = false;\n      /**\n       * @type {Element}\n       * @private\n       */\n      this._target = target;\n      this.callback = callback;\n      this._effectiveNodes = [];\n      this._observer = null;\n      this._scheduled = false;\n      /**\n       * @type {function()}\n       * @private\n       */\n      this._boundSchedule = function () {\n        _this._schedule();\n      };\n      this.connect();\n      this._schedule();\n    }\n\n    /**\n     * Activates an observer. This method is automatically called when\n     * a `FlattenedNodesObserver` is created. It should only be called to\n     * re-activate an observer that has been deactivated via the `disconnect` method.\n     *\n     * @return {void}\n     */\n\n\n    _createClass(FlattenedNodesObserver, [{\n      key: 'connect',\n      value: function connect() {\n        var _this2 = this;\n\n        if (isSlot(this._target)) {\n          this._listenSlots([this._target]);\n        } else if (this._target.children) {\n          this._listenSlots(this._target.children);\n          if (window.ShadyDOM) {\n            this._shadyChildrenObserver = ShadyDOM.observeChildren(this._target, function (mutations) {\n              _this2._processMutations(mutations);\n            });\n          } else {\n            this._nativeChildrenObserver = new MutationObserver(function (mutations) {\n              _this2._processMutations(mutations);\n            });\n            this._nativeChildrenObserver.observe(this._target, { childList: true });\n          }\n        }\n        this._connected = true;\n      }\n\n      /**\n       * Deactivates the flattened nodes observer. After calling this method\n       * the observer callback will not be called when changes to flattened nodes\n       * occur. The `connect` method may be subsequently called to reactivate\n       * the observer.\n       *\n       * @return {void}\n       */\n\n    }, {\n      key: 'disconnect',\n      value: function disconnect() {\n        if (isSlot(this._target)) {\n          this._unlistenSlots([this._target]);\n        } else if (this._target.children) {\n          this._unlistenSlots(this._target.children);\n          if (window.ShadyDOM && this._shadyChildrenObserver) {\n            ShadyDOM.unobserveChildren(this._shadyChildrenObserver);\n            this._shadyChildrenObserver = null;\n          } else if (this._nativeChildrenObserver) {\n            this._nativeChildrenObserver.disconnect();\n            this._nativeChildrenObserver = null;\n          }\n        }\n        this._connected = false;\n      }\n\n      /**\n       * @return {void}\n       * @private\n       */\n\n    }, {\n      key: '_schedule',\n      value: function _schedule() {\n        var _this3 = this;\n\n        if (!this._scheduled) {\n          this._scheduled = true;\n          Polymer.Async.microTask.run(function () {\n            return _this3.flush();\n          });\n        }\n      }\n\n      /**\n       * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n       * @return {void}\n       * @private\n       */\n\n    }, {\n      key: '_processMutations',\n      value: function _processMutations(mutations) {\n        this._processSlotMutations(mutations);\n        this.flush();\n      }\n\n      /**\n       * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer\n       * @return {void}\n       * @private\n       */\n\n    }, {\n      key: '_processSlotMutations',\n      value: function _processSlotMutations(mutations) {\n        if (mutations) {\n          for (var i = 0; i < mutations.length; i++) {\n            var mutation = mutations[i];\n            if (mutation.addedNodes) {\n              this._listenSlots(mutation.addedNodes);\n            }\n            if (mutation.removedNodes) {\n              this._unlistenSlots(mutation.removedNodes);\n            }\n          }\n        }\n      }\n\n      /**\n       * Flushes the observer causing any pending changes to be immediately\n       * delivered the observer callback. By default these changes are delivered\n       * asynchronously at the next microtask checkpoint.\n       *\n       * @return {boolean} Returns true if any pending changes caused the observer\n       * callback to run.\n       */\n\n    }, {\n      key: 'flush',\n      value: function flush() {\n        if (!this._connected) {\n          return false;\n        }\n        if (window.ShadyDOM) {\n          ShadyDOM.flush();\n        }\n        if (this._nativeChildrenObserver) {\n          this._processSlotMutations(this._nativeChildrenObserver.takeRecords());\n        } else if (this._shadyChildrenObserver) {\n          this._processSlotMutations(this._shadyChildrenObserver.takeRecords());\n        }\n        this._scheduled = false;\n        var info = {\n          target: this._target,\n          addedNodes: [],\n          removedNodes: []\n        };\n        var newNodes = this.constructor.getFlattenedNodes(this._target);\n        var splices = Polymer.ArraySplice.calculateSplices(newNodes, this._effectiveNodes);\n        // process removals\n        for (var i = 0, s; i < splices.length && (s = splices[i]); i++) {\n          for (var j = 0, n; j < s.removed.length && (n = s.removed[j]); j++) {\n            info.removedNodes.push(n);\n          }\n        }\n        // process adds\n        for (var _i = 0, _s; _i < splices.length && (_s = splices[_i]); _i++) {\n          for (var _j = _s.index; _j < _s.index + _s.addedCount; _j++) {\n            info.addedNodes.push(newNodes[_j]);\n          }\n        }\n        // update cache\n        this._effectiveNodes = newNodes;\n        var didFlush = false;\n        if (info.addedNodes.length || info.removedNodes.length) {\n          didFlush = true;\n          this.callback.call(this._target, info);\n        }\n        return didFlush;\n      }\n\n      /**\n       * @param {!Array<Element|Node>|!NodeList<Node>} nodeList Nodes that could change\n       * @return {void}\n       * @private\n       */\n\n    }, {\n      key: '_listenSlots',\n      value: function _listenSlots(nodeList) {\n        for (var i = 0; i < nodeList.length; i++) {\n          var n = nodeList[i];\n          if (isSlot(n)) {\n            n.addEventListener('slotchange', this._boundSchedule);\n          }\n        }\n      }\n\n      /**\n       * @param {!Array<Element|Node>|!NodeList<Node>} nodeList Nodes that could change\n       * @return {void}\n       * @private\n       */\n\n    }, {\n      key: '_unlistenSlots',\n      value: function _unlistenSlots(nodeList) {\n        for (var i = 0; i < nodeList.length; i++) {\n          var n = nodeList[i];\n          if (isSlot(n)) {\n            n.removeEventListener('slotchange', this._boundSchedule);\n          }\n        }\n      }\n    }]);\n\n    return FlattenedNodesObserver;\n  }();\n\n  Polymer.FlattenedNodesObserver = FlattenedNodesObserver;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/flattened-nodes-observer.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/flush.html":
/*!*******************************************************!*\
  !*** ./bower_components/polymer/lib/utils/flush.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n  'use strict';\n\n  var debouncerQueue = [];\n\n  /**\n   * Adds a `Polymer.Debouncer` to a list of globally flushable tasks.\n   *\n   * @memberof Polymer\n   * @param {!Polymer.Debouncer} debouncer Debouncer to enqueue\n   * @return {void}\n   */\n  Polymer.enqueueDebouncer = function (debouncer) {\n    debouncerQueue.push(debouncer);\n  };\n\n  function flushDebouncers() {\n    var didFlush = Boolean(debouncerQueue.length);\n    while (debouncerQueue.length) {\n      try {\n        debouncerQueue.shift().flush();\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n    return didFlush;\n  }\n\n  /**\n   * Forces several classes of asynchronously queued tasks to flush:\n   * - Debouncers added via `enqueueDebouncer`\n   * - ShadyDOM distribution\n   *\n   * @memberof Polymer\n   * @return {void}\n   */\n  Polymer.flush = function () {\n    var shadyDOM = void 0,\n        debouncers = void 0;\n    do {\n      shadyDOM = window.ShadyDOM && ShadyDOM.flush();\n      if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {\n        window.ShadyCSS.ScopingShim.flush();\n      }\n      debouncers = flushDebouncers();\n    } while (shadyDOM || debouncers);\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/flush.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/gestures.html":
/*!**********************************************************!*\
  !*** ./bower_components/polymer/lib/utils/gestures.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ./async.html */ \"./bower_components/polymer/lib/utils/async.html\");\n\n__webpack_require__(/*! ./debounce.html */ \"./bower_components/polymer/lib/utils/debounce.html\");\n\n(function () {\n\n  'use strict';\n\n  // detect native touch action support\n\n  var HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';\n  var GESTURE_KEY = '__polymerGestures';\n  var HANDLED_OBJ = '__polymerGesturesHandled';\n  var TOUCH_ACTION = '__polymerGesturesTouchAction';\n  // radius for tap and track\n  var TAP_DISTANCE = 25;\n  var TRACK_DISTANCE = 5;\n  // number of last N track positions to keep\n  var TRACK_LENGTH = 2;\n\n  // Disabling \"mouse\" handlers for 2500ms is enough\n  var MOUSE_TIMEOUT = 2500;\n  var MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click'];\n  // an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons\n  var MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];\n  var MOUSE_HAS_BUTTONS = function () {\n    try {\n      return new MouseEvent('test', { buttons: 1 }).buttons === 1;\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  /**\n   * @param {string} name Possible mouse event name\n   * @return {boolean} true if mouse event, false if not\n   */\n  function isMouseEvent(name) {\n    return MOUSE_EVENTS.indexOf(name) > -1;\n  }\n\n  /* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n  // check for passive event listeners\n  var SUPPORTS_PASSIVE = false;\n  (function () {\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          SUPPORTS_PASSIVE = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n      window.removeEventListener('test', null, opts);\n    } catch (e) {}\n  })();\n\n  /**\n   * Generate settings for event listeners, dependant on `Polymer.passiveTouchGestures`\n   *\n   * @param {string} eventName Event name to determine if `{passive}` option is needed\n   * @return {{passive: boolean} | undefined} Options to use for addEventListener and removeEventListener\n   */\n  function PASSIVE_TOUCH(eventName) {\n    if (isMouseEvent(eventName) || eventName === 'touchend') {\n      return;\n    }\n    if (HAS_NATIVE_TA && SUPPORTS_PASSIVE && Polymer.passiveTouchGestures) {\n      return { passive: true };\n    } else {\n      return;\n    }\n  }\n\n  // Check for touch-only devices\n  var IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);\n\n  var GestureRecognizer = function GestureRecognizer() {}; // eslint-disable-line no-unused-vars\n  /** @type {function(): void} */\n  GestureRecognizer.prototype.reset;\n  /** @type {function(MouseEvent): void | undefined} */\n  GestureRecognizer.prototype.mousedown;\n  /** @type {(function(MouseEvent): void | undefined)} */\n  GestureRecognizer.prototype.mousemove;\n  /** @type {(function(MouseEvent): void | undefined)} */\n  GestureRecognizer.prototype.mouseup;\n  /** @type {(function(TouchEvent): void | undefined)} */\n  GestureRecognizer.prototype.touchstart;\n  /** @type {(function(TouchEvent): void | undefined)} */\n  GestureRecognizer.prototype.touchmove;\n  /** @type {(function(TouchEvent): void | undefined)} */\n  GestureRecognizer.prototype.touchend;\n  /** @type {(function(MouseEvent): void | undefined)} */\n  GestureRecognizer.prototype.click;\n\n  // touch will make synthetic mouse events\n  // `preventDefault` on touchend will cancel them,\n  // but this breaks `<input>` focus and link clicks\n  // disable mouse handlers for MOUSE_TIMEOUT ms after\n  // a touchend to ignore synthetic mouse events\n  var mouseCanceller = function mouseCanceller(mouseEvent) {\n    // Check for sourceCapabilities, used to distinguish synthetic events\n    // if mouseEvent did not come from a device that fires touch events,\n    // it was made by a real mouse and should be counted\n    // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents\n    var sc = mouseEvent.sourceCapabilities;\n    if (sc && !sc.firesTouchEvents) {\n      return;\n    }\n    // skip synthetic mouse events\n    mouseEvent[HANDLED_OBJ] = { skip: true };\n    // disable \"ghost clicks\"\n    if (mouseEvent.type === 'click') {\n      var path = mouseEvent.composedPath && mouseEvent.composedPath();\n      if (path) {\n        for (var i = 0; i < path.length; i++) {\n          if (path[i] === POINTERSTATE.mouse.target) {\n            return;\n          }\n        }\n      }\n      mouseEvent.preventDefault();\n      mouseEvent.stopPropagation();\n    }\n  };\n\n  /**\n   * @param {boolean=} setup True to add, false to remove.\n   * @return {void}\n   */\n  function setupTeardownMouseCanceller(setup) {\n    var events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;\n    for (var i = 0, en; i < events.length; i++) {\n      en = events[i];\n      if (setup) {\n        document.addEventListener(en, mouseCanceller, true);\n      } else {\n        document.removeEventListener(en, mouseCanceller, true);\n      }\n    }\n  }\n\n  function ignoreMouse(e) {\n    if (!POINTERSTATE.mouse.mouseIgnoreJob) {\n      setupTeardownMouseCanceller(true);\n    }\n    var unset = function unset() {\n      setupTeardownMouseCanceller();\n      POINTERSTATE.mouse.target = null;\n      POINTERSTATE.mouse.mouseIgnoreJob = null;\n    };\n    POINTERSTATE.mouse.target = e.composedPath()[0];\n    POINTERSTATE.mouse.mouseIgnoreJob = Polymer.Debouncer.debounce(POINTERSTATE.mouse.mouseIgnoreJob, Polymer.Async.timeOut.after(MOUSE_TIMEOUT), unset);\n  }\n\n  /**\n   * @param {MouseEvent} ev event to test for left mouse button down\n   * @return {boolean} has left mouse button down\n   */\n  function hasLeftMouseButton(ev) {\n    var type = ev.type;\n    // exit early if the event is not a mouse event\n    if (!isMouseEvent(type)) {\n      return false;\n    }\n    // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)\n    // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)\n    if (type === 'mousemove') {\n      // allow undefined for testing events\n      var buttons = ev.buttons === undefined ? 1 : ev.buttons;\n      if (ev instanceof window.MouseEvent && !MOUSE_HAS_BUTTONS) {\n        buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;\n      }\n      // buttons is a bitmask, check that the left button bit is set (1)\n      return Boolean(buttons & 1);\n    } else {\n      // allow undefined for testing events\n      var button = ev.button === undefined ? 0 : ev.button;\n      // ev.button is 0 in mousedown/mouseup/click for left button activation\n      return button === 0;\n    }\n  }\n\n  function isSyntheticClick(ev) {\n    if (ev.type === 'click') {\n      // ev.detail is 0 for HTMLElement.click in most browsers\n      if (ev.detail === 0) {\n        return true;\n      }\n      // in the worst case, check that the x/y position of the click is within\n      // the bounding box of the target of the event\n      // Thanks IE 10 >:(\n      var t = Gestures._findOriginalTarget(ev);\n      // make sure the target of the event is an element so we can use getBoundingClientRect,\n      // if not, just assume it is a synthetic click\n      if (!t.nodeType || /** @type {Element} */t.nodeType !== Node.ELEMENT_NODE) {\n        return true;\n      }\n      var bcr = /** @type {Element} */t.getBoundingClientRect();\n      // use page x/y to account for scrolling\n      var x = ev.pageX,\n          y = ev.pageY;\n      // ev is a synthetic click if the position is outside the bounding box of the target\n      return !(x >= bcr.left && x <= bcr.right && y >= bcr.top && y <= bcr.bottom);\n    }\n    return false;\n  }\n\n  var POINTERSTATE = {\n    mouse: {\n      target: null,\n      mouseIgnoreJob: null\n    },\n    touch: {\n      x: 0,\n      y: 0,\n      id: -1,\n      scrollDecided: false\n    }\n  };\n\n  function firstTouchAction(ev) {\n    var ta = 'auto';\n    var path = ev.composedPath && ev.composedPath();\n    if (path) {\n      for (var i = 0, n; i < path.length; i++) {\n        n = path[i];\n        if (n[TOUCH_ACTION]) {\n          ta = n[TOUCH_ACTION];\n          break;\n        }\n      }\n    }\n    return ta;\n  }\n\n  function trackDocument(stateObj, movefn, upfn) {\n    stateObj.movefn = movefn;\n    stateObj.upfn = upfn;\n    document.addEventListener('mousemove', movefn);\n    document.addEventListener('mouseup', upfn);\n  }\n\n  function untrackDocument(stateObj) {\n    document.removeEventListener('mousemove', stateObj.movefn);\n    document.removeEventListener('mouseup', stateObj.upfn);\n    stateObj.movefn = null;\n    stateObj.upfn = null;\n  }\n\n  // use a document-wide touchend listener to start the ghost-click prevention mechanism\n  // Use passive event listeners, if supported, to not affect scrolling performance\n  document.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? { passive: true } : false);\n\n  /**\n   * Module for adding listeners to a node for the following normalized\n   * cross-platform \"gesture\" events:\n   * - `down` - mouse or touch went down\n   * - `up` - mouse or touch went up\n   * - `tap` - mouse click or finger tap\n   * - `track` - mouse drag or touch move\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module for adding cross-platform gesture event listeners.\n   */\n  var Gestures = {\n    gestures: {},\n    recognizers: [],\n\n    /**\n     * Finds the element rendered on the screen at the provided coordinates.\n     *\n     * Similar to `document.elementFromPoint`, but pierces through\n     * shadow roots.\n     *\n     * @memberof Polymer.Gestures\n     * @param {number} x Horizontal pixel coordinate\n     * @param {number} y Vertical pixel coordinate\n     * @return {Element} Returns the deepest shadowRoot inclusive element\n     * found at the screen position given.\n     */\n    deepTargetFind: function deepTargetFind(x, y) {\n      var node = document.elementFromPoint(x, y);\n      var next = node;\n      // this code path is only taken when native ShadowDOM is used\n      // if there is a shadowroot, it may have a node at x/y\n      // if there is not a shadowroot, exit the loop\n      while (next && next.shadowRoot && !window.ShadyDOM) {\n        // if there is a node at x/y in the shadowroot, look deeper\n        var oldNext = next;\n        next = next.shadowRoot.elementFromPoint(x, y);\n        // on Safari, elementFromPoint may return the shadowRoot host\n        if (oldNext === next) {\n          break;\n        }\n        if (next) {\n          node = next;\n        }\n      }\n      return node;\n    },\n    /**\n     * a cheaper check than ev.composedPath()[0];\n     *\n     * @private\n     * @param {Event} ev Event.\n     * @return {EventTarget} Returns the event target.\n     */\n    _findOriginalTarget: function _findOriginalTarget(ev) {\n      // shadowdom\n      if (ev.composedPath) {\n        var targets = /** @type {!Array<!EventTarget>} */ev.composedPath();\n        // It shouldn't be, but sometimes targets is empty (window on Safari).\n        return targets.length > 0 ? targets[0] : ev.target;\n      }\n      // shadydom\n      return ev.target;\n    },\n\n    /**\n     * @private\n     * @param {Event} ev Event.\n     * @return {void}\n     */\n    _handleNative: function _handleNative(ev) {\n      var handled = void 0;\n      var type = ev.type;\n      var node = ev.currentTarget;\n      var gobj = node[GESTURE_KEY];\n      if (!gobj) {\n        return;\n      }\n      var gs = gobj[type];\n      if (!gs) {\n        return;\n      }\n      if (!ev[HANDLED_OBJ]) {\n        ev[HANDLED_OBJ] = {};\n        if (type.slice(0, 5) === 'touch') {\n          ev = /** @type {TouchEvent} */ev; // eslint-disable-line no-self-assign\n          var t = ev.changedTouches[0];\n          if (type === 'touchstart') {\n            // only handle the first finger\n            if (ev.touches.length === 1) {\n              POINTERSTATE.touch.id = t.identifier;\n            }\n          }\n          if (POINTERSTATE.touch.id !== t.identifier) {\n            return;\n          }\n          if (!HAS_NATIVE_TA) {\n            if (type === 'touchstart' || type === 'touchmove') {\n              Gestures._handleTouchAction(ev);\n            }\n          }\n        }\n      }\n      handled = ev[HANDLED_OBJ];\n      // used to ignore synthetic mouse events\n      if (handled.skip) {\n        return;\n      }\n      // reset recognizer state\n      for (var i = 0, r; i < Gestures.recognizers.length; i++) {\n        r = Gestures.recognizers[i];\n        if (gs[r.name] && !handled[r.name]) {\n          if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {\n            r.reset();\n          }\n        }\n      }\n      // enforce gesture recognizer order\n      for (var _i = 0, _r; _i < Gestures.recognizers.length; _i++) {\n        _r = Gestures.recognizers[_i];\n        if (gs[_r.name] && !handled[_r.name]) {\n          handled[_r.name] = true;\n          _r[type](ev);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {TouchEvent} ev Event.\n     * @return {void}\n     */\n    _handleTouchAction: function _handleTouchAction(ev) {\n      var t = ev.changedTouches[0];\n      var type = ev.type;\n      if (type === 'touchstart') {\n        POINTERSTATE.touch.x = t.clientX;\n        POINTERSTATE.touch.y = t.clientY;\n        POINTERSTATE.touch.scrollDecided = false;\n      } else if (type === 'touchmove') {\n        if (POINTERSTATE.touch.scrollDecided) {\n          return;\n        }\n        POINTERSTATE.touch.scrollDecided = true;\n        var ta = firstTouchAction(ev);\n        var prevent = false;\n        var dx = Math.abs(POINTERSTATE.touch.x - t.clientX);\n        var dy = Math.abs(POINTERSTATE.touch.y - t.clientY);\n        if (!ev.cancelable) {\n          // scrolling is happening\n        } else if (ta === 'none') {\n          prevent = true;\n        } else if (ta === 'pan-x') {\n          prevent = dy > dx;\n        } else if (ta === 'pan-y') {\n          prevent = dx > dy;\n        }\n        if (prevent) {\n          ev.preventDefault();\n        } else {\n          Gestures.prevent('track');\n        }\n      }\n    },\n\n    /**\n     * Adds an event listener to a node for the given gesture type.\n     *\n     * @memberof Polymer.Gestures\n     * @param {!Node} node Node to add listener on\n     * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n     * @param {!function(!Event):void} handler Event listener function to call\n     * @return {boolean} Returns true if a gesture event listener was added.\n     * @this {Gestures}\n     */\n    addListener: function addListener(node, evType, handler) {\n      if (this.gestures[evType]) {\n        this._add(node, evType, handler);\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Removes an event listener from a node for the given gesture type.\n     *\n     * @memberof Polymer.Gestures\n     * @param {!Node} node Node to remove listener from\n     * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`\n     * @param {!function(!Event):void} handler Event listener function previously passed to\n     *  `addListener`.\n     * @return {boolean} Returns true if a gesture event listener was removed.\n     * @this {Gestures}\n     */\n    removeListener: function removeListener(node, evType, handler) {\n      if (this.gestures[evType]) {\n        this._remove(node, evType, handler);\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * automate the event listeners for the native events\n     *\n     * @private\n     * @param {!HTMLElement} node Node on which to add the event.\n     * @param {string} evType Event type to add.\n     * @param {function(!Event)} handler Event handler function.\n     * @return {void}\n     * @this {Gestures}\n     */\n    _add: function _add(node, evType, handler) {\n      var recognizer = this.gestures[evType];\n      var deps = recognizer.deps;\n      var name = recognizer.name;\n      var gobj = node[GESTURE_KEY];\n      if (!gobj) {\n        node[GESTURE_KEY] = gobj = {};\n      }\n      for (var i = 0, dep, gd; i < deps.length; i++) {\n        dep = deps[i];\n        // don't add mouse handlers on iOS because they cause gray selection overlays\n        if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {\n          continue;\n        }\n        gd = gobj[dep];\n        if (!gd) {\n          gobj[dep] = gd = { _count: 0 };\n        }\n        if (gd._count === 0) {\n          node.addEventListener(dep, this._handleNative, PASSIVE_TOUCH(dep));\n        }\n        gd[name] = (gd[name] || 0) + 1;\n        gd._count = (gd._count || 0) + 1;\n      }\n      node.addEventListener(evType, handler);\n      if (recognizer.touchAction) {\n        this.setTouchAction(node, recognizer.touchAction);\n      }\n    },\n\n    /**\n     * automate event listener removal for native events\n     *\n     * @private\n     * @param {!HTMLElement} node Node on which to remove the event.\n     * @param {string} evType Event type to remove.\n     * @param {function(Event?)} handler Event handler function.\n     * @return {void}\n     * @this {Gestures}\n     */\n    _remove: function _remove(node, evType, handler) {\n      var recognizer = this.gestures[evType];\n      var deps = recognizer.deps;\n      var name = recognizer.name;\n      var gobj = node[GESTURE_KEY];\n      if (gobj) {\n        for (var i = 0, dep, gd; i < deps.length; i++) {\n          dep = deps[i];\n          gd = gobj[dep];\n          if (gd && gd[name]) {\n            gd[name] = (gd[name] || 1) - 1;\n            gd._count = (gd._count || 1) - 1;\n            if (gd._count === 0) {\n              node.removeEventListener(dep, this._handleNative, PASSIVE_TOUCH(dep));\n            }\n          }\n        }\n      }\n      node.removeEventListener(evType, handler);\n    },\n\n    /**\n     * Registers a new gesture event recognizer for adding new custom\n     * gesture event types.\n     *\n     * @memberof Polymer.Gestures\n     * @param {!GestureRecognizer} recog Gesture recognizer descriptor\n     * @return {void}\n     * @this {Gestures}\n     */\n    register: function register(recog) {\n      this.recognizers.push(recog);\n      for (var i = 0; i < recog.emits.length; i++) {\n        this.gestures[recog.emits[i]] = recog;\n      }\n    },\n\n    /**\n     * @private\n     * @param {string} evName Event name.\n     * @return {Object} Returns the gesture for the given event name.\n     * @this {Gestures}\n     */\n    _findRecognizerByEvent: function _findRecognizerByEvent(evName) {\n      for (var i = 0, r; i < this.recognizers.length; i++) {\n        r = this.recognizers[i];\n        for (var j = 0, n; j < r.emits.length; j++) {\n          n = r.emits[j];\n          if (n === evName) {\n            return r;\n          }\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Sets scrolling direction on node.\n     *\n     * This value is checked on first move, thus it should be called prior to\n     * adding event listeners.\n     *\n     * @memberof Polymer.Gestures\n     * @param {!Element} node Node to set touch action setting on\n     * @param {string} value Touch action value\n     * @return {void}\n     */\n    setTouchAction: function setTouchAction(node, value) {\n      if (HAS_NATIVE_TA) {\n        // NOTE: add touchAction async so that events can be added in\n        // custom element constructors. Otherwise we run afoul of custom\n        // elements restriction against settings attributes (style) in the\n        // constructor.\n        Polymer.Async.microTask.run(function () {\n          node.style.touchAction = value;\n        });\n      }\n      node[TOUCH_ACTION] = value;\n    },\n\n    /**\n     * Dispatches an event on the `target` element of `type` with the given\n     * `detail`.\n     * @private\n     * @param {!EventTarget} target The element on which to fire an event.\n     * @param {string} type The type of event to fire.\n     * @param {!Object=} detail The detail object to populate on the event.\n     * @return {void}\n     */\n    _fire: function _fire(target, type, detail) {\n      var ev = new Event(type, { bubbles: true, cancelable: true, composed: true });\n      ev.detail = detail;\n      target.dispatchEvent(ev);\n      // forward `preventDefault` in a clean way\n      if (ev.defaultPrevented) {\n        var preventer = detail.preventer || detail.sourceEvent;\n        if (preventer && preventer.preventDefault) {\n          preventer.preventDefault();\n        }\n      }\n    },\n\n    /**\n     * Prevents the dispatch and default action of the given event name.\n     *\n     * @memberof Polymer.Gestures\n     * @param {string} evName Event name.\n     * @return {void}\n     * @this {Gestures}\n     */\n    prevent: function prevent(evName) {\n      var recognizer = this._findRecognizerByEvent(evName);\n      if (recognizer.info) {\n        recognizer.info.prevent = true;\n      }\n    },\n\n    /**\n     * Reset the 2500ms timeout on processing mouse input after detecting touch input.\n     *\n     * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.\n     * This method should only be called during testing with simulated touch inputs.\n     * Calling this method in production may cause duplicate taps or other Gestures.\n     *\n     * @memberof Polymer.Gestures\n     * @return {void}\n     */\n    resetMouseCanceller: function resetMouseCanceller() {\n      if (POINTERSTATE.mouse.mouseIgnoreJob) {\n        POINTERSTATE.mouse.mouseIgnoreJob.flush();\n      }\n    }\n  };\n\n  /* eslint-disable valid-jsdoc */\n\n  Gestures.register({\n    name: 'downup',\n    deps: ['mousedown', 'touchstart', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['mouseup', 'touchend']\n    },\n    emits: ['down', 'up'],\n\n    info: {\n      movefn: null,\n      upfn: null\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @return {void}\n     */\n    reset: function reset() {\n      untrackDocument(this.info);\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     * @return {void}\n     */\n    mousedown: function mousedown(e) {\n      if (!hasLeftMouseButton(e)) {\n        return;\n      }\n      var t = Gestures._findOriginalTarget(e);\n      var self = this;\n      var movefn = function movefn(e) {\n        if (!hasLeftMouseButton(e)) {\n          self._fire('up', t, e);\n          untrackDocument(self.info);\n        }\n      };\n      var upfn = function upfn(e) {\n        if (hasLeftMouseButton(e)) {\n          self._fire('up', t, e);\n        }\n        untrackDocument(self.info);\n      };\n      trackDocument(this.info, movefn, upfn);\n      this._fire('down', t, e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchstart: function touchstart(e) {\n      this._fire('down', Gestures._findOriginalTarget(e), e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchend: function touchend(e) {\n      this._fire('up', Gestures._findOriginalTarget(e), e.changedTouches[0], e);\n    },\n    /**\n     * @param {string} type\n     * @param {!EventTarget} target\n     * @param {Event} event\n     * @param {Function} preventer\n     * @return {void}\n     */\n    _fire: function _fire(type, target, event, preventer) {\n      Gestures._fire(target, type, {\n        x: event.clientX,\n        y: event.clientY,\n        sourceEvent: event,\n        preventer: preventer,\n        prevent: function prevent(e) {\n          return Gestures.prevent(e);\n        }\n      });\n    }\n  });\n\n  Gestures.register({\n    name: 'track',\n    touchAction: 'none',\n    deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['mouseup', 'touchend']\n    },\n    emits: ['track'],\n\n    info: {\n      x: 0,\n      y: 0,\n      state: 'start',\n      started: false,\n      moves: [],\n      /** @this {GestureRecognizer} */\n      addMove: function addMove(move) {\n        if (this.moves.length > TRACK_LENGTH) {\n          this.moves.shift();\n        }\n        this.moves.push(move);\n      },\n      movefn: null,\n      upfn: null,\n      prevent: false\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @return {void}\n     */\n    reset: function reset() {\n      this.info.state = 'start';\n      this.info.started = false;\n      this.info.moves = [];\n      this.info.x = 0;\n      this.info.y = 0;\n      this.info.prevent = false;\n      untrackDocument(this.info);\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {number} x\n     * @param {number} y\n     * @return {boolean}\n     */\n    hasMovedEnough: function hasMovedEnough(x, y) {\n      if (this.info.prevent) {\n        return false;\n      }\n      if (this.info.started) {\n        return true;\n      }\n      var dx = Math.abs(this.info.x - x);\n      var dy = Math.abs(this.info.y - y);\n      return dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     * @return {void}\n     */\n    mousedown: function mousedown(e) {\n      if (!hasLeftMouseButton(e)) {\n        return;\n      }\n      var t = Gestures._findOriginalTarget(e);\n      var self = this;\n      var movefn = function movefn(e) {\n        var x = e.clientX,\n            y = e.clientY;\n        if (self.hasMovedEnough(x, y)) {\n          // first move is 'start', subsequent moves are 'move', mouseup is 'end'\n          self.info.state = self.info.started ? e.type === 'mouseup' ? 'end' : 'track' : 'start';\n          if (self.info.state === 'start') {\n            // if and only if tracking, always prevent tap\n            Gestures.prevent('tap');\n          }\n          self.info.addMove({ x: x, y: y });\n          if (!hasLeftMouseButton(e)) {\n            // always _fire \"end\"\n            self.info.state = 'end';\n            untrackDocument(self.info);\n          }\n          self._fire(t, e);\n          self.info.started = true;\n        }\n      };\n      var upfn = function upfn(e) {\n        if (self.info.started) {\n          movefn(e);\n        }\n\n        // remove the temporary listeners\n        untrackDocument(self.info);\n      };\n      // add temporary document listeners as mouse retargets\n      trackDocument(this.info, movefn, upfn);\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchstart: function touchstart(e) {\n      var ct = e.changedTouches[0];\n      this.info.x = ct.clientX;\n      this.info.y = ct.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchmove: function touchmove(e) {\n      var t = Gestures._findOriginalTarget(e);\n      var ct = e.changedTouches[0];\n      var x = ct.clientX,\n          y = ct.clientY;\n      if (this.hasMovedEnough(x, y)) {\n        if (this.info.state === 'start') {\n          // if and only if tracking, always prevent tap\n          Gestures.prevent('tap');\n        }\n        this.info.addMove({ x: x, y: y });\n        this._fire(t, ct);\n        this.info.state = 'track';\n        this.info.started = true;\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchend: function touchend(e) {\n      var t = Gestures._findOriginalTarget(e);\n      var ct = e.changedTouches[0];\n      // only trackend if track was started and not aborted\n      if (this.info.started) {\n        // reset started state on up\n        this.info.state = 'end';\n        this.info.addMove({ x: ct.clientX, y: ct.clientY });\n        this._fire(t, ct, e);\n      }\n    },\n\n    /**\n     * @this {GestureRecognizer}\n     * @param {!EventTarget} target\n     * @param {Touch} touch\n     * @return {void}\n     */\n    _fire: function _fire(target, touch) {\n      var secondlast = this.info.moves[this.info.moves.length - 2];\n      var lastmove = this.info.moves[this.info.moves.length - 1];\n      var dx = lastmove.x - this.info.x;\n      var dy = lastmove.y - this.info.y;\n      var ddx = void 0,\n          ddy = 0;\n      if (secondlast) {\n        ddx = lastmove.x - secondlast.x;\n        ddy = lastmove.y - secondlast.y;\n      }\n      Gestures._fire(target, 'track', {\n        state: this.info.state,\n        x: touch.clientX,\n        y: touch.clientY,\n        dx: dx,\n        dy: dy,\n        ddx: ddx,\n        ddy: ddy,\n        sourceEvent: touch,\n        hover: function hover() {\n          return Gestures.deepTargetFind(touch.clientX, touch.clientY);\n        }\n      });\n    }\n\n  });\n\n  Gestures.register({\n    name: 'tap',\n    deps: ['mousedown', 'click', 'touchstart', 'touchend'],\n    flow: {\n      start: ['mousedown', 'touchstart'],\n      end: ['click', 'touchend']\n    },\n    emits: ['tap'],\n    info: {\n      x: NaN,\n      y: NaN,\n      prevent: false\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @return {void}\n     */\n    reset: function reset() {\n      this.info.x = NaN;\n      this.info.y = NaN;\n      this.info.prevent = false;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     * @return {void}\n     */\n    save: function save(e) {\n      this.info.x = e.clientX;\n      this.info.y = e.clientY;\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     * @return {void}\n     */\n    mousedown: function mousedown(e) {\n      if (hasLeftMouseButton(e)) {\n        this.save(e);\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {MouseEvent} e\n     * @return {void}\n     */\n    click: function click(e) {\n      if (hasLeftMouseButton(e)) {\n        this.forward(e);\n      }\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchstart: function touchstart(e) {\n      this.save(e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {TouchEvent} e\n     * @return {void}\n     */\n    touchend: function touchend(e) {\n      this.forward(e.changedTouches[0], e);\n    },\n    /**\n     * @this {GestureRecognizer}\n     * @param {Event | Touch} e\n     * @param {Event=} preventer\n     * @return {void}\n     */\n    forward: function forward(e, preventer) {\n      var dx = Math.abs(e.clientX - this.info.x);\n      var dy = Math.abs(e.clientY - this.info.y);\n      // find original target from `preventer` for TouchEvents, or `e` for MouseEvents\n      var t = Gestures._findOriginalTarget( /** @type {Event} */preventer || e);\n      if (!t) {\n        return;\n      }\n      // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`\n      if (isNaN(dx) || isNaN(dy) || dx <= TAP_DISTANCE && dy <= TAP_DISTANCE || isSyntheticClick(e)) {\n        // prevent taps from being generated if an event has canceled them\n        if (!this.info.prevent) {\n          Gestures._fire(t, 'tap', {\n            x: e.clientX,\n            y: e.clientY,\n            sourceEvent: e,\n            preventer: preventer\n          });\n        }\n      }\n    }\n  });\n\n  /* eslint-enable valid-jsdoc */\n\n  /** @deprecated */\n  Gestures.findOriginalTarget = Gestures._findOriginalTarget;\n\n  /** @deprecated */\n  Gestures.add = Gestures.addListener;\n\n  /** @deprecated */\n  Gestures.remove = Gestures.removeListener;\n\n  Polymer.Gestures = Gestures;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/gestures.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/html-tag.html":
/*!**********************************************************!*\
  !*** ./bower_components/polymer/lib/utils/html-tag.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Class representing a static string value which can be used to filter\n   * strings by asseting that they have been created via this class. The\n   * `value` property returns the string passed to the constructor.\n   */\n\n  var LiteralString = function () {\n    function LiteralString(string) {\n      _classCallCheck(this, LiteralString);\n\n      /** @type {string} */\n      this.value = string.toString();\n    }\n    /**\n     * @return {string} LiteralString string value\n     */\n\n\n    _createClass(LiteralString, [{\n      key: 'toString',\n      value: function toString() {\n        return this.value;\n      }\n    }]);\n\n    return LiteralString;\n  }();\n\n  /**\n   * @param {*} value Object to stringify into HTML\n   * @return {string} HTML stringified form of `obj`\n   */\n\n\n  function literalValue(value) {\n    if (value instanceof LiteralString) {\n      return (/** @type {!LiteralString} */value.value\n      );\n    } else {\n      throw new Error('non-literal value passed to Polymer.htmlLiteral: ' + value);\n    }\n  }\n\n  /**\n   * @param {*} value Object to stringify into HTML\n   * @return {string} HTML stringified form of `obj`\n   */\n  function htmlValue(value) {\n    if (value instanceof HTMLTemplateElement) {\n      return (/** @type {!HTMLTemplateElement } */value.innerHTML\n      );\n    } else if (value instanceof LiteralString) {\n      return literalValue(value);\n    } else {\n      throw new Error('non-template value passed to Polymer.html: ' + value);\n    }\n  }\n\n  /**\n   * A template literal tag that creates an HTML <template> element from the\n   * contents of the string.\n   *\n   * This allows you to write a Polymer Template in JavaScript.\n   *\n   * Templates can be composed by interpolating `HTMLTemplateElement`s in\n   * expressions in the JavaScript template literal. The nested template's\n   * `innerHTML` is included in the containing template.  The only other\n   * values allowed in expressions are those returned from `Polymer.htmlLiteral`\n   * which ensures only literal values from JS source ever reach the HTML, to\n   * guard against XSS risks.\n   *\n   * All other values are disallowed in expressions to help prevent XSS\n   * attacks; however, `Polymer.htmlLiteral` can be used to compose static\n   * string values into templates. This is useful to compose strings into\n   * places that do not accept html, like the css text of a `style`\n   * element.\n   *\n   * Example:\n   *\n   *   static get template() {\n   *     return Polymer.html`\n   *       <style>:host{ content:\"...\" }</style>\n   *       <div class=\"shadowed\">${this.partialTemplate}</div>\n   *       ${super.template}\n   *     `;\n   *   }\n   *   static get partialTemplate() { return Polymer.html`<span>Partial!</span>`; }\n   *\n   * @memberof Polymer\n   * @param {!ITemplateArray} strings Constant parts of tagged template literal\n   * @param {...*} values Variable parts of tagged template literal\n   * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n   */\n  Polymer.html = function html(strings) {\n    var template = /** @type {!HTMLTemplateElement} */document.createElement('template');\n\n    for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      values[_key - 1] = arguments[_key];\n    }\n\n    template.innerHTML = values.reduce(function (acc, v, idx) {\n      return acc + htmlValue(v) + strings[idx + 1];\n    }, strings[0]);\n    return template;\n  };\n\n  /**\n   * An html literal tag that can be used with `Polymer.html` to compose.\n   * a literal string.\n   *\n   * Example:\n   *\n   *   static get template() {\n   *     return Polymer.html`\n   *       <style>\n   *         :host { display: block; }\n   *         ${styleTemplate}\n   *       </style>\n   *       <div class=\"shadowed\">${staticValue}</div>\n   *       ${super.template}\n   *     `;\n   *   }\n   *   static get styleTemplate() { return Polymer.htmlLiteral`.shadowed { background: gray; }`; }\n   *\n   * @memberof Polymer\n   * @param {!ITemplateArray} strings Constant parts of tagged template literal\n   * @param {...*} values Variable parts of tagged template literal\n   * @return {!LiteralString} Constructed literal string\n   */\n  Polymer.htmlLiteral = function (strings) {\n    for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      values[_key2 - 1] = arguments[_key2];\n    }\n\n    return new LiteralString(values.reduce(function (acc, v, idx) {\n      return acc + literalValue(v) + strings[idx + 1];\n    }, strings[0]));\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/html-tag.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/import-href.html":
/*!*************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/import-href.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n\n  'use strict';\n\n  // run a callback when HTMLImports are ready or immediately if\n  // this api is not available.\n\n  function whenImportsReady(cb) {\n    if (window.HTMLImports) {\n      HTMLImports.whenReady(cb);\n    } else {\n      cb();\n    }\n  }\n\n  /**\n   * Convenience method for importing an HTML document imperatively.\n   *\n   * This method creates a new `<link rel=\"import\">` element with\n   * the provided URL and appends it to the document to start loading.\n   * In the `onload` callback, the `import` property of the `link`\n   * element will contain the imported document contents.\n   *\n   * @memberof Polymer\n   * @param {string} href URL to document to load.\n   * @param {?function(!Event):void=} onload Callback to notify when an import successfully\n   *   loaded.\n   * @param {?function(!ErrorEvent):void=} onerror Callback to notify when an import\n   *   unsuccessfully loaded.\n   * @param {boolean=} optAsync True if the import should be loaded `async`.\n   *   Defaults to `false`.\n   * @return {!HTMLLinkElement} The link element for the URL to be loaded.\n   */\n  Polymer.importHref = function (href, onload, onerror, optAsync) {\n    var link = /** @type {HTMLLinkElement} */\n    document.head.querySelector('link[href=\"' + href + '\"][import-href]');\n    if (!link) {\n      link = /** @type {HTMLLinkElement} */document.createElement('link');\n      link.rel = 'import';\n      link.href = href;\n      link.setAttribute('import-href', '');\n    }\n    // always ensure link has `async` attribute if user specified one,\n    // even if it was previously not async. This is considered less confusing.\n    if (optAsync) {\n      link.setAttribute('async', '');\n    }\n    // NOTE: the link may now be in 3 states: (1) pending insertion,\n    // (2) inflight, (3) already loaded. In each case, we need to add\n    // event listeners to process callbacks.\n    var cleanup = function cleanup() {\n      link.removeEventListener('load', loadListener);\n      link.removeEventListener('error', errorListener);\n    };\n    var loadListener = function loadListener(event) {\n      cleanup();\n      // In case of a successful load, cache the load event on the link so\n      // that it can be used to short-circuit this method in the future when\n      // it is called with the same href param.\n      link.__dynamicImportLoaded = true;\n      if (onload) {\n        whenImportsReady(function () {\n          onload(event);\n        });\n      }\n    };\n    var errorListener = function errorListener(event) {\n      cleanup();\n      // In case of an error, remove the link from the document so that it\n      // will be automatically created again the next time `importHref` is\n      // called.\n      if (link.parentNode) {\n        link.parentNode.removeChild(link);\n      }\n      if (onerror) {\n        whenImportsReady(function () {\n          onerror(event);\n        });\n      }\n    };\n    link.addEventListener('load', loadListener);\n    link.addEventListener('error', errorListener);\n    if (link.parentNode == null) {\n      document.head.appendChild(link);\n      // if the link already loaded, dispatch a fake load event\n      // so that listeners are called and get a proper event argument.\n    } else if (link.__dynamicImportLoaded) {\n      link.dispatchEvent(new Event('load'));\n    }\n    return link;\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/import-href.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/mixin.html":
/*!*******************************************************!*\
  !*** ./bower_components/polymer/lib/utils/mixin.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n\n  'use strict';\n\n  // unique global id for deduping mixins.\n\n  var dedupeId = 0;\n\n  /**\n   * @constructor\n   * @extends {Function}\n   */\n  function MixinFunction() {}\n  /** @type {(WeakMap | undefined)} */\n  MixinFunction.prototype.__mixinApplications;\n  /** @type {(Object | undefined)} */\n  MixinFunction.prototype.__mixinSet;\n\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Wraps an ES6 class expression mixin such that the mixin is only applied\n   * if it has not already been applied its base argument. Also memoizes mixin\n   * applications.\n   *\n   * @memberof Polymer\n   * @template T\n   * @param {T} mixin ES6 class expression mixin to wrap\n   * @return {T}\n   * @suppress {invalidCasts}\n   */\n  Polymer.dedupingMixin = function (mixin) {\n    var mixinApplications = /** @type {!MixinFunction} */mixin.__mixinApplications;\n    if (!mixinApplications) {\n      mixinApplications = new WeakMap();\n      /** @type {!MixinFunction} */mixin.__mixinApplications = mixinApplications;\n    }\n    // maintain a unique id for each mixin\n    var mixinDedupeId = dedupeId++;\n    function dedupingMixin(base) {\n      var baseSet = /** @type {!MixinFunction} */base.__mixinSet;\n      if (baseSet && baseSet[mixinDedupeId]) {\n        return base;\n      }\n      var map = mixinApplications;\n      var extended = map.get(base);\n      if (!extended) {\n        extended = /** @type {!Function} */mixin(base);\n        map.set(base, extended);\n      }\n      // copy inherited mixin set from the extended class, or the base class\n      // NOTE: we avoid use of Set here because some browser (IE11)\n      // cannot extend a base Set via the constructor.\n      var mixinSet = Object.create( /** @type {!MixinFunction} */extended.__mixinSet || baseSet || null);\n      mixinSet[mixinDedupeId] = true;\n      /** @type {!MixinFunction} */extended.__mixinSet = mixinSet;\n      return extended;\n    }\n\n    return (/** @type {T} */dedupingMixin\n    );\n  };\n  /* eslint-enable valid-jsdoc */\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/mixin.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/path.html":
/*!******************************************************!*\
  !*** ./bower_components/polymer/lib/utils/path.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Module with utilities for manipulating structured data path strings.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module with utilities for manipulating structured data path strings.\n   */\n\n  var Path = {\n\n    /**\n     * Returns true if the given string is a structured data path (has dots).\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.isPath('foo.bar.baz') // true\n     * Polymer.Path.isPath('foo')         // false\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string} path Path string\n     * @return {boolean} True if the string contained one or more dots\n     */\n    isPath: function isPath(path) {\n      return path.indexOf('.') >= 0;\n    },\n\n    /**\n     * Returns the root property name for the given path.\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.root('foo.bar.baz') // 'foo'\n     * Polymer.Path.root('foo')         // 'foo'\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string} path Path string\n     * @return {string} Root property name\n     */\n    root: function root(path) {\n      var dotIndex = path.indexOf('.');\n      if (dotIndex === -1) {\n        return path;\n      }\n      return path.slice(0, dotIndex);\n    },\n\n    /**\n     * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n     * Returns true if the given path is an ancestor of the base path.\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.isAncestor('foo.bar', 'foo')         // true\n     * Polymer.Path.isAncestor('foo.bar', 'foo.bar')     // false\n     * Polymer.Path.isAncestor('foo.bar', 'foo.bar.baz') // false\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string} base Path string to test against.\n     * @param {string} path Path string to test.\n     * @return {boolean} True if `path` is an ancestor of `base`.\n     */\n    isAncestor: function isAncestor(base, path) {\n      //     base.startsWith(path + '.');\n      return base.indexOf(path + '.') === 0;\n    },\n\n    /**\n     * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.isDescendant('foo.bar', 'foo.bar.baz') // true\n     * Polymer.Path.isDescendant('foo.bar', 'foo.bar')     // false\n     * Polymer.Path.isDescendant('foo.bar', 'foo')         // false\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string} base Path string to test against.\n     * @param {string} path Path string to test.\n     * @return {boolean} True if `path` is a descendant of `base`.\n     */\n    isDescendant: function isDescendant(base, path) {\n      //     path.startsWith(base + '.');\n      return path.indexOf(base + '.') === 0;\n    },\n\n    /**\n     * Replaces a previous base path with a new base path, preserving the\n     * remainder of the path.\n     *\n     * User must ensure `path` has a prefix of `base`.\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string} base Current base string to remove\n     * @param {string} newBase New base string to replace with\n     * @param {string} path Path to translate\n     * @return {string} Translated string\n     */\n    translate: function translate(base, newBase, path) {\n      return newBase + path.slice(base.length);\n    },\n\n    /**\n     * @param {string} base Path string to test against\n     * @param {string} path Path string to test\n     * @return {boolean} True if `path` is equal to `base`\n     * @this {Path}\n     */\n    matches: function matches(base, path) {\n      return base === path || this.isAncestor(base, path) || this.isDescendant(base, path);\n    },\n\n    /**\n     * Converts array-based paths to flattened path.  String-based paths\n     * are returned as-is.\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n     * Polymer.Path.normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string | !Array<string|number>} path Input path\n     * @return {string} Flattened path\n     */\n    normalize: function normalize(path) {\n      if (Array.isArray(path)) {\n        var parts = [];\n        for (var i = 0; i < path.length; i++) {\n          var args = path[i].toString().split('.');\n          for (var j = 0; j < args.length; j++) {\n            parts.push(args[j]);\n          }\n        }\n        return parts.join('.');\n      } else {\n        return path;\n      }\n    },\n\n    /**\n     * Splits a path into an array of property names. Accepts either arrays\n     * of path parts or strings.\n     *\n     * Example:\n     *\n     * ```\n     * Polymer.Path.split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n     * Polymer.Path.split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n     * ```\n     *\n     * @memberof Polymer.Path\n     * @param {string | !Array<string|number>} path Input path\n     * @return {!Array<string>} Array of path parts\n     * @this {Path}\n     * @suppress {checkTypes}\n     */\n    split: function split(path) {\n      if (Array.isArray(path)) {\n        return this.normalize(path).split('.');\n      }\n      return path.toString().split('.');\n    },\n\n    /**\n     * Reads a value from a path.  If any sub-property in the path is `undefined`,\n     * this method returns `undefined` (will never throw.\n     *\n     * @memberof Polymer.Path\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to read\n     * @param {Object=} info If an object is provided to `info`, the normalized\n     *  (flattened) path will be set to `info.path`.\n     * @return {*} Value at path, or `undefined` if the path could not be\n     *  fully dereferenced.\n     * @this {Path}\n     */\n    get: function get(root, path, info) {\n      var prop = root;\n      var parts = this.split(path);\n      // Loop over path parts[0..n-1] and dereference\n      for (var i = 0; i < parts.length; i++) {\n        if (!prop) {\n          return;\n        }\n        var part = parts[i];\n        prop = prop[part];\n      }\n      if (info) {\n        info.path = parts.join('.');\n      }\n      return prop;\n    },\n\n    /**\n     * Sets a value to a path.  If any sub-property in the path is `undefined`,\n     * this method will no-op.\n     *\n     * @memberof Polymer.Path\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to set\n     * @param {*} value Value to set to path\n     * @return {string | undefined} The normalized version of the input path\n     * @this {Path}\n     */\n    set: function set(root, path, value) {\n      var prop = root;\n      var parts = this.split(path);\n      var last = parts[parts.length - 1];\n      if (parts.length > 1) {\n        // Loop over path parts[0..n-2] and dereference\n        for (var i = 0; i < parts.length - 1; i++) {\n          var part = parts[i];\n          prop = prop[part];\n          if (!prop) {\n            return;\n          }\n        }\n        // Set value to object at end of path\n        prop[last] = value;\n      } else {\n        // Simple property set\n        prop[path] = value;\n      }\n      return parts.join('.');\n    }\n\n  };\n\n  /**\n   * Returns true if the given string is a structured data path (has dots).\n   *\n   * This function is deprecated.  Use `Polymer.Path.isPath` instead.\n   *\n   * Example:\n   *\n   * ```\n   * Polymer.Path.isDeep('foo.bar.baz') // true\n   * Polymer.Path.isDeep('foo')         // false\n   * ```\n   *\n   * @deprecated\n   * @memberof Polymer.Path\n   * @param {string} path Path string\n   * @return {boolean} True if the string contained one or more dots\n   */\n  Path.isDeep = Path.isPath;\n\n  Polymer.Path = Path;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/path.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/render-status.html":
/*!***************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/render-status.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n\n  'use strict';\n\n  var scheduled = false;\n  var beforeRenderQueue = [];\n  var afterRenderQueue = [];\n\n  function schedule() {\n    scheduled = true;\n    // before next render\n    requestAnimationFrame(function () {\n      scheduled = false;\n      flushQueue(beforeRenderQueue);\n      // after the render\n      setTimeout(function () {\n        runQueue(afterRenderQueue);\n      });\n    });\n  }\n\n  function flushQueue(queue) {\n    while (queue.length) {\n      callMethod(queue.shift());\n    }\n  }\n\n  function runQueue(queue) {\n    for (var i = 0, l = queue.length; i < l; i++) {\n      callMethod(queue.shift());\n    }\n  }\n\n  function callMethod(info) {\n    var context = info[0];\n    var callback = info[1];\n    var args = info[2];\n    try {\n      callback.apply(context, args);\n    } catch (e) {\n      setTimeout(function () {\n        throw e;\n      });\n    }\n  }\n\n  function flush() {\n    while (beforeRenderQueue.length || afterRenderQueue.length) {\n      flushQueue(beforeRenderQueue);\n      flushQueue(afterRenderQueue);\n    }\n    scheduled = false;\n  }\n\n  /**\n   * Module for scheduling flushable pre-render and post-render tasks.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module for scheduling flushable pre-render and post-render tasks.\n   */\n  Polymer.RenderStatus = {\n\n    /**\n     * Enqueues a callback which will be run before the next render, at\n     * `requestAnimationFrame` timing.\n     *\n     * This method is useful for enqueuing work that requires DOM measurement,\n     * since measurement may not be reliable in custom element callbacks before\n     * the first render, as well as for batching measurement tasks in general.\n     *\n     * Tasks in this queue may be flushed by calling `Polymer.RenderStatus.flush()`.\n     *\n     * @memberof Polymer.RenderStatus\n     * @param {*} context Context object the callback function will be bound to\n     * @param {function(...*):void} callback Callback function\n     * @param {!Array=} args An array of arguments to call the callback function with\n     * @return {void}\n     */\n    beforeNextRender: function beforeNextRender(context, callback, args) {\n      if (!scheduled) {\n        schedule();\n      }\n      beforeRenderQueue.push([context, callback, args]);\n    },\n\n    /**\n     * Enqueues a callback which will be run after the next render, equivalent\n     * to one task (`setTimeout`) after the next `requestAnimationFrame`.\n     *\n     * This method is useful for tuning the first-render performance of an\n     * element or application by deferring non-critical work until after the\n     * first paint.  Typical non-render-critical work may include adding UI\n     * event listeners and aria attributes.\n     *\n     * @memberof Polymer.RenderStatus\n     * @param {*} context Context object the callback function will be bound to\n     * @param {function(...*):void} callback Callback function\n     * @param {!Array=} args An array of arguments to call the callback function with\n     * @return {void}\n     */\n    afterNextRender: function afterNextRender(context, callback, args) {\n      if (!scheduled) {\n        schedule();\n      }\n      afterRenderQueue.push([context, callback, args]);\n    },\n\n    /**\n     * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`\n     * tasks.\n     *\n     * @memberof Polymer.RenderStatus\n     * @return {void}\n     */\n    flush: flush\n\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/render-status.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/resolve-url.html":
/*!*************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/resolve-url.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n(function () {\n  'use strict';\n\n  var CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\n  var ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  var workingURL = void 0;\n  var resolveDoc = void 0;\n  /**\n   * Resolves the given URL against the provided `baseUri'.\n   * \n   * Note that this function performs no resolution for URLs that start\n   * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n   * URL resolution, use `window.URL`.\n   *\n   * @memberof Polymer.ResolveUrl\n   * @param {string} url Input URL to resolve\n   * @param {?string=} baseURI Base URI to resolve the URL against\n   * @return {string} resolved URL\n   */\n  function resolveUrl(url, baseURI) {\n    if (url && ABS_URL.test(url)) {\n      return url;\n    }\n    // Lazy feature detection.\n    if (workingURL === undefined) {\n      workingURL = false;\n      try {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        workingURL = u.href === 'http://a/c%20d';\n      } catch (e) {\n        // silently fail\n      }\n    }\n    if (!baseURI) {\n      baseURI = document.baseURI || window.location.href;\n    }\n    if (workingURL) {\n      return new URL(url, baseURI).href;\n    }\n    // Fallback to creating an anchor into a disconnected document.\n    if (!resolveDoc) {\n      resolveDoc = document.implementation.createHTMLDocument('temp');\n      resolveDoc.base = resolveDoc.createElement('base');\n      resolveDoc.head.appendChild(resolveDoc.base);\n      resolveDoc.anchor = resolveDoc.createElement('a');\n      resolveDoc.body.appendChild(resolveDoc.anchor);\n    }\n    resolveDoc.base.href = baseURI;\n    resolveDoc.anchor.href = url;\n    return resolveDoc.anchor.href || url;\n  }\n\n  /**\n   * Resolves any relative URL's in the given CSS text against the provided\n   * `ownerDocument`'s `baseURI`.\n   *\n   * @memberof Polymer.ResolveUrl\n   * @param {string} cssText CSS text to process\n   * @param {string} baseURI Base URI to resolve the URL against\n   * @return {string} Processed CSS text with resolved URL's\n   */\n  function resolveCss(cssText, baseURI) {\n    return cssText.replace(CSS_URL_RX, function (m, pre, url, post) {\n      return pre + '\\'' + resolveUrl(url.replace(/[\"']/g, ''), baseURI) + '\\'' + post;\n    });\n  }\n\n  /**\n   * Returns a path from a given `url`. The path includes the trailing\n   * `/` from the url.\n   *\n   * @memberof Polymer.ResolveUrl\n   * @param {string} url Input URL to transform\n   * @return {string} resolved path\n   */\n  function pathFromUrl(url) {\n    return url.substring(0, url.lastIndexOf('/') + 1);\n  }\n\n  /**\n   * Module with utilities for resolving relative URL's.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module with utilities for resolving relative URL's.\n   */\n  Polymer.ResolveUrl = {\n    resolveCss: resolveCss,\n    resolveUrl: resolveUrl,\n    pathFromUrl: pathFromUrl\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/resolve-url.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/settings.html":
/*!**********************************************************!*\
  !*** ./bower_components/polymer/lib/utils/settings.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../utils/boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../utils/resolve-url.html */ \"./bower_components/polymer/lib/utils/resolve-url.html\");\n\n/** @suppress {deprecated} */\n(function () {\n  'use strict';\n\n  /**\n   * Sets the global, legacy settings.\n   *\n   * @deprecated\n   * @namespace\n   * @memberof Polymer\n   */\n\n  Polymer.Settings = Polymer.Settings || {};\n\n  Polymer.Settings.useShadow = !window.ShadyDOM;\n  Polymer.Settings.useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\n  Polymer.Settings.useNativeCustomElements = !window.customElements.polyfillWrapFlushCallback;\n\n  /**\n   * Globally settable property that is automatically assigned to\n   * `Polymer.ElementMixin` instances, useful for binding in templates to\n   * make URL's relative to an application's root.  Defaults to the main\n   * document URL, but can be overridden by users.  It may be useful to set\n   * `Polymer.rootPath` to provide a stable application mount path when\n   * using client side routing.\n   *\n   * @memberof Polymer\n   */\n  var rootPath = Polymer.rootPath || Polymer.ResolveUrl.pathFromUrl(document.baseURI || window.location.href);\n\n  Polymer.rootPath = rootPath;\n\n  /**\n   * Sets the global rootPath property used by `Polymer.ElementMixin` and\n   * available via `Polymer.rootPath`.\n   *\n   * @memberof Polymer\n   * @param {string} path The new root path\n   * @return {void}\n   */\n  Polymer.setRootPath = function (path) {\n    Polymer.rootPath = path;\n  };\n\n  /**\n   * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n   *\n   *     Polymer = {\n   *       sanitizeDOMValue: function(value, name, type, node) { ... }\n   *     }\n   *\n   * Where:\n   *\n   * `value` is the value to sanitize.\n   * `name` is the name of an attribute or property (for example, href).\n   * `type` indicates where the value is being inserted: one of property, attribute, or text.\n   * `node` is the node where the value is being inserted.\n   *\n   * @type {(function(*,string,string,Node):*)|undefined}\n   * @memberof Polymer\n   */\n  var sanitizeDOMValue = Polymer.sanitizeDOMValue;\n\n  // This is needed for tooling\n  Polymer.sanitizeDOMValue = sanitizeDOMValue;\n\n  /**\n   * Sets the global sanitizeDOMValue available via `Polymer.sanitizeDOMValue`.\n   *\n   * @memberof Polymer\n   * @param {(function(*,string,string,Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n   * @return {void}\n   */\n  Polymer.setSanitizeDOMValue = function (newSanitizeDOMValue) {\n    Polymer.sanitizeDOMValue = newSanitizeDOMValue;\n  };\n\n  /**\n   * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n   * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n   * scrolling performance.\n   * Defaults to `false` for backwards compatibility.\n   *\n   * @memberof Polymer\n   */\n  var passiveTouchGestures = false;\n\n  Polymer.passiveTouchGestures = passiveTouchGestures;\n\n  /**\n   * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n   *\n   * @memberof Polymer\n   * @param {boolean} usePassive enable or disable passive touch gestures globally\n   * @return {void}\n   */\n  Polymer.setPassiveTouchGestures = function (usePassive) {\n    Polymer.passiveTouchGestures = usePassive;\n  };\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/settings.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/style-gather.html":
/*!**************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/style-gather.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n__webpack_require__(/*! ./resolve-url.html */ \"./bower_components/polymer/lib/utils/resolve-url.html\");\n\n(function () {\n  'use strict';\n\n  var MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\n  var INCLUDE_ATTR = 'include';\n  var SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\n  function importModule(moduleId) {\n    var /** Polymer.DomModule */PolymerDomModule = customElements.get('dom-module');\n    if (!PolymerDomModule) {\n      return null;\n    }\n    return PolymerDomModule.import(moduleId);\n  }\n\n  function styleForImport(importDoc) {\n    // NOTE: polyfill affordance.\n    // under the HTMLImports polyfill, there will be no 'body',\n    // but the import pseudo-doc can be used directly.\n    var container = importDoc.body ? importDoc.body : importDoc;\n    var importCss = Polymer.ResolveUrl.resolveCss(container.textContent, importDoc.baseURI);\n    var style = document.createElement('style');\n    style.textContent = importCss;\n    return style;\n  }\n\n  /** @typedef {{assetpath: string}} */\n  var templateWithAssetPath = void 0; // eslint-disable-line no-unused-vars\n\n  /**\n   * Module with utilities for collection CSS text from `<templates>`, external\n   * stylesheets, and `dom-module`s.\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module with utilities for collection CSS text from various sources.\n   */\n  var StyleGather = {\n\n    /**\n     * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n     *\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleIds List of dom-module id's within which to\n     * search for css.\n     * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n     * @this {StyleGather}\n     */\n    stylesFromModules: function stylesFromModules(moduleIds) {\n      var modules = moduleIds.trim().split(/\\s+/);\n      var styles = [];\n      for (var i = 0; i < modules.length; i++) {\n        styles.push.apply(styles, _toConsumableArray(this.stylesFromModule(modules[i])));\n      }\n      return styles;\n    },\n\n\n    /**\n     * Returns a list of <style> elements in a given `dom-module`.\n     * Styles in a `dom-module` can come either from `<style>`s within the\n     * first `<template>`, or else from one or more\n     * `<link rel=\"import\" type=\"css\">` links outside the template.\n     *\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleId dom-module id to gather styles from\n     * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n     * @this {StyleGather}\n     */\n    stylesFromModule: function stylesFromModule(moduleId) {\n      var m = importModule(moduleId);\n      if (m && m._styles === undefined) {\n        var styles = [];\n        // module imports: <link rel=\"import\" type=\"css\">\n        styles.push.apply(styles, _toConsumableArray(this._stylesFromModuleImports(m)));\n        // include css from the first template in the module\n        var template = m.querySelector('template');\n        if (template) {\n          styles.push.apply(styles, _toConsumableArray(this.stylesFromTemplate(template,\n          /** @type {templateWithAssetPath} */m.assetpath)));\n        }\n        m._styles = styles;\n      }\n      if (!m) {\n        console.warn('Could not find style data in module named', moduleId);\n      }\n      return m ? m._styles : [];\n    },\n\n\n    /**\n     * Returns the `<style>` elements within a given template.\n     *\n     * @memberof Polymer.StyleGather\n     * @param {!HTMLTemplateElement} template Template to gather styles from\n     * @param {string} baseURI baseURI for style content\n     * @return {!Array<!HTMLStyleElement>} Array of styles\n     * @this {StyleGather}\n     */\n    stylesFromTemplate: function stylesFromTemplate(template, baseURI) {\n      if (!template._styles) {\n        var styles = [];\n        // if element is a template, get content from its .content\n        var e$ = template.content.querySelectorAll('style');\n        for (var i = 0; i < e$.length; i++) {\n          var e = e$[i];\n          // support style sharing by allowing styles to \"include\"\n          // other dom-modules that contain styling\n          var include = e.getAttribute(INCLUDE_ATTR);\n          if (include) {\n            styles.push.apply(styles, _toConsumableArray(this.stylesFromModules(include)));\n          }\n          if (baseURI) {\n            e.textContent = Polymer.ResolveUrl.resolveCss(e.textContent, baseURI);\n          }\n          styles.push(e);\n        }\n        template._styles = styles;\n      }\n      return template._styles;\n    },\n\n\n    /**\n     * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n     *\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleId Id of `dom-module` to gather CSS from\n     * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n     * @this {StyleGather}\n     */\n    stylesFromModuleImports: function stylesFromModuleImports(moduleId) {\n      var m = importModule(moduleId);\n      return m ? this._stylesFromModuleImports(m) : [];\n    },\n\n\n    /**\n     * @memberof Polymer.StyleGather\n     * @this {StyleGather}\n     * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n     * @return {!Array<!HTMLStyleElement>} Array of contained styles\n     */\n    _stylesFromModuleImports: function _stylesFromModuleImports(module) {\n      var styles = [];\n      var p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n      for (var i = 0; i < p$.length; i++) {\n        var p = p$[i];\n        if (p.import) {\n          var importDoc = p.import;\n          var unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n          if (unscoped && !importDoc._unscopedStyle) {\n            var style = styleForImport(importDoc);\n            style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n            importDoc._unscopedStyle = style;\n          } else if (!importDoc._style) {\n            importDoc._style = styleForImport(importDoc);\n          }\n          styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n        }\n      }\n      return styles;\n    },\n\n\n    /**\n     *\n     * Returns CSS text of styles in a space-separated list of `dom-module`s.\n     * Note: This method is deprecated, use `stylesFromModules` instead.\n     *\n     * @deprecated\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleIds List of dom-module id's within which to\n     * search for css.\n     * @return {string} Concatenated CSS content from specified `dom-module`s\n     * @this {StyleGather}\n     */\n    cssFromModules: function cssFromModules(moduleIds) {\n      var modules = moduleIds.trim().split(/\\s+/);\n      var cssText = '';\n      for (var i = 0; i < modules.length; i++) {\n        cssText += this.cssFromModule(modules[i]);\n      }\n      return cssText;\n    },\n\n\n    /**\n     * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n     * can come either from `<style>`s within the first `<template>`, or else\n     * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n     * template.\n     *\n     * Any `<styles>` processed are removed from their original location.\n     * Note: This method is deprecated, use `styleFromModule` instead.\n     *\n     * @deprecated\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleId dom-module id to gather styles from\n     * @return {string} Concatenated CSS content from specified `dom-module`\n     * @this {StyleGather}\n     */\n    cssFromModule: function cssFromModule(moduleId) {\n      var m = importModule(moduleId);\n      if (m && m._cssText === undefined) {\n        // module imports: <link rel=\"import\" type=\"css\">\n        var cssText = this._cssFromModuleImports(m);\n        // include css from the first template in the module\n        var t = m.querySelector('template');\n        if (t) {\n          cssText += this.cssFromTemplate(t,\n          /** @type {templateWithAssetPath} */m.assetpath);\n        }\n        m._cssText = cssText || null;\n      }\n      if (!m) {\n        console.warn('Could not find style data in module named', moduleId);\n      }\n      return m && m._cssText || '';\n    },\n\n\n    /**\n     * Returns CSS text of `<styles>` within a given template.\n     *\n     * Any `<styles>` processed are removed from their original location.\n     * Note: This method is deprecated, use `styleFromTemplate` instead.\n     *\n     * @deprecated\n     * @memberof Polymer.StyleGather\n     * @param {!HTMLTemplateElement} template Template to gather styles from\n     * @param {string} baseURI Base URI to resolve the URL against\n     * @return {string} Concatenated CSS content from specified template\n     * @this {StyleGather}\n     */\n    cssFromTemplate: function cssFromTemplate(template, baseURI) {\n      var cssText = '';\n      var e$ = this.stylesFromTemplate(template, baseURI);\n      // if element is a template, get content from its .content\n      for (var i = 0; i < e$.length; i++) {\n        var e = e$[i];\n        if (e.parentNode) {\n          e.parentNode.removeChild(e);\n        }\n        cssText += e.textContent;\n      }\n      return cssText;\n    },\n\n\n    /**\n     * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n     * links within the specified `dom-module`.\n     *\n     * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n     *\n     * @deprecated\n     *\n     * @memberof Polymer.StyleGather\n     * @param {string} moduleId Id of `dom-module` to gather CSS from\n     * @return {string} Concatenated CSS content from links in specified `dom-module`\n     * @this {StyleGather}\n     */\n    cssFromModuleImports: function cssFromModuleImports(moduleId) {\n      var m = importModule(moduleId);\n      return m ? this._cssFromModuleImports(m) : '';\n    },\n\n\n    /**\n     * @deprecated\n     * @memberof Polymer.StyleGather\n     * @this {StyleGather}\n     * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n     * @return {string} Concatenated CSS content from links in the dom-module\n     */\n    _cssFromModuleImports: function _cssFromModuleImports(module) {\n      var cssText = '';\n      var styles = this._stylesFromModuleImports(module);\n      for (var i = 0; i < styles.length; i++) {\n        cssText += styles[i].textContent;\n      }\n      return cssText;\n    }\n  };\n\n  Polymer.StyleGather = StyleGather;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/style-gather.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/templatize.html":
/*!************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/templatize.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n__webpack_require__(/*! ./boot.html */ \"./bower_components/polymer/lib/utils/boot.html\");\n\n__webpack_require__(/*! ../mixins/property-effects.html */ \"./bower_components/polymer/lib/mixins/property-effects.html\");\n\n__webpack_require__(/*! ../mixins/mutable-data.html */ \"./bower_components/polymer/lib/mixins/mutable-data.html\");\n\n(function () {\n  'use strict';\n\n  // Base class for HTMLTemplateElement extension that has property effects\n  // machinery for propagating host properties to children. This is an ES5\n  // class only because Babel (incorrectly) requires super() in the class\n  // constructor even though no `this` is used and it returns an instance.\n\n  var newInstance = null;\n  /**\n   * @constructor\n   * @extends {HTMLTemplateElement}\n   */\n  function HTMLTemplateElementExtension() {\n    return newInstance;\n  }\n  HTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n    constructor: {\n      value: HTMLTemplateElementExtension,\n      writable: true\n    }\n  });\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   * @extends {HTMLTemplateElementExtension}\n   */\n  var DataTemplate = Polymer.PropertyEffects(HTMLTemplateElementExtension);\n  /**\n   * @constructor\n   * @implements {Polymer_MutableData}\n   * @extends {DataTemplate}\n   */\n  var MutableDataTemplate = Polymer.MutableData(DataTemplate);\n\n  // Applies a DataTemplate subclass to a <template> instance\n  function upgradeTemplate(template, constructor) {\n    newInstance = template;\n    Object.setPrototypeOf(template, constructor.prototype);\n    new constructor();\n    newInstance = null;\n  }\n\n  // Base class for TemplateInstance's\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   */\n  var base = Polymer.PropertyEffects(function () {\n    function _class() {\n      _classCallCheck(this, _class);\n    }\n\n    return _class;\n  }());\n\n  /**\n   * @polymer\n   * @customElement\n   * @appliesMixin Polymer.PropertyEffects\n   * @unrestricted\n   */\n\n  var TemplateInstanceBase = function (_base) {\n    _inherits(TemplateInstanceBase, _base);\n\n    function TemplateInstanceBase(props) {\n      _classCallCheck(this, TemplateInstanceBase);\n\n      var _this = _possibleConstructorReturn(this, (TemplateInstanceBase.__proto__ || Object.getPrototypeOf(TemplateInstanceBase)).call(this));\n\n      _this._configureProperties(props);\n      _this.root = _this._stampTemplate(_this.__dataHost);\n      // Save list of stamped children\n      var children = _this.children = [];\n      for (var n = _this.root.firstChild; n; n = n.nextSibling) {\n        children.push(n);\n        n.__templatizeInstance = _this;\n      }\n      if (_this.__templatizeOwner && _this.__templatizeOwner.__hideTemplateChildren__) {\n        _this._showHideChildren(true);\n      }\n      // Flush props only when props are passed if instance props exist\n      // or when there isn't instance props.\n      var options = _this.__templatizeOptions;\n      if (props && options.instanceProps || !options.instanceProps) {\n        _this._enableProperties();\n      }\n      return _this;\n    }\n    /**\n     * Configure the given `props` by calling `_setPendingProperty`. Also\n     * sets any properties stored in `__hostProps`.\n     * @private\n     * @param {Object} props Object of property name-value pairs to set.\n     * @return {void}\n     */\n\n\n    _createClass(TemplateInstanceBase, [{\n      key: '_configureProperties',\n      value: function _configureProperties(props) {\n        var options = this.__templatizeOptions;\n        if (options.forwardHostProp) {\n          for (var hprop in this.__hostProps) {\n            this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n          }\n        }\n        // Any instance props passed in the constructor will overwrite host props;\n        // normally this would be a user error but we don't specifically filter them\n        for (var iprop in props) {\n          this._setPendingProperty(iprop, props[iprop]);\n        }\n      }\n      /**\n       * Forwards a host property to this instance.  This method should be\n       * called on instances from the `options.forwardHostProp` callback\n       * to propagate changes of host properties to each instance.\n       *\n       * Note this method enqueues the change, which are flushed as a batch.\n       *\n       * @param {string} prop Property or path name\n       * @param {*} value Value of the property to forward\n       * @return {void}\n       */\n\n    }, {\n      key: 'forwardHostProp',\n      value: function forwardHostProp(prop, value) {\n        if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n          this.__dataHost._enqueueClient(this);\n        }\n      }\n\n      /**\n       * Override point for adding custom or simulated event handling.\n       *\n       * @param {!Node} node Node to add event listener to\n       * @param {string} eventName Name of event\n       * @param {function(!Event):void} handler Listener function to add\n       * @return {void}\n       */\n\n    }, {\n      key: '_addEventListenerToNode',\n      value: function _addEventListenerToNode(node, eventName, handler) {\n        var _this2 = this;\n\n        if (this._methodHost && this.__templatizeOptions.parentModel) {\n          // If this instance should be considered a parent model, decorate\n          // events this template instance as `model`\n          this._methodHost._addEventListenerToNode(node, eventName, function (e) {\n            e.model = _this2;\n            handler(e);\n          });\n        } else {\n          // Otherwise delegate to the template's host (which could be)\n          // another template instance\n          var templateHost = this.__dataHost.__dataHost;\n          if (templateHost) {\n            templateHost._addEventListenerToNode(node, eventName, handler);\n          }\n        }\n      }\n      /**\n       * Shows or hides the template instance top level child elements. For\n       * text nodes, `textContent` is removed while \"hidden\" and replaced when\n       * \"shown.\"\n       * @param {boolean} hide Set to true to hide the children;\n       * set to false to show them.\n       * @return {void}\n       * @protected\n       */\n\n    }, {\n      key: '_showHideChildren',\n      value: function _showHideChildren(hide) {\n        var c = this.children;\n        for (var i = 0; i < c.length; i++) {\n          var n = c[i];\n          // Ignore non-changes\n          if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n            if (n.nodeType === Node.TEXT_NODE) {\n              if (hide) {\n                n.__polymerTextContent__ = n.textContent;\n                n.textContent = '';\n              } else {\n                n.textContent = n.__polymerTextContent__;\n              }\n              // remove and replace slot\n            } else if (n.localName === 'slot') {\n              if (hide) {\n                n.__polymerReplaced__ = document.createComment('hidden-slot');\n                n.parentNode.replaceChild(n.__polymerReplaced__, n);\n              } else {\n                var replace = n.__polymerReplaced__;\n                if (replace) {\n                  replace.parentNode.replaceChild(n, replace);\n                }\n              }\n            } else if (n.style) {\n              if (hide) {\n                n.__polymerDisplay__ = n.style.display;\n                n.style.display = 'none';\n              } else {\n                n.style.display = n.__polymerDisplay__;\n              }\n            }\n          }\n          n.__hideTemplateChildren__ = hide;\n          if (n._showHideChildren) {\n            n._showHideChildren(hide);\n          }\n        }\n      }\n      /**\n       * Overrides default property-effects implementation to intercept\n       * textContent bindings while children are \"hidden\" and cache in\n       * private storage for later retrieval.\n       *\n       * @param {!Node} node The node to set a property on\n       * @param {string} prop The property to set\n       * @param {*} value The value to set\n       * @return {void}\n       * @protected\n       */\n\n    }, {\n      key: '_setUnmanagedPropertyToNode',\n      value: function _setUnmanagedPropertyToNode(node, prop, value) {\n        if (node.__hideTemplateChildren__ && node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n          node.__polymerTextContent__ = value;\n        } else {\n          _get(TemplateInstanceBase.prototype.__proto__ || Object.getPrototypeOf(TemplateInstanceBase.prototype), '_setUnmanagedPropertyToNode', this).call(this, node, prop, value);\n        }\n      }\n      /**\n       * Find the parent model of this template instance.  The parent model\n       * is either another templatize instance that had option `parentModel: true`,\n       * or else the host element.\n       *\n       * @return {!Polymer_PropertyEffects} The parent model of this instance\n       */\n\n    }, {\n      key: 'dispatchEvent',\n\n\n      /**\n       * Stub of HTMLElement's `dispatchEvent`, so that effects that may\n       * dispatch events safely no-op.\n       *\n       * @param {Event} event Event to dispatch\n       */\n      value: function dispatchEvent(event) {// eslint-disable-line no-unused-vars\n      }\n    }, {\n      key: 'parentModel',\n      get: function get() {\n        var model = this.__parentModel;\n        if (!model) {\n          var options = void 0;\n          model = this;\n          do {\n            // A template instance's `__dataHost` is a <template>\n            // `model.__dataHost.__dataHost` is the template's host\n            model = model.__dataHost.__dataHost;\n          } while ((options = model.__templatizeOptions) && !options.parentModel);\n          this.__parentModel = model;\n        }\n        return model;\n      }\n    }]);\n\n    return TemplateInstanceBase;\n  }(base);\n\n  /** @type {!DataTemplate} */\n\n\n  TemplateInstanceBase.prototype.__dataHost;\n  /** @type {!TemplatizeOptions} */\n  TemplateInstanceBase.prototype.__templatizeOptions;\n  /** @type {!Polymer_PropertyEffects} */\n  TemplateInstanceBase.prototype._methodHost;\n  /** @type {!Object} */\n  TemplateInstanceBase.prototype.__templatizeOwner;\n  /** @type {!Object} */\n  TemplateInstanceBase.prototype.__hostProps;\n\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   * @implements {Polymer_MutableData}\n   */\n  var MutableTemplateInstanceBase = Polymer.MutableData(TemplateInstanceBase);\n\n  function findMethodHost(template) {\n    // Technically this should be the owner of the outermost template.\n    // In shadow dom, this is always getRootNode().host, but we can\n    // approximate this via cooperation with our dataHost always setting\n    // `_methodHost` as long as there were bindings (or id's) on this\n    // instance causing it to get a dataHost.\n    var templateHost = template.__dataHost;\n    return templateHost && templateHost._methodHost || templateHost;\n  }\n\n  /* eslint-disable valid-jsdoc */\n  /**\n   * @suppress {missingProperties} class.prototype is not defined for some reason\n   */\n  function createTemplatizerClass(template, templateInfo, options) {\n    // Anonymous class created by the templatize\n    var base = options.mutableData ? MutableTemplateInstanceBase : TemplateInstanceBase;\n    /**\n     * @constructor\n     * @extends {base}\n     * @private\n     */\n    var klass = function (_base2) {\n      _inherits(klass, _base2);\n\n      function klass() {\n        _classCallCheck(this, klass);\n\n        return _possibleConstructorReturn(this, (klass.__proto__ || Object.getPrototypeOf(klass)).apply(this, arguments));\n      }\n\n      return klass;\n    }(base);\n    klass.prototype.__templatizeOptions = options;\n    klass.prototype._bindTemplate(template);\n    addNotifyEffects(klass, template, templateInfo, options);\n    return klass;\n  }\n\n  /**\n   * @suppress {missingProperties} class.prototype is not defined for some reason\n   */\n  function addPropagateEffects(template, templateInfo, options) {\n    var userForwardHostProp = options.forwardHostProp;\n    if (userForwardHostProp) {\n      // Provide data API and property effects on memoized template class\n      var klass = templateInfo.templatizeTemplateClass;\n      if (!klass) {\n        var _base3 = options.mutableData ? MutableDataTemplate : DataTemplate;\n        klass = templateInfo.templatizeTemplateClass = function (_base4) {\n          _inherits(TemplatizedTemplate, _base4);\n\n          function TemplatizedTemplate() {\n            _classCallCheck(this, TemplatizedTemplate);\n\n            return _possibleConstructorReturn(this, (TemplatizedTemplate.__proto__ || Object.getPrototypeOf(TemplatizedTemplate)).apply(this, arguments));\n          }\n\n          return TemplatizedTemplate;\n        }(_base3);\n        // Add template - >instances effects\n        // and host <- template effects\n        var hostProps = templateInfo.hostProps;\n        for (var prop in hostProps) {\n          klass.prototype._addPropertyEffect('_host_' + prop, klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE, { fn: createForwardHostPropEffect(prop, userForwardHostProp) });\n          klass.prototype._createNotifyingProperty('_host_' + prop);\n        }\n      }\n      upgradeTemplate(template, klass);\n      // Mix any pre-bound data into __data; no need to flush this to\n      // instances since they pull from the template at instance-time\n      if (template.__dataProto) {\n        // Note, generally `__dataProto` could be chained, but it's guaranteed\n        // to not be since this is a vanilla template we just added effects to\n        Object.assign(template.__data, template.__dataProto);\n      }\n      // Clear any pending data for performance\n      template.__dataTemp = {};\n      template.__dataPending = null;\n      template.__dataOld = null;\n      template._enableProperties();\n    }\n  }\n  /* eslint-enable valid-jsdoc */\n\n  function createForwardHostPropEffect(hostProp, userForwardHostProp) {\n    return function forwardHostProp(template, prop, props) {\n      userForwardHostProp.call(template.__templatizeOwner, prop.substring('_host_'.length), props[prop]);\n    };\n  }\n\n  function addNotifyEffects(klass, template, templateInfo, options) {\n    var hostProps = templateInfo.hostProps || {};\n    for (var iprop in options.instanceProps) {\n      delete hostProps[iprop];\n      var userNotifyInstanceProp = options.notifyInstanceProp;\n      if (userNotifyInstanceProp) {\n        klass.prototype._addPropertyEffect(iprop, klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY, { fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp) });\n      }\n    }\n    if (options.forwardHostProp && template.__dataHost) {\n      for (var hprop in hostProps) {\n        klass.prototype._addPropertyEffect(hprop, klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY, { fn: createNotifyHostPropEffect() });\n      }\n    }\n  }\n\n  function createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n    return function notifyInstanceProp(inst, prop, props) {\n      userNotifyInstanceProp.call(inst.__templatizeOwner, inst, prop, props[prop]);\n    };\n  }\n\n  function createNotifyHostPropEffect() {\n    return function notifyHostProp(inst, prop, props) {\n      inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n    };\n  }\n\n  /**\n   * Module for preparing and stamping instances of templates that utilize\n   * Polymer's data-binding and declarative event listener features.\n   *\n   * Example:\n   *\n   *     // Get a template from somewhere, e.g. light DOM\n   *     let template = this.querySelector('template');\n   *     // Prepare the template\n   *     let TemplateClass = Polymer.Templatize.templatize(template);\n   *     // Instance the template with an initial data model\n   *     let instance = new TemplateClass({myProp: 'initial'});\n   *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n   *     this.shadowRoot.appendChild(instance.root);\n   *     // Changing a property on the instance will propagate to bindings\n   *     // in the template\n   *     instance.myProp = 'new value';\n   *\n   * The `options` dictionary passed to `templatize` allows for customizing\n   * features of the generated template class, including how outer-scope host\n   * properties should be forwarded into template instances, how any instance\n   * properties added into the template's scope should be notified out to\n   * the host, and whether the instance should be decorated as a \"parent model\"\n   * of any event handlers.\n   *\n   *     // Customize property forwarding and event model decoration\n   *     let TemplateClass = Polymer.Templatize.templatize(template, this, {\n   *       parentModel: true,\n   *       forwardHostProp(property, value) {...},\n   *       instanceProps: {...},\n   *       notifyInstanceProp(instance, property, value) {...},\n   *     });\n   *\n   * @namespace\n   * @memberof Polymer\n   * @summary Module for preparing and stamping instances of templates\n   *   utilizing Polymer templating features.\n   */\n\n  var Templatize = {\n\n    /**\n     * Returns an anonymous `Polymer.PropertyEffects` class bound to the\n     * `<template>` provided.  Instancing the class will result in the\n     * template being stamped into a document fragment stored as the instance's\n     * `root` property, after which it can be appended to the DOM.\n     *\n     * Templates may utilize all Polymer data-binding features as well as\n     * declarative event listeners.  Event listeners and inline computing\n     * functions in the template will be called on the host of the template.\n     *\n     * The constructor returned takes a single argument dictionary of initial\n     * property values to propagate into template bindings.  Additionally\n     * host properties can be forwarded in, and instance properties can be\n     * notified out by providing optional callbacks in the `options` dictionary.\n     *\n     * Valid configuration in `options` are as follows:\n     *\n     * - `forwardHostProp(property, value)`: Called when a property referenced\n     *   in the template changed on the template's host. As this library does\n     *   not retain references to templates instanced by the user, it is the\n     *   templatize owner's responsibility to forward host property changes into\n     *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n     *    method on the generated class should be called to forward host\n     *   properties into the template to prevent unnecessary property-changed\n     *   notifications. Any properties referenced in the template that are not\n     *   defined in `instanceProps` will be notified up to the template's host\n     *   automatically.\n     * - `instanceProps`: Dictionary of property names that will be added\n     *   to the instance by the templatize owner.  These properties shadow any\n     *   host properties, and changes within the template to these properties\n     *   will result in `notifyInstanceProp` being called.\n     * - `mutableData`: When `true`, the generated class will skip strict\n     *   dirty-checking for objects and arrays (always consider them to be\n     *   \"dirty\").\n     * - `notifyInstanceProp(instance, property, value)`: Called when\n     *   an instance property changes.  Users may choose to call `notifyPath`\n     *   on e.g. the owner to notify the change.\n     * - `parentModel`: When `true`, events handled by declarative event listeners\n     *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n     *   to the template instance that stamped it.  It will also be returned\n     *   from `instance.parentModel` in cases where template instance nesting\n     *   causes an inner model to shadow an outer model.\n     *\n     * When `options.forwardHostProp` is declared as an option, any properties\n     * referenced in the template will be automatically forwarded from the host of\n     * the `<template>` to instances, with the exception of any properties listed in\n     * the `options.instanceProps` object.  `instanceProps` are assumed to be\n     * managed by the owner of the instances, either passed into the constructor\n     * or set after the fact.  Note, any properties passed into the constructor will\n     * always be set to the instance (regardless of whether they would normally\n     * be forwarded from the host).\n     *\n     * Note that the class returned from `templatize` is generated only once\n     * for a given `<template>` using `options` from the first call for that\n     * template, and the cached class is returned for all subsequent calls to\n     * `templatize` for that template.  As such, `options` callbacks should not\n     * close over owner-specific properties since only the first `options` is\n     * used; rather, callbacks are called bound to the `owner`, and so context\n     * needed from the callbacks (such as references to `instances` stamped)\n     * should be stored on the `owner` such that they can be retrieved via `this`.\n     *\n     * @memberof Polymer.Templatize\n     * @param {!HTMLTemplateElement} template Template to templatize\n     * @param {Polymer_PropertyEffects=} owner Owner of the template instances;\n     *   any optional callbacks will be bound to this owner.\n     * @param {Object=} options Options dictionary (see summary for details)\n     * @return {function(new:TemplateInstanceBase)} Generated class bound to the template\n     *   provided\n     * @suppress {invalidCasts}\n     */\n    templatize: function templatize(template, owner, options) {\n      options = /** @type {!TemplatizeOptions} */options || {};\n      if (template.__templatizeOwner) {\n        throw new Error('A <template> can only be templatized once');\n      }\n      template.__templatizeOwner = owner;\n      var ctor = owner ? owner.constructor : TemplateInstanceBase;\n      var templateInfo = ctor._parseTemplate(template);\n      // Get memoized base class for the prototypical template, which\n      // includes property effects for binding template & forwarding\n      var baseClass = templateInfo.templatizeInstanceClass;\n      if (!baseClass) {\n        baseClass = createTemplatizerClass(template, templateInfo, options);\n        templateInfo.templatizeInstanceClass = baseClass;\n      }\n      // Host property forwarding must be installed onto template instance\n      addPropagateEffects(template, templateInfo, options);\n      // Subclass base class and add reference for this specific template\n      /** @private */\n      var klass = function (_baseClass) {\n        _inherits(TemplateInstance, _baseClass);\n\n        function TemplateInstance() {\n          _classCallCheck(this, TemplateInstance);\n\n          return _possibleConstructorReturn(this, (TemplateInstance.__proto__ || Object.getPrototypeOf(TemplateInstance)).apply(this, arguments));\n        }\n\n        return TemplateInstance;\n      }(baseClass);\n      klass.prototype._methodHost = findMethodHost(template);\n      klass.prototype.__dataHost = template;\n      klass.prototype.__templatizeOwner = owner;\n      klass.prototype.__hostProps = templateInfo.hostProps;\n      klass = /** @type {function(new:TemplateInstanceBase)} */klass; //eslint-disable-line no-self-assign\n      return klass;\n    },\n\n\n    /**\n     * Returns the template \"model\" associated with a given element, which\n     * serves as the binding scope for the template instance the element is\n     * contained in. A template model is an instance of\n     * `TemplateInstanceBase`, and should be used to manipulate data\n     * associated with this template instance.\n     *\n     * Example:\n     *\n     *   let model = modelForElement(el);\n     *   if (model.index < 10) {\n     *     model.set('item.checked', true);\n     *   }\n     *\n     * @memberof Polymer.Templatize\n     * @param {HTMLTemplateElement} template The model will be returned for\n     *   elements stamped from this template\n     * @param {Node=} node Node for which to return a template model.\n     * @return {TemplateInstanceBase} Template instance representing the\n     *   binding scope for the element\n     */\n    modelForElement: function modelForElement(template, node) {\n      var model = void 0;\n      while (node) {\n        // An element with a __templatizeInstance marks the top boundary\n        // of a scope; walk up until we find one, and then ensure that\n        // its __dataHost matches `this`, meaning this dom-repeat stamped it\n        if (model = node.__templatizeInstance) {\n          // Found an element stamped by another template; keep walking up\n          // from its __dataHost\n          if (model.__dataHost != template) {\n            node = model.__dataHost;\n          } else {\n            return model;\n          }\n        } else {\n          // Still in a template scope, keep going up until\n          // a __templatizeInstance is found\n          node = node.parentNode;\n        }\n      }\n      return null;\n    }\n  };\n\n  Polymer.Templatize = Templatize;\n  Polymer.TemplateInstanceBase = TemplateInstanceBase;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/templatize.html?");

/***/ }),

/***/ "./bower_components/polymer/lib/utils/unresolved.html":
/*!************************************************************!*\
  !*** ./bower_components/polymer/lib/utils/unresolved.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  'use strict';\n\n  // unresolved\n\n  function resolve() {\n    document.body.removeAttribute('unresolved');\n  }\n\n  if (window.WebComponents) {\n    window.addEventListener('WebComponentsReady', resolve);\n  } else {\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      resolve();\n    } else {\n      window.addEventListener('DOMContentLoaded', resolve);\n    }\n  }\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/lib/utils/unresolved.html?");

/***/ }),

/***/ "./bower_components/polymer/polymer-element.html":
/*!*******************************************************!*\
  !*** ./bower_components/polymer/polymer-element.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./lib/mixins/element-mixin.html */ \"./bower_components/polymer/lib/mixins/element-mixin.html\");\n\n__webpack_require__(/*! ./lib/utils/html-tag.html */ \"./bower_components/polymer/lib/utils/html-tag.html\");\n\n(function () {\n  'use strict';\n\n  /**\n   * Base class that provides the core API for Polymer's meta-programming\n   * features including template stamping, data-binding, attribute deserialization,\n   * and property change observation.\n   *\n   * @customElement\n   * @polymer\n   * @memberof Polymer\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @extends HTMLElement\n   * @appliesMixin Polymer.ElementMixin\n   * @summary Custom element base class that provides the core API for Polymer's\n   *   key meta-programming features including template stamping, data-binding,\n   *   attribute deserialization, and property change observation\n   */\n\n  var Element = Polymer.ElementMixin(HTMLElement);\n  /**\n   * @constructor\n   * @implements {Polymer_ElementMixin}\n   * @extends {HTMLElement}\n   */\n  Polymer.Element = Element;\n\n  // NOTE: this is here for modulizer to export `html` for the module version of this file\n  Polymer.html = Polymer.html;\n})();\n\n//# sourceURL=webpack:///./bower_components/polymer/polymer-element.html?");

/***/ }),

/***/ "./bower_components/polymer/polymer.html":
/*!***********************************************!*\
  !*** ./bower_components/polymer/polymer.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./lib/legacy/legacy-element-mixin.html */ \"./bower_components/polymer/lib/legacy/legacy-element-mixin.html\");\n\n__webpack_require__(/*! ./lib/legacy/polymer-fn.html */ \"./bower_components/polymer/lib/legacy/polymer-fn.html\");\n\n__webpack_require__(/*! ./lib/legacy/templatizer-behavior.html */ \"./bower_components/polymer/lib/legacy/templatizer-behavior.html\");\n\n__webpack_require__(/*! ./lib/elements/dom-bind.html */ \"./bower_components/polymer/lib/elements/dom-bind.html\");\n\n__webpack_require__(/*! ./lib/elements/dom-repeat.html */ \"./bower_components/polymer/lib/elements/dom-repeat.html\");\n\n__webpack_require__(/*! ./lib/elements/dom-if.html */ \"./bower_components/polymer/lib/elements/dom-if.html\");\n\n__webpack_require__(/*! ./lib/elements/array-selector.html */ \"./bower_components/polymer/lib/elements/array-selector.html\");\n\n__webpack_require__(/*! ./lib/elements/custom-style.html */ \"./bower_components/polymer/lib/elements/custom-style.html\");\n\n__webpack_require__(/*! ./lib/legacy/mutable-data-behavior.html */ \"./bower_components/polymer/lib/legacy/mutable-data-behavior.html\");\n\n__webpack_require__(/*! ./lib/utils/html-tag.html */ \"./bower_components/polymer/lib/utils/html-tag.html\");\n\n// bc\nPolymer.Base = Polymer.LegacyElementMixin(HTMLElement).prototype;\n\n// NOTE: this is here for modulizer to export `html` for the module version of this file\nPolymer.html = Polymer.html;\n\n//# sourceURL=webpack:///./bower_components/polymer/polymer.html?");

/***/ }),

/***/ "./bower_components/shadycss/apply-shim.html":
/*!***************************************************!*\
  !*** ./bower_components/shadycss/apply-shim.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./apply-shim.min.js */ \"./bower_components/shadycss/apply-shim.min.js\");\n\n//# sourceURL=webpack:///./bower_components/shadycss/apply-shim.html?");

/***/ }),

/***/ "./bower_components/shadycss/apply-shim.min.js":
/*!*****************************************************!*\
  !*** ./bower_components/shadycss/apply-shim.min.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  /*\n  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n  Code distributed by Google as part of the polymer project is also\n  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n  */\n  'use strict';\n  var k = {};function n() {\n    this.end = this.start = 0;this.rules = this.parent = this.previous = null;this.cssText = this.parsedCssText = \"\";this.atRule = !1;this.type = 0;this.parsedSelector = this.selector = this.keyframesName = \"\";\n  }\n  function p(a) {\n    a = a.replace(aa, \"\").replace(ba, \"\");var c = q,\n        b = a,\n        d = new n();d.start = 0;d.end = b.length;for (var e = d, f = 0, h = b.length; f < h; f++) {\n      if (\"{\" === b[f]) {\n        e.rules || (e.rules = []);var g = e,\n            m = g.rules[g.rules.length - 1] || null;e = new n();e.start = f + 1;e.parent = g;e.previous = m;g.rules.push(e);\n      } else \"}\" === b[f] && (e.end = f + 1, e = e.parent || d);\n    }return c(d, a);\n  }\n  function q(a, c) {\n    var b = c.substring(a.start, a.end - 1);a.parsedCssText = a.cssText = b.trim();a.parent && (b = c.substring(a.previous ? a.previous.end : a.parent.start, a.start - 1), b = ca(b), b = b.replace(r, \" \"), b = b.substring(b.lastIndexOf(\";\") + 1), b = a.parsedSelector = a.selector = b.trim(), a.atRule = 0 === b.indexOf(\"@\"), a.atRule ? 0 === b.indexOf(\"@media\") ? a.type = t : b.match(da) && (a.type = u, a.keyframesName = a.selector.split(r).pop()) : a.type = 0 === b.indexOf(\"--\") ? v : x);if (b = a.rules) for (var d = 0, e = b.length, f; d < e && (f = b[d]); d++) {\n      q(f, c);\n    }return a;\n  }\n  function ca(a) {\n    return a.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function (a, b) {\n      a = b;for (b = 6 - a.length; b--;) {\n        a = \"0\" + a;\n      }return \"\\\\\" + a;\n    });\n  }\n  function y(a, c, b) {\n    b = void 0 === b ? \"\" : b;var d = \"\";if (a.cssText || a.rules) {\n      var e = a.rules,\n          f;if (f = e) f = e[0], f = !(f && f.selector && 0 === f.selector.indexOf(\"--\"));if (f) {\n        f = 0;for (var h = e.length, g; f < h && (g = e[f]); f++) {\n          d = y(g, c, d);\n        }\n      } else c ? c = a.cssText : (c = a.cssText, c = c.replace(ea, \"\").replace(fa, \"\"), c = c.replace(ha, \"\").replace(ia, \"\")), (d = c.trim()) && (d = \"  \" + d + \"\\n\");\n    }d && (a.selector && (b += a.selector + \" {\\n\"), b += d, a.selector && (b += \"}\\n\\n\"));return b;\n  }\n  var x = 1,\n      u = 7,\n      t = 4,\n      v = 1E3,\n      aa = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n      ba = /@import[^;]*;/gim,\n      ea = /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n      fa = /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n      ha = /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n      ia = /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n      da = /^@[^\\s]*keyframes/,\n      r = /\\s+/g;var ja = Promise.resolve();function ka(a) {\n    if (a = k[a]) a._applyShimCurrentVersion = a._applyShimCurrentVersion || 0, a._applyShimValidatingVersion = a._applyShimValidatingVersion || 0, a._applyShimNextVersion = (a._applyShimNextVersion || 0) + 1;\n  }function z(a) {\n    return a._applyShimCurrentVersion === a._applyShimNextVersion;\n  }function la(a) {\n    a._applyShimValidatingVersion = a._applyShimNextVersion;a.b || (a.b = !0, ja.then(function () {\n      a._applyShimCurrentVersion = a._applyShimNextVersion;a.b = !1;\n    }));\n  };var A = !(window.ShadyDOM && window.ShadyDOM.inUse),\n      B;function C(a) {\n    B = a && a.shimcssproperties ? !1 : A || !(navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) || !window.CSS || !CSS.supports || !CSS.supports(\"box-shadow\", \"0 0 0 var(--foo)\"));\n  }window.ShadyCSS && void 0 !== window.ShadyCSS.nativeCss ? B = window.ShadyCSS.nativeCss : window.ShadyCSS ? (C(window.ShadyCSS), window.ShadyCSS = void 0) : C(window.WebComponents && window.WebComponents.flags);var D = B;var F = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi,\n      G = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n      ma = /@media\\s(.*)/;var H = new Set();function I(a) {\n    if (!a) return \"\";\"string\" === typeof a && (a = p(a));return y(a, D);\n  }function J(a) {\n    !a.__cssRules && a.textContent && (a.__cssRules = p(a.textContent));return a.__cssRules || null;\n  }function K(a, c, b, d) {\n    if (a) {\n      var e = !1,\n          f = a.type;if (d && f === t) {\n        var h = a.selector.match(ma);h && (window.matchMedia(h[1]).matches || (e = !0));\n      }f === x ? c(a) : b && f === u ? b(a) : f === v && (e = !0);if ((a = a.rules) && !e) {\n        e = 0;f = a.length;for (var g; e < f && (g = a[e]); e++) {\n          K(g, c, b, d);\n        }\n      }\n    }\n  }\n  function L(a, c) {\n    var b = a.indexOf(\"var(\");if (-1 === b) return c(a, \"\", \"\", \"\");a: {\n      var d = 0;var e = b + 3;for (var f = a.length; e < f; e++) {\n        if (\"(\" === a[e]) d++;else if (\")\" === a[e] && 0 === --d) break a;\n      }e = -1;\n    }d = a.substring(b + 4, e);b = a.substring(0, b);a = L(a.substring(e + 1), c);e = d.indexOf(\",\");return -1 === e ? c(b, d.trim(), \"\", a) : c(b, d.substring(0, e).trim(), d.substring(e + 1).trim(), a);\n  };var na = /;\\s*/m,\n      oa = /^\\s*(initial)|(inherit)\\s*$/;function M() {\n    this.a = {};\n  }M.prototype.set = function (a, c) {\n    a = a.trim();this.a[a] = { h: c, i: {} };\n  };M.prototype.get = function (a) {\n    a = a.trim();return this.a[a] || null;\n  };var N = null;function O() {\n    this.b = this.c = null;this.a = new M();\n  }O.prototype.o = function (a) {\n    a = G.test(a) || F.test(a);G.lastIndex = 0;F.lastIndex = 0;return a;\n  };\n  O.prototype.m = function (a, c) {\n    if (void 0 === a.a) {\n      var b = [];for (var d = a.content.querySelectorAll(\"style\"), e = 0; e < d.length; e++) {\n        var f = d[e];if (f.hasAttribute(\"shady-unscoped\")) {\n          if (!A) {\n            var h = f.textContent;H.has(h) || (H.add(h), h = f.cloneNode(!0), document.head.appendChild(h));f.parentNode.removeChild(f);\n          }\n        } else b.push(f.textContent), f.parentNode.removeChild(f);\n      }(b = b.join(\"\").trim()) ? (d = document.createElement(\"style\"), d.textContent = b, a.content.insertBefore(d, a.content.firstChild), b = d) : b = null;a.a = b;\n    }return (a = a.a) ? this.j(a, c) : null;\n  };O.prototype.j = function (a, c) {\n    c = void 0 === c ? \"\" : c;var b = J(a);this.l(b, c);a.textContent = I(b);return b;\n  };O.prototype.f = function (a) {\n    var c = this,\n        b = J(a);K(b, function (a) {\n      \":root\" === a.selector && (a.selector = \"html\");c.g(a);\n    });a.textContent = I(b);return b;\n  };O.prototype.l = function (a, c) {\n    var b = this;this.c = c;K(a, function (a) {\n      b.g(a);\n    });this.c = null;\n  };O.prototype.g = function (a) {\n    a.cssText = pa(this, a.parsedCssText);\":root\" === a.selector && (a.selector = \":host > *\");\n  };\n  function pa(a, c) {\n    c = c.replace(F, function (b, c, e, f) {\n      return qa(a, b, c, e, f);\n    });return P(a, c);\n  }function P(a, c) {\n    for (var b; b = G.exec(c);) {\n      var d = b[0],\n          e = b[1];b = b.index;var f = c.slice(0, b + d.indexOf(\"@apply\"));c = c.slice(b + d.length);var h = Q(a, f);d = void 0;var g = a;e = e.replace(na, \"\");var m = [];var l = g.a.get(e);l || (g.a.set(e, {}), l = g.a.get(e));if (l) for (d in g.c && (l.i[g.c] = !0), l.h) {\n        g = h && h[d], l = [d, \": var(\", e, \"_-_\", d], g && l.push(\",\", g), l.push(\")\"), m.push(l.join(\"\"));\n      }d = m.join(\"; \");c = \"\" + f + d + c;G.lastIndex = b + d.length;\n    }return c;\n  }\n  function Q(a, c) {\n    c = c.split(\";\");for (var b, d, e = {}, f = 0, h; f < c.length; f++) {\n      if (b = c[f]) if (h = b.split(\":\"), 1 < h.length) {\n        b = h[0].trim();var g = a;d = b;h = h.slice(1).join(\":\");var m = oa.exec(h);m && (m[1] ? (g.b || (g.b = document.createElement(\"meta\"), g.b.setAttribute(\"apply-shim-measure\", \"\"), g.b.style.all = \"initial\", document.head.appendChild(g.b)), d = window.getComputedStyle(g.b).getPropertyValue(d)) : d = \"apply-shim-inherit\", h = d);d = h;e[b] = d;\n      }\n    }return e;\n  }function ra(a, c) {\n    if (N) for (var b in c.i) {\n      b !== a.c && N(b);\n    }\n  }\n  function qa(a, c, b, d, e) {\n    d && L(d, function (c, b) {\n      b && a.a.get(b) && (e = \"@apply \" + b + \";\");\n    });if (!e) return c;var f = P(a, e),\n        h = c.slice(0, c.indexOf(\"--\")),\n        g = f = Q(a, f),\n        m = a.a.get(b),\n        l = m && m.h;l ? g = Object.assign(Object.create(l), f) : a.a.set(b, g);var Y = [],\n        w,\n        Z = !1;for (w in g) {\n      var E = f[w];void 0 === E && (E = \"initial\");!l || w in l || (Z = !0);Y.push(\"\" + b + \"_-_\" + w + \": \" + E);\n    }Z && ra(a, m);m && (m.h = g);d && (h = c + \";\" + h);return \"\" + h + Y.join(\"; \") + \";\";\n  }O.prototype.detectMixin = O.prototype.o;O.prototype.transformStyle = O.prototype.j;\n  O.prototype.transformCustomStyle = O.prototype.f;O.prototype.transformRules = O.prototype.l;O.prototype.transformRule = O.prototype.g;O.prototype.transformTemplate = O.prototype.m;O.prototype._separator = \"_-_\";Object.defineProperty(O.prototype, \"invalidCallback\", { get: function get() {\n      return N;\n    }, set: function set(a) {\n      N = a;\n    } });var R = null,\n      sa = window.HTMLImports && window.HTMLImports.whenReady || null,\n      S;function ta(a) {\n    requestAnimationFrame(function () {\n      sa ? sa(a) : (R || (R = new Promise(function (a) {\n        S = a;\n      }), \"complete\" === document.readyState ? S() : document.addEventListener(\"readystatechange\", function () {\n        \"complete\" === document.readyState && S();\n      })), R.then(function () {\n        a && a();\n      }));\n    });\n  };var T = new O();function U() {\n    var a = this;this.a = null;ta(function () {\n      V(a);\n    });T.invalidCallback = ka;\n  }function V(a) {\n    a.a || (a.a = window.ShadyCSS.CustomStyleInterface, a.a && (a.a.transformCallback = function (a) {\n      T.f(a);\n    }, a.a.validateCallback = function () {\n      requestAnimationFrame(function () {\n        a.a.enqueued && W(a);\n      });\n    }));\n  }U.prototype.prepareTemplate = function (a, c) {\n    V(this);k[c] = a;c = T.m(a, c);a._styleAst = c;\n  };\n  function W(a) {\n    V(a);if (a.a) {\n      var c = a.a.processStyles();if (a.a.enqueued) {\n        for (var b = 0; b < c.length; b++) {\n          var d = a.a.getStyleForCustomStyle(c[b]);d && T.f(d);\n        }a.a.enqueued = !1;\n      }\n    }\n  }U.prototype.styleSubtree = function (a, c) {\n    V(this);if (c) for (var b in c) {\n      null === b ? a.style.removeProperty(b) : a.style.setProperty(b, c[b]);\n    }if (a.shadowRoot) for (this.styleElement(a), a = a.shadowRoot.children || a.shadowRoot.childNodes, c = 0; c < a.length; c++) {\n      this.styleSubtree(a[c]);\n    } else for (a = a.children || a.childNodes, c = 0; c < a.length; c++) {\n      this.styleSubtree(a[c]);\n    }\n  };\n  U.prototype.styleElement = function (a) {\n    V(this);var c = a.localName,\n        b;c ? -1 < c.indexOf(\"-\") ? b = c : b = a.getAttribute && a.getAttribute(\"is\") || \"\" : b = a.is;if ((c = k[b]) && !z(c)) {\n      if (z(c) || c._applyShimValidatingVersion !== c._applyShimNextVersion) this.prepareTemplate(c, b), la(c);if (a = a.shadowRoot) if (a = a.querySelector(\"style\")) a.__cssRules = c._styleAst, a.textContent = I(c._styleAst);\n    }\n  };U.prototype.styleDocument = function (a) {\n    V(this);this.styleSubtree(document.body, a);\n  };\n  if (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {\n    var X = new U(),\n        ua = window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;window.ShadyCSS = { prepareTemplate: function prepareTemplate(a, c) {\n        W(X);X.prepareTemplate(a, c);\n      }, styleSubtree: function styleSubtree(a, c) {\n        W(X);X.styleSubtree(a, c);\n      }, styleElement: function styleElement(a) {\n        W(X);X.styleElement(a);\n      }, styleDocument: function styleDocument(a) {\n        W(X);X.styleDocument(a);\n      }, getComputedStyleValue: function getComputedStyleValue(a, c) {\n        return (a = window.getComputedStyle(a).getPropertyValue(c)) ? a.trim() : \"\";\n      }, nativeCss: D, nativeShadow: A };ua && (window.ShadyCSS.CustomStyleInterface = ua);\n  }window.ShadyCSS.ApplyShim = T;\n}).call(undefined);\n\n//# sourceMappingURL=apply-shim.min.js.map\n\n//# sourceURL=webpack:///./bower_components/shadycss/apply-shim.min.js?");

/***/ }),

/***/ "./bower_components/shadycss/custom-style-interface.html":
/*!***************************************************************!*\
  !*** ./bower_components/shadycss/custom-style-interface.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./custom-style-interface.min.js */ \"./bower_components/shadycss/custom-style-interface.min.js\");\n\n//# sourceURL=webpack:///./bower_components/shadycss/custom-style-interface.html?");

/***/ }),

/***/ "./bower_components/shadycss/custom-style-interface.min.js":
/*!*****************************************************************!*\
  !*** ./bower_components/shadycss/custom-style-interface.min.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function () {\n  /*\n  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n  Code distributed by Google as part of the polymer project is also\n  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n  */\n  'use strict';\n  var c = !(window.ShadyDOM && window.ShadyDOM.inUse),\n      f;function g(a) {\n    f = a && a.shimcssproperties ? !1 : c || !(navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) || !window.CSS || !CSS.supports || !CSS.supports(\"box-shadow\", \"0 0 0 var(--foo)\"));\n  }window.ShadyCSS && void 0 !== window.ShadyCSS.nativeCss ? f = window.ShadyCSS.nativeCss : window.ShadyCSS ? (g(window.ShadyCSS), window.ShadyCSS = void 0) : g(window.WebComponents && window.WebComponents.flags);var h = f;function k(a, b) {\n    for (var d in b) {\n      null === d ? a.style.removeProperty(d) : a.style.setProperty(d, b[d]);\n    }\n  };var l = null,\n      m = window.HTMLImports && window.HTMLImports.whenReady || null,\n      n;function p() {\n    var a = q;requestAnimationFrame(function () {\n      m ? m(a) : (l || (l = new Promise(function (a) {\n        n = a;\n      }), \"complete\" === document.readyState ? n() : document.addEventListener(\"readystatechange\", function () {\n        \"complete\" === document.readyState && n();\n      })), l.then(function () {\n        a && a();\n      }));\n    });\n  };var r = null,\n      q = null;function t() {\n    this.customStyles = [];this.enqueued = !1;\n  }function u(a) {\n    !a.enqueued && q && (a.enqueued = !0, p());\n  }t.prototype.c = function (a) {\n    a.__seenByShadyCSS || (a.__seenByShadyCSS = !0, this.customStyles.push(a), u(this));\n  };t.prototype.b = function (a) {\n    if (a.__shadyCSSCachedStyle) return a.__shadyCSSCachedStyle;var b;a.getStyle ? b = a.getStyle() : b = a;return b;\n  };\n  t.prototype.a = function () {\n    for (var a = this.customStyles, b = 0; b < a.length; b++) {\n      var d = a[b];if (!d.__shadyCSSCachedStyle) {\n        var e = this.b(d);e && (e = e.__appliedElement || e, r && r(e), d.__shadyCSSCachedStyle = e);\n      }\n    }return a;\n  };t.prototype.addCustomStyle = t.prototype.c;t.prototype.getStyleForCustomStyle = t.prototype.b;t.prototype.processStyles = t.prototype.a;\n  Object.defineProperties(t.prototype, { transformCallback: { get: function get() {\n        return r;\n      }, set: function set(a) {\n        r = a;\n      } }, validateCallback: { get: function get() {\n        return q;\n      }, set: function set(a) {\n        var b = !1;q || (b = !0);q = a;b && u(this);\n      } } });var v = new t();window.ShadyCSS || (window.ShadyCSS = { prepareTemplate: function prepareTemplate() {}, styleSubtree: function styleSubtree(a, b) {\n      v.a();k(a, b);\n    }, styleElement: function styleElement() {\n      v.a();\n    }, styleDocument: function styleDocument(a) {\n      v.a();k(document.body, a);\n    }, getComputedStyleValue: function getComputedStyleValue(a, b) {\n      return (a = window.getComputedStyle(a).getPropertyValue(b)) ? a.trim() : \"\";\n    }, nativeCss: h, nativeShadow: c });window.ShadyCSS.CustomStyleInterface = v;\n}).call(undefined);\n\n//# sourceMappingURL=custom-style-interface.min.js.map\n\n//# sourceURL=webpack:///./bower_components/shadycss/custom-style-interface.min.js?");

/***/ }),

/***/ "./node_modules/polymer-webpack-loader/register-html-template.js":
/*!***********************************************************************!*\
  !*** ./node_modules/polymer-webpack-loader/register-html-template.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-env browser */\n\nvar RegisterHtmlTemplate = function () {\n  function RegisterHtmlTemplate() {\n    _classCallCheck(this, RegisterHtmlTemplate);\n  }\n\n  _createClass(RegisterHtmlTemplate, null, [{\n    key: 'register',\n\n    /**\n     * Create a `<template>` element to hold `<dom-module>` content.\n     * This bit of code will execute in the context of the main document,\n     * calling `importNode` on the `<template>`, which in turn triggers\n     * the lifecycle of the `<dom-module>` and allows it to insert its\n     * content into Polymer's global module map. When a Polymer element\n     * boots up it will fetch its template from this module map.\n     * https://github.com/Polymer/polymer/blob/master/lib/mixins/element-mixin.html#L501-L538\n     * @param {string} val A `<dom-module>` as an HTML string\n     */\n    value: function register(val) {\n      var content = void 0;\n      var template = document.createElement('template');\n      template.innerHTML = val;\n      if (template.content) {\n        content = template.content; // eslint-disable-line prefer-destructuring\n      } else {\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n      document.importNode(content, true);\n    }\n    /**\n     * Content that will be injected into the main document. This is primarily\n     * for things like `<iron-iconset>` and `<custom-style>` which do not have\n     * templates but rely on HTML Imports ability to apply content to the main\n     * document.\n     * @param {string} val An HTML string\n     */\n\n  }, {\n    key: 'toBody',\n    value: function toBody(val) {\n      var trimmedVal = val.trim();\n      if (trimmedVal) {\n        var div = document.createElement('div');\n        div.innerHTML = trimmedVal;\n        if (div.firstChild) {\n          if (document.body) {\n            document.body.insertBefore(div.firstChild, document.body.firstChild);\n          } else {\n            document.addEventListener('DOMContentLoaded', function () {\n              document.body.insertBefore(div.firstChild, document.body.firstChild);\n            });\n          }\n        }\n      }\n    }\n  }]);\n\n  return RegisterHtmlTemplate;\n}();\n\nmodule.exports = RegisterHtmlTemplate;\n\n//# sourceURL=webpack:///./node_modules/polymer-webpack-loader/register-html-template.js?");

/***/ }),

/***/ "./node_modules/redux-logger/dist/redux-logger.js":
/*!********************************************************!*\
  !*** ./node_modules/redux-logger/dist/redux-logger.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (e, t) {\n  \"object\" == ( false ? undefined : _typeof(exports)) && \"undefined\" != typeof module ? t(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(undefined, function (e) {\n  \"use strict\";\n  function t(e, t) {\n    e.super_ = t, e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } });\n  }function r(e, t) {\n    Object.defineProperty(this, \"kind\", { value: e, enumerable: !0 }), t && t.length && Object.defineProperty(this, \"path\", { value: t, enumerable: !0 });\n  }function n(e, t, r) {\n    n.super_.call(this, \"E\", e), Object.defineProperty(this, \"lhs\", { value: t, enumerable: !0 }), Object.defineProperty(this, \"rhs\", { value: r, enumerable: !0 });\n  }function o(e, t) {\n    o.super_.call(this, \"N\", e), Object.defineProperty(this, \"rhs\", { value: t, enumerable: !0 });\n  }function i(e, t) {\n    i.super_.call(this, \"D\", e), Object.defineProperty(this, \"lhs\", { value: t, enumerable: !0 });\n  }function a(e, t, r) {\n    a.super_.call(this, \"A\", e), Object.defineProperty(this, \"index\", { value: t, enumerable: !0 }), Object.defineProperty(this, \"item\", { value: r, enumerable: !0 });\n  }function f(e, t, r) {\n    var n = e.slice((r || t) + 1 || e.length);return e.length = t < 0 ? e.length + t : t, e.push.apply(e, n), e;\n  }function u(e) {\n    var t = \"undefined\" == typeof e ? \"undefined\" : N(e);return \"object\" !== t ? t : e === Math ? \"math\" : null === e ? \"null\" : Array.isArray(e) ? \"array\" : \"[object Date]\" === Object.prototype.toString.call(e) ? \"date\" : \"function\" == typeof e.toString && /^\\/.*\\//.test(e.toString()) ? \"regexp\" : \"object\";\n  }function l(e, t, r, c, s, d, p) {\n    s = s || [], p = p || [];var g = s.slice(0);if (\"undefined\" != typeof d) {\n      if (c) {\n        if (\"function\" == typeof c && c(g, d)) return;if (\"object\" === (\"undefined\" == typeof c ? \"undefined\" : N(c))) {\n          if (c.prefilter && c.prefilter(g, d)) return;if (c.normalize) {\n            var h = c.normalize(g, d, e, t);h && (e = h[0], t = h[1]);\n          }\n        }\n      }g.push(d);\n    }\"regexp\" === u(e) && \"regexp\" === u(t) && (e = e.toString(), t = t.toString());var y = \"undefined\" == typeof e ? \"undefined\" : N(e),\n        v = \"undefined\" == typeof t ? \"undefined\" : N(t),\n        b = \"undefined\" !== y || p && p[p.length - 1].lhs && p[p.length - 1].lhs.hasOwnProperty(d),\n        m = \"undefined\" !== v || p && p[p.length - 1].rhs && p[p.length - 1].rhs.hasOwnProperty(d);if (!b && m) r(new o(g, t));else if (!m && b) r(new i(g, e));else if (u(e) !== u(t)) r(new n(g, e, t));else if (\"date\" === u(e) && e - t !== 0) r(new n(g, e, t));else if (\"object\" === y && null !== e && null !== t) {\n      if (p.filter(function (t) {\n        return t.lhs === e;\n      }).length) e !== t && r(new n(g, e, t));else {\n        if (p.push({ lhs: e, rhs: t }), Array.isArray(e)) {\n          var w;e.length;for (w = 0; w < e.length; w++) {\n            w >= t.length ? r(new a(g, w, new i(void 0, e[w]))) : l(e[w], t[w], r, c, g, w, p);\n          }for (; w < t.length;) {\n            r(new a(g, w, new o(void 0, t[w++])));\n          }\n        } else {\n          var x = Object.keys(e),\n              S = Object.keys(t);x.forEach(function (n, o) {\n            var i = S.indexOf(n);i >= 0 ? (l(e[n], t[n], r, c, g, n, p), S = f(S, i)) : l(e[n], void 0, r, c, g, n, p);\n          }), S.forEach(function (e) {\n            l(void 0, t[e], r, c, g, e, p);\n          });\n        }p.length = p.length - 1;\n      }\n    } else e !== t && (\"number\" === y && isNaN(e) && isNaN(t) || r(new n(g, e, t)));\n  }function c(e, t, r, n) {\n    return n = n || [], l(e, t, function (e) {\n      e && n.push(e);\n    }, r), n.length ? n : void 0;\n  }function s(e, t, r) {\n    if (r.path && r.path.length) {\n      var n,\n          o = e[t],\n          i = r.path.length - 1;for (n = 0; n < i; n++) {\n        o = o[r.path[n]];\n      }switch (r.kind) {case \"A\":\n          s(o[r.path[n]], r.index, r.item);break;case \"D\":\n          delete o[r.path[n]];break;case \"E\":case \"N\":\n          o[r.path[n]] = r.rhs;}\n    } else switch (r.kind) {case \"A\":\n        s(e[t], r.index, r.item);break;case \"D\":\n        e = f(e, t);break;case \"E\":case \"N\":\n        e[t] = r.rhs;}return e;\n  }function d(e, t, r) {\n    if (e && t && r && r.kind) {\n      for (var n = e, o = -1, i = r.path ? r.path.length - 1 : 0; ++o < i;) {\n        \"undefined\" == typeof n[r.path[o]] && (n[r.path[o]] = \"number\" == typeof r.path[o] ? [] : {}), n = n[r.path[o]];\n      }switch (r.kind) {case \"A\":\n          s(r.path ? n[r.path[o]] : n, r.index, r.item);break;case \"D\":\n          delete n[r.path[o]];break;case \"E\":case \"N\":\n          n[r.path[o]] = r.rhs;}\n    }\n  }function p(e, t, r) {\n    if (r.path && r.path.length) {\n      var n,\n          o = e[t],\n          i = r.path.length - 1;for (n = 0; n < i; n++) {\n        o = o[r.path[n]];\n      }switch (r.kind) {case \"A\":\n          p(o[r.path[n]], r.index, r.item);break;case \"D\":\n          o[r.path[n]] = r.lhs;break;case \"E\":\n          o[r.path[n]] = r.lhs;break;case \"N\":\n          delete o[r.path[n]];}\n    } else switch (r.kind) {case \"A\":\n        p(e[t], r.index, r.item);break;case \"D\":\n        e[t] = r.lhs;break;case \"E\":\n        e[t] = r.lhs;break;case \"N\":\n        e = f(e, t);}return e;\n  }function g(e, t, r) {\n    if (e && t && r && r.kind) {\n      var n,\n          o,\n          i = e;for (o = r.path.length - 1, n = 0; n < o; n++) {\n        \"undefined\" == typeof i[r.path[n]] && (i[r.path[n]] = {}), i = i[r.path[n]];\n      }switch (r.kind) {case \"A\":\n          p(i[r.path[n]], r.index, r.item);break;case \"D\":\n          i[r.path[n]] = r.lhs;break;case \"E\":\n          i[r.path[n]] = r.lhs;break;case \"N\":\n          delete i[r.path[n]];}\n    }\n  }function h(e, t, r) {\n    if (e && t) {\n      var n = function n(_n) {\n        r && !r(e, t, _n) || d(e, t, _n);\n      };l(e, t, n);\n    }\n  }function y(e) {\n    return \"color: \" + F[e].color + \"; font-weight: bold\";\n  }function v(e) {\n    var t = e.kind,\n        r = e.path,\n        n = e.lhs,\n        o = e.rhs,\n        i = e.index,\n        a = e.item;switch (t) {case \"E\":\n        return [r.join(\".\"), n, \"→\", o];case \"N\":\n        return [r.join(\".\"), o];case \"D\":\n        return [r.join(\".\")];case \"A\":\n        return [r.join(\".\") + \"[\" + i + \"]\", a];default:\n        return [];}\n  }function b(e, t, r, n) {\n    var o = c(e, t);try {\n      n ? r.groupCollapsed(\"diff\") : r.group(\"diff\");\n    } catch (e) {\n      r.log(\"diff\");\n    }o ? o.forEach(function (e) {\n      var t = e.kind,\n          n = v(e);r.log.apply(r, [\"%c \" + F[t].text, y(t)].concat(P(n)));\n    }) : r.log(\"—— no diff ——\");try {\n      r.groupEnd();\n    } catch (e) {\n      r.log(\"—— diff end —— \");\n    }\n  }function m(e, t, r, n) {\n    switch (\"undefined\" == typeof e ? \"undefined\" : N(e)) {case \"object\":\n        return \"function\" == typeof e[n] ? e[n].apply(e, P(r)) : e[n];case \"function\":\n        return e(t);default:\n        return e;}\n  }function w(e) {\n    var t = e.timestamp,\n        r = e.duration;return function (e, n, o) {\n      var i = [\"action\"];return i.push(\"%c\" + String(e.type)), t && i.push(\"%c@ \" + n), r && i.push(\"%c(in \" + o.toFixed(2) + \" ms)\"), i.join(\" \");\n    };\n  }function x(e, t) {\n    var r = t.logger,\n        n = t.actionTransformer,\n        o = t.titleFormatter,\n        i = void 0 === o ? w(t) : o,\n        a = t.collapsed,\n        f = t.colors,\n        u = t.level,\n        l = t.diff,\n        c = \"undefined\" == typeof t.titleFormatter;e.forEach(function (o, s) {\n      var d = o.started,\n          p = o.startedTime,\n          g = o.action,\n          h = o.prevState,\n          y = o.error,\n          v = o.took,\n          w = o.nextState,\n          x = e[s + 1];x && (w = x.prevState, v = x.started - d);var S = n(g),\n          k = \"function\" == typeof a ? a(function () {\n        return w;\n      }, g, o) : a,\n          j = D(p),\n          E = f.title ? \"color: \" + f.title(S) + \";\" : \"\",\n          A = [\"color: gray; font-weight: lighter;\"];A.push(E), t.timestamp && A.push(\"color: gray; font-weight: lighter;\"), t.duration && A.push(\"color: gray; font-weight: lighter;\");var O = i(S, j, v);try {\n        k ? f.title && c ? r.groupCollapsed.apply(r, [\"%c \" + O].concat(A)) : r.groupCollapsed(O) : f.title && c ? r.group.apply(r, [\"%c \" + O].concat(A)) : r.group(O);\n      } catch (e) {\n        r.log(O);\n      }var N = m(u, S, [h], \"prevState\"),\n          P = m(u, S, [S], \"action\"),\n          C = m(u, S, [y, h], \"error\"),\n          F = m(u, S, [w], \"nextState\");if (N) if (f.prevState) {\n        var L = \"color: \" + f.prevState(h) + \"; font-weight: bold\";r[N](\"%c prev state\", L, h);\n      } else r[N](\"prev state\", h);if (P) if (f.action) {\n        var T = \"color: \" + f.action(S) + \"; font-weight: bold\";r[P](\"%c action    \", T, S);\n      } else r[P](\"action    \", S);if (y && C) if (f.error) {\n        var M = \"color: \" + f.error(y, h) + \"; font-weight: bold;\";r[C](\"%c error     \", M, y);\n      } else r[C](\"error     \", y);if (F) if (f.nextState) {\n        var _ = \"color: \" + f.nextState(w) + \"; font-weight: bold\";r[F](\"%c next state\", _, w);\n      } else r[F](\"next state\", w);l && b(h, w, r, k);try {\n        r.groupEnd();\n      } catch (e) {\n        r.log(\"—— log end ——\");\n      }\n    });\n  }function S() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        t = Object.assign({}, L, e),\n        r = t.logger,\n        n = t.stateTransformer,\n        o = t.errorTransformer,\n        i = t.predicate,\n        a = t.logErrors,\n        f = t.diffPredicate;if (\"undefined\" == typeof r) return function () {\n      return function (e) {\n        return function (t) {\n          return e(t);\n        };\n      };\n    };if (e.getState && e.dispatch) return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"), function () {\n      return function (e) {\n        return function (t) {\n          return e(t);\n        };\n      };\n    };var u = [];return function (e) {\n      var r = e.getState;return function (e) {\n        return function (l) {\n          if (\"function\" == typeof i && !i(r, l)) return e(l);var c = {};u.push(c), c.started = O.now(), c.startedTime = new Date(), c.prevState = n(r()), c.action = l;var s = void 0;if (a) try {\n            s = e(l);\n          } catch (e) {\n            c.error = o(e);\n          } else s = e(l);c.took = O.now() - c.started, c.nextState = n(r());var d = t.diff && \"function\" == typeof f ? f(r, l) : t.diff;if (x(u, Object.assign({}, t, { diff: d })), u.length = 0, c.error) throw c.error;return s;\n        };\n      };\n    };\n  }var k,\n      j,\n      E = function E(e, t) {\n    return new Array(t + 1).join(e);\n  },\n      A = function A(e, t) {\n    return E(\"0\", t - e.toString().length) + e;\n  },\n      D = function D(e) {\n    return A(e.getHours(), 2) + \":\" + A(e.getMinutes(), 2) + \":\" + A(e.getSeconds(), 2) + \".\" + A(e.getMilliseconds(), 3);\n  },\n      O = \"undefined\" != typeof performance && null !== performance && \"function\" == typeof performance.now ? performance : Date,\n      N = \"function\" == typeof Symbol && \"symbol\" == _typeof(Symbol.iterator) ? function (e) {\n    return typeof e === \"undefined\" ? \"undefined\" : _typeof(e);\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e === \"undefined\" ? \"undefined\" : _typeof(e);\n  },\n      P = function P(e) {\n    if (Array.isArray(e)) {\n      for (var t = 0, r = Array(e.length); t < e.length; t++) {\n        r[t] = e[t];\n      }return r;\n    }return Array.from(e);\n  },\n      C = [];k = \"object\" === (\"undefined\" == typeof global ? \"undefined\" : N(global)) && global ? global : \"undefined\" != typeof window ? window : {}, j = k.DeepDiff, j && C.push(function () {\n    \"undefined\" != typeof j && k.DeepDiff === c && (k.DeepDiff = j, j = void 0);\n  }), t(n, r), t(o, r), t(i, r), t(a, r), Object.defineProperties(c, { diff: { value: c, enumerable: !0 }, observableDiff: { value: l, enumerable: !0 }, applyDiff: { value: h, enumerable: !0 }, applyChange: { value: d, enumerable: !0 }, revertChange: { value: g, enumerable: !0 }, isConflict: { value: function value() {\n        return \"undefined\" != typeof j;\n      }, enumerable: !0 }, noConflict: { value: function value() {\n        return C && (C.forEach(function (e) {\n          e();\n        }), C = null), c;\n      }, enumerable: !0 } });var F = { E: { color: \"#2196F3\", text: \"CHANGED:\" }, N: { color: \"#4CAF50\", text: \"ADDED:\" }, D: { color: \"#F44336\", text: \"DELETED:\" }, A: { color: \"#2196F3\", text: \"ARRAY:\" } },\n      L = { level: \"log\", logger: console, logErrors: !0, collapsed: void 0, predicate: void 0, duration: !1, timestamp: !0, stateTransformer: function stateTransformer(e) {\n      return e;\n    }, actionTransformer: function actionTransformer(e) {\n      return e;\n    }, errorTransformer: function errorTransformer(e) {\n      return e;\n    }, colors: { title: function title() {\n        return \"inherit\";\n      }, prevState: function prevState() {\n        return \"#9E9E9E\";\n      }, action: function action() {\n        return \"#03A9F4\";\n      }, nextState: function nextState() {\n        return \"#4CAF50\";\n      }, error: function error() {\n        return \"#F20404\";\n      } }, diff: !1, diffPredicate: void 0, transformer: void 0 },\n      T = function T() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        t = e.dispatch,\n        r = e.getState;return \"function\" == typeof t || \"function\" == typeof r ? S()({ dispatch: t, getState: r }) : void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\");\n  };e.defaults = L, e.createLogger = S, e.logger = T, e.default = T, Object.defineProperty(e, \"__esModule\", { value: !0 });\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/redux-logger/dist/redux-logger.js?");

/***/ }),

/***/ "./node_modules/redux/dist/redux.js":
/*!******************************************!*\
  !*** ./node_modules/redux/dist/redux.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})(undefined, function (exports) {\n  'use strict';\n\n  /** Detect free variable `global` from Node.js. */\n\n  var freeGlobal = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Built-in value references. */\n  var _Symbol = root.Symbol;\n\n  /** Used for built-in method references. */\n  var objectProto$1 = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty$1 = objectProto$1.hasOwnProperty;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto$1.toString;\n\n  /** Built-in value references. */\n  var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n  function getRawTag(value) {\n    var isOwn = hasOwnProperty$1.call(value, symToStringTag$1),\n        tag = value[symToStringTag$1];\n\n    try {\n      value[symToStringTag$1] = undefined;\n      var unmasked = true;\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n      if (isOwn) {\n        value[symToStringTag$1] = tag;\n      } else {\n        delete value[symToStringTag$1];\n      }\n    }\n    return result;\n  }\n\n  /** Used for built-in method references. */\n  var objectProto$2 = Object.prototype;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString$1 = objectProto$2.toString;\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString$1.call(value);\n  }\n\n  /** `Object#toString` result references. */\n  var nullTag = '[object Null]';\n  var undefinedTag = '[object Undefined]';\n\n  /** Built-in value references. */\n  var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function (arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /** Built-in value references. */\n  var getPrototype = overArg(Object.getPrototypeOf, Object);\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';\n  }\n\n  /** `Object#toString` result references. */\n  var objectTag = '[object Object]';\n\n  /** Used for built-in method references. */\n  var funcProto = Function.prototype;\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the decompiled source of functions. */\n  var funcToString = funcProto.toString;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to infer the `Object` constructor. */\n  var objectCtorString = funcToString.call(Object);\n\n  /**\n   * Checks if `value` is a plain object, that is, an object created by the\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.8.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * _.isPlainObject(new Foo);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   *\n   * _.isPlainObject(Object.create(null));\n   * // => true\n   */\n  function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n      return false;\n    }\n    var proto = getPrototype(value);\n    if (proto === null) {\n      return true;\n    }\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n  }\n\n  function symbolObservablePonyfill(root) {\n    var result;\n    var _Symbol2 = root.Symbol;\n\n    if (typeof _Symbol2 === 'function') {\n      if (_Symbol2.observable) {\n        result = _Symbol2.observable;\n      } else {\n        result = _Symbol2('observable');\n        _Symbol2.observable = result;\n      }\n    } else {\n      result = '@@observable';\n    }\n\n    return result;\n  }\n\n  /* global window */\n  var root$2;\n\n  if (typeof self !== 'undefined') {\n    root$2 = self;\n  } else if (typeof window !== 'undefined') {\n    root$2 = window;\n  } else if (typeof global !== 'undefined') {\n    root$2 = global;\n  } else if (true) {\n    root$2 = module;\n  } else {}\n\n  var result = symbolObservablePonyfill(root$2);\n\n  /**\n   * These are private action types reserved by Redux.\n   * For any unknown actions, you must return the current state.\n   * If the current state is undefined, you must return the initial state.\n   * Do not reference these action types directly in your code.\n   */\n  var ActionTypes = {\n    INIT: '@@redux/INIT'\n\n    /**\n     * Creates a Redux store that holds the state tree.\n     * The only way to change the data in the store is to call `dispatch()` on it.\n     *\n     * There should only be a single store in your app. To specify how different\n     * parts of the state tree respond to actions, you may combine several reducers\n     * into a single reducer function by using `combineReducers`.\n     *\n     * @param {Function} reducer A function that returns the next state tree, given\n     * the current state tree and the action to handle.\n     *\n     * @param {any} [preloadedState] The initial state. You may optionally specify it\n     * to hydrate the state from the server in universal apps, or to restore a\n     * previously serialized user session.\n     * If you use `combineReducers` to produce the root reducer function, this must be\n     * an object with the same shape as `combineReducers` keys.\n     *\n     * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n     * to enhance the store with third-party capabilities such as middleware,\n     * time travel, persistence, etc. The only store enhancer that ships with Redux\n     * is `applyMiddleware()`.\n     *\n     * @returns {Store} A Redux store that lets you read the state, dispatch actions\n     * and subscribe to changes.\n     */\n  };function createStore(reducer, preloadedState, enhancer) {\n    var _ref2;\n\n    if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n      enhancer = preloadedState;\n      preloadedState = undefined;\n    }\n\n    if (typeof enhancer !== 'undefined') {\n      if (typeof enhancer !== 'function') {\n        throw new Error('Expected the enhancer to be a function.');\n      }\n\n      return enhancer(createStore)(reducer, preloadedState);\n    }\n\n    if (typeof reducer !== 'function') {\n      throw new Error('Expected the reducer to be a function.');\n    }\n\n    var currentReducer = reducer;\n    var currentState = preloadedState;\n    var currentListeners = [];\n    var nextListeners = currentListeners;\n    var isDispatching = false;\n\n    function ensureCanMutateNextListeners() {\n      if (nextListeners === currentListeners) {\n        nextListeners = currentListeners.slice();\n      }\n    }\n\n    /**\n     * Reads the state tree managed by the store.\n     *\n     * @returns {any} The current state tree of your application.\n     */\n    function getState() {\n      return currentState;\n    }\n\n    /**\n     * Adds a change listener. It will be called any time an action is dispatched,\n     * and some part of the state tree may potentially have changed. You may then\n     * call `getState()` to read the current state tree inside the callback.\n     *\n     * You may call `dispatch()` from a change listener, with the following\n     * caveats:\n     *\n     * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n     * If you subscribe or unsubscribe while the listeners are being invoked, this\n     * will not have any effect on the `dispatch()` that is currently in progress.\n     * However, the next `dispatch()` call, whether nested or not, will use a more\n     * recent snapshot of the subscription list.\n     *\n     * 2. The listener should not expect to see all state changes, as the state\n     * might have been updated multiple times during a nested `dispatch()` before\n     * the listener is called. It is, however, guaranteed that all subscribers\n     * registered before the `dispatch()` started will be called with the latest\n     * state by the time it exits.\n     *\n     * @param {Function} listener A callback to be invoked on every dispatch.\n     * @returns {Function} A function to remove this change listener.\n     */\n    function subscribe(listener) {\n      if (typeof listener !== 'function') {\n        throw new Error('Expected listener to be a function.');\n      }\n\n      var isSubscribed = true;\n\n      ensureCanMutateNextListeners();\n      nextListeners.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed) {\n          return;\n        }\n\n        isSubscribed = false;\n\n        ensureCanMutateNextListeners();\n        var index = nextListeners.indexOf(listener);\n        nextListeners.splice(index, 1);\n      };\n    }\n\n    /**\n     * Dispatches an action. It is the only way to trigger a state change.\n     *\n     * The `reducer` function, used to create the store, will be called with the\n     * current state tree and the given `action`. Its return value will\n     * be considered the **next** state of the tree, and the change listeners\n     * will be notified.\n     *\n     * The base implementation only supports plain object actions. If you want to\n     * dispatch a Promise, an Observable, a thunk, or something else, you need to\n     * wrap your store creating function into the corresponding middleware. For\n     * example, see the documentation for the `redux-thunk` package. Even the\n     * middleware will eventually dispatch plain object actions using this method.\n     *\n     * @param {Object} action A plain object representing “what changed”. It is\n     * a good idea to keep actions serializable so you can record and replay user\n     * sessions, or use the time travelling `redux-devtools`. An action must have\n     * a `type` property which may not be `undefined`. It is a good idea to use\n     * string constants for action types.\n     *\n     * @returns {Object} For convenience, the same action object you dispatched.\n     *\n     * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n     * return something else (for example, a Promise you can await).\n     */\n    function dispatch(action) {\n      if (!isPlainObject(action)) {\n        throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n      }\n\n      if (typeof action.type === 'undefined') {\n        throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n      }\n\n      if (isDispatching) {\n        throw new Error('Reducers may not dispatch actions.');\n      }\n\n      try {\n        isDispatching = true;\n        currentState = currentReducer(currentState, action);\n      } finally {\n        isDispatching = false;\n      }\n\n      var listeners = currentListeners = nextListeners;\n      for (var i = 0; i < listeners.length; i++) {\n        var listener = listeners[i];\n        listener();\n      }\n\n      return action;\n    }\n\n    /**\n     * Replaces the reducer currently used by the store to calculate the state.\n     *\n     * You might need this if your app implements code splitting and you want to\n     * load some of the reducers dynamically. You might also need this if you\n     * implement a hot reloading mechanism for Redux.\n     *\n     * @param {Function} nextReducer The reducer for the store to use instead.\n     * @returns {void}\n     */\n    function replaceReducer(nextReducer) {\n      if (typeof nextReducer !== 'function') {\n        throw new Error('Expected the nextReducer to be a function.');\n      }\n\n      currentReducer = nextReducer;\n      dispatch({ type: ActionTypes.INIT });\n    }\n\n    /**\n     * Interoperability point for observable/reactive libraries.\n     * @returns {observable} A minimal observable of state changes.\n     * For more information, see the observable proposal:\n     * https://github.com/tc39/proposal-observable\n     */\n    function observable() {\n      var _ref;\n\n      var outerSubscribe = subscribe;\n      return _ref = {\n        /**\n         * The minimal observable subscription method.\n         * @param {Object} observer Any object that can be used as an observer.\n         * The observer object should have a `next` method.\n         * @returns {subscription} An object with an `unsubscribe` method that can\n         * be used to unsubscribe the observable from the store, and prevent further\n         * emission of values from the observable.\n         */\n        subscribe: function subscribe(observer) {\n          if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {\n            throw new TypeError('Expected the observer to be an object.');\n          }\n\n          function observeState() {\n            if (observer.next) {\n              observer.next(getState());\n            }\n          }\n\n          observeState();\n          var unsubscribe = outerSubscribe(observeState);\n          return { unsubscribe: unsubscribe };\n        }\n      }, _ref[result] = function () {\n        return this;\n      }, _ref;\n    }\n\n    // When a store is created, an \"INIT\" action is dispatched so that every\n    // reducer returns their initial state. This effectively populates\n    // the initial state tree.\n    dispatch({ type: ActionTypes.INIT });\n\n    return _ref2 = {\n      dispatch: dispatch,\n      subscribe: subscribe,\n      getState: getState,\n      replaceReducer: replaceReducer\n    }, _ref2[result] = observable, _ref2;\n  }\n\n  /**\n   * Prints a warning in the console if it exists.\n   *\n   * @param {String} message The warning message.\n   * @returns {void}\n   */\n  function warning(message) {\n    /* eslint-disable no-console */\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message);\n    }\n    /* eslint-enable no-console */\n    try {\n      // This error was thrown as a convenience so that if you enable\n      // \"break on all exceptions\" in your console,\n      // it would pause the execution at this line.\n      throw new Error(message);\n      /* eslint-disable no-empty */\n    } catch (e) {}\n    /* eslint-enable no-empty */\n  }\n\n  function getUndefinedStateErrorMessage(key, action) {\n    var actionType = action && action.type;\n    var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n    return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n  }\n\n  function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n    var reducerKeys = Object.keys(reducers);\n    var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n    if (reducerKeys.length === 0) {\n      return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n    }\n\n    if (!isPlainObject(inputState)) {\n      return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n    }\n\n    var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n      return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n    });\n\n    unexpectedKeys.forEach(function (key) {\n      unexpectedKeyCache[key] = true;\n    });\n\n    if (unexpectedKeys.length > 0) {\n      return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n    }\n  }\n\n  function assertReducerShape(reducers) {\n    Object.keys(reducers).forEach(function (key) {\n      var reducer = reducers[key];\n      var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n      if (typeof initialState === 'undefined') {\n        throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n      }\n\n      var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n      if (typeof reducer(undefined, { type: type }) === 'undefined') {\n        throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n      }\n    });\n  }\n\n  /**\n   * Turns an object whose values are different reducer functions, into a single\n   * reducer function. It will call every child reducer, and gather their results\n   * into a single state object, whose keys correspond to the keys of the passed\n   * reducer functions.\n   *\n   * @param {Object} reducers An object whose values correspond to different\n   * reducer functions that need to be combined into one. One handy way to obtain\n   * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n   * undefined for any action. Instead, they should return their initial state\n   * if the state passed to them was undefined, and the current state for any\n   * unrecognized action.\n   *\n   * @returns {Function} A reducer function that invokes every reducer inside the\n   * passed object, and builds a state object with the same shape.\n   */\n  function combineReducers(reducers) {\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for (var i = 0; i < reducerKeys.length; i++) {\n      var key = reducerKeys[i];\n\n      {\n        if (typeof reducers[key] === 'undefined') {\n          warning('No reducer provided for key \"' + key + '\"');\n        }\n      }\n\n      if (typeof reducers[key] === 'function') {\n        finalReducers[key] = reducers[key];\n      }\n    }\n    var finalReducerKeys = Object.keys(finalReducers);\n\n    var unexpectedKeyCache = void 0;\n    {\n      unexpectedKeyCache = {};\n    }\n\n    var shapeAssertionError = void 0;\n    try {\n      assertReducerShape(finalReducers);\n    } catch (e) {\n      shapeAssertionError = e;\n    }\n\n    return function combination() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments[1];\n\n      if (shapeAssertionError) {\n        throw shapeAssertionError;\n      }\n\n      {\n        var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n        if (warningMessage) {\n          warning(warningMessage);\n        }\n      }\n\n      var hasChanged = false;\n      var nextState = {};\n      for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n        var _key = finalReducerKeys[_i];\n        var reducer = finalReducers[_key];\n        var previousStateForKey = state[_key];\n        var nextStateForKey = reducer(previousStateForKey, action);\n        if (typeof nextStateForKey === 'undefined') {\n          var errorMessage = getUndefinedStateErrorMessage(_key, action);\n          throw new Error(errorMessage);\n        }\n        nextState[_key] = nextStateForKey;\n        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n      }\n      return hasChanged ? nextState : state;\n    };\n  }\n\n  function bindActionCreator(actionCreator, dispatch) {\n    return function () {\n      return dispatch(actionCreator.apply(undefined, arguments));\n    };\n  }\n\n  /**\n   * Turns an object whose values are action creators, into an object with the\n   * same keys, but with every function wrapped into a `dispatch` call so they\n   * may be invoked directly. This is just a convenience method, as you can call\n   * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n   *\n   * For convenience, you can also pass a single function as the first argument,\n   * and get a function in return.\n   *\n   * @param {Function|Object} actionCreators An object whose values are action\n   * creator functions. One handy way to obtain it is to use ES6 `import * as`\n   * syntax. You may also pass a single function.\n   *\n   * @param {Function} dispatch The `dispatch` function available on your Redux\n   * store.\n   *\n   * @returns {Function|Object} The object mimicking the original object, but with\n   * every action creator wrapped into the `dispatch` call. If you passed a\n   * function as `actionCreators`, the return value will also be a single\n   * function.\n   */\n  function bindActionCreators(actionCreators, dispatch) {\n    if (typeof actionCreators === 'function') {\n      return bindActionCreator(actionCreators, dispatch);\n    }\n\n    if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n      throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n    }\n\n    var keys = Object.keys(actionCreators);\n    var boundActionCreators = {};\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var actionCreator = actionCreators[key];\n      if (typeof actionCreator === 'function') {\n        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n      }\n    }\n    return boundActionCreators;\n  }\n\n  /**\n   * Composes single-argument functions from right to left. The rightmost\n   * function can take multiple arguments as it provides the signature for\n   * the resulting composite function.\n   *\n   * @param {...Function} funcs The functions to compose.\n   * @returns {Function} A function obtained by composing the argument functions\n   * from right to left. For example, compose(f, g, h) is identical to doing\n   * (...args) => f(g(h(...args))).\n   */\n\n  function compose() {\n    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n      funcs[_key] = arguments[_key];\n    }\n\n    if (funcs.length === 0) {\n      return function (arg) {\n        return arg;\n      };\n    }\n\n    if (funcs.length === 1) {\n      return funcs[0];\n    }\n\n    return funcs.reduce(function (a, b) {\n      return function () {\n        return a(b.apply(undefined, arguments));\n      };\n    });\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }return target;\n  };\n\n  /**\n   * Creates a store enhancer that applies middleware to the dispatch method\n   * of the Redux store. This is handy for a variety of tasks, such as expressing\n   * asynchronous actions in a concise manner, or logging every action payload.\n   *\n   * See `redux-thunk` package as an example of the Redux middleware.\n   *\n   * Because middleware is potentially asynchronous, this should be the first\n   * store enhancer in the composition chain.\n   *\n   * Note that each middleware will be given the `dispatch` and `getState` functions\n   * as named arguments.\n   *\n   * @param {...Function} middlewares The middleware chain to be applied.\n   * @returns {Function} A store enhancer applying the middleware.\n   */\n  function applyMiddleware() {\n    for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n      middlewares[_key] = arguments[_key];\n    }\n\n    return function (createStore) {\n      return function (reducer, preloadedState, enhancer) {\n        var store = createStore(reducer, preloadedState, enhancer);\n        var _dispatch = store.dispatch;\n        var chain = [];\n\n        var middlewareAPI = {\n          getState: store.getState,\n          dispatch: function dispatch(action) {\n            return _dispatch(action);\n          }\n        };\n        chain = middlewares.map(function (middleware) {\n          return middleware(middlewareAPI);\n        });\n        _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n        return _extends({}, store, {\n          dispatch: _dispatch\n        });\n      };\n    };\n  }\n\n  /*\n  * This is a dummy function to check if the function name has been altered by minification.\n  * If the function has been minified and NODE_ENV !== 'production', warn the user.\n  */\n  function isCrushed() {}\n\n  if (\"development\" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n    warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n  }\n\n  exports.createStore = createStore;\n  exports.combineReducers = combineReducers;\n  exports.bindActionCreators = bindActionCreators;\n  exports.applyMiddleware = applyMiddleware;\n  exports.compose = compose;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/redux/dist/redux.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/channelstream-admin/channelstream-admin.html":
/*!**********************************************************!*\
  !*** ./src/channelstream-admin/channelstream-admin.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../../bower_components/polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../../bower_components/iron-ajax/iron-ajax.html */ \"./bower_components/iron-ajax/iron-ajax.html\");\n\n__webpack_require__(/*! ../../bower_components/paper-progress/paper-progress.html */ \"./bower_components/paper-progress/paper-progress.html\");\n\n__webpack_require__(/*! ./server-info.html */ \"./src/channelstream-admin/server-info.html\");\n\n__webpack_require__(/*! ../debug.html */ \"./src/debug.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=channelstream-admin> <template> <style>.transparent{opacity:0}#admin-page-progress{width:100%;--paper-progress-indeterminate-cycle-duration:3s;margin-bottom:15px;transition-duration:.5s}</style> <iron-ajax id=ajax-admin-info url=\\\"\\\" handle-as=json loading={{loadingInfo}} data-type=SERVER_INFO on-request=_handleAjaxRequest on-error=_handleAjaxRequestError on-response=_handleAjaxResponse> </iron-ajax> <paper-progress id=admin-page-progress indeterminate=\\\"\\\" class=transparent transparent=[[loadingAdmin]]></paper-progress> <server-info channels=[[channels]] server-stats=[[serverStats]]></server-info> </template> </dom-module>\");\n\n__webpack_require__(/*! ./channelstream-admin.js */ \"./src/channelstream-admin/channelstream-admin.js\");\n\n//# sourceURL=webpack:///./src/channelstream-admin/channelstream-admin.html?");

/***/ }),

/***/ "./src/channelstream-admin/channelstream-admin.js":
/*!********************************************************!*\
  !*** ./src/channelstream-admin/channelstream-admin.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _store = __webpack_require__(/*! ./redux/store */ \"./src/channelstream-admin/redux/store.js\");\n\nvar _channels = __webpack_require__(/*! ./redux/server_info/channels */ \"./src/channelstream-admin/redux/server_info/channels.js\");\n\nvar _server_stats = __webpack_require__(/*! ./redux/server_info/server_stats */ \"./src/channelstream-admin/redux/server_info/server_stats.js\");\n\nvar _current_actions = __webpack_require__(/*! ./redux/current_actions */ \"./src/channelstream-admin/redux/current_actions/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ChannelStreamAdmin = function (_ReduxMixin) {\n    _inherits(ChannelStreamAdmin, _ReduxMixin);\n\n    function ChannelStreamAdmin() {\n        _classCallCheck(this, ChannelStreamAdmin);\n\n        return _possibleConstructorReturn(this, (ChannelStreamAdmin.__proto__ || Object.getPrototypeOf(ChannelStreamAdmin)).apply(this, arguments));\n    }\n\n    _createClass(ChannelStreamAdmin, [{\n        key: 'connectedCallback',\n        value: function connectedCallback() {\n            _get(ChannelStreamAdmin.prototype.__proto__ || Object.getPrototypeOf(ChannelStreamAdmin.prototype), 'connectedCallback', this).call(this);\n            // refresh data when document is attached to dom\n            this.$['ajax-admin-info'].url = this.appConfig.urls.jsonUrl;\n            this.refresh();\n            this._addInterval();\n        }\n    }, {\n        key: 'disconnectedCallback',\n        value: function disconnectedCallback() {\n            _get(ChannelStreamAdmin.prototype.__proto__ || Object.getPrototypeOf(ChannelStreamAdmin.prototype), 'disconnectedCallback', this).call(this);\n            this._clearInterval();\n        }\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            this.$['ajax-admin-info'].generateRequest();\n        }\n    }, {\n        key: '_addInterval',\n        value: function _addInterval() {\n            this.interval = setInterval(this.refresh.bind(this), 5000);\n        }\n    }, {\n        key: '_clearInterval',\n        value: function _clearInterval() {\n            if (this.interval) {\n                clearInterval(this.interval);\n            }\n        }\n    }, {\n        key: 'loadingChange',\n        value: function loadingChange() {\n            if (this.loadingInfo) {\n                this.shadowRoot.querySelector('paper-progress').toggleClass('transparent', false);\n            } else {\n                this.shadowRoot.querySelector('paper-progress').toggleClass('transparent', true);\n            }\n        }\n    }, {\n        key: '_handleAjaxRequest',\n        value: function _handleAjaxRequest(event) {\n            this.dispatch('currentActionStart', event.target.dataset.type, event.detail);\n        }\n    }, {\n        key: '_handleAjaxRequestError',\n        value: function _handleAjaxRequestError(event) {\n            this.dispatch('currentActionError', event.target.dataset.type, event.detail.error.message);\n        }\n    }, {\n        key: '_handleAjaxResponse',\n        value: function _handleAjaxResponse(event) {\n            var response = event.detail.response;\n            this.dispatch('currentActionFinish', event.target.dataset.type, response);\n            this.dispatch('setInfo', {\n                \"remembered_user_count\": response.remembered_user_count,\n                \"unique_user_count\": response.unique_user_count,\n                \"total_connections\": response.total_connections,\n                \"total_channels\": response.total_channels,\n                \"total_messages\": response.total_messages,\n                \"total_unique_messages\": response.total_unique_messages,\n                \"uptime\": response.uptime\n            });\n\n            var channels = Object.values(response.channels);\n            this.dispatch('setChannels', channels);\n        }\n    }], [{\n        key: 'is',\n        get: function get() {\n            return 'channelstream-admin';\n        }\n    }, {\n        key: 'properties',\n        get: function get() {\n            return {\n                appConfig: {\n                    type: Array,\n                    value: function value() {\n                        return window.AppConf;\n                    }\n                },\n                channels: {\n                    type: Array,\n                    statePath: 'serverInfo.channels'\n                },\n                serverStats: {\n                    type: Object,\n                    statePath: 'serverInfo.serverStats'\n                },\n                currentActions: {\n                    type: Array,\n                    statePath: 'currentActions'\n                },\n                loadingInfo: {\n                    type: Boolean,\n                    observer: 'loadingChange'\n                }\n            };\n        }\n    }, {\n        key: 'actions',\n        get: function get() {\n            return _extends({}, _current_actions.actions, {\n                setChannels: _channels.actions.set,\n                setInfo: _server_stats.actions.set\n            });\n        }\n    }]);\n\n    return ChannelStreamAdmin;\n}((0, _store.ReduxMixin)(Polymer.Element));\n\ncustomElements.define(ChannelStreamAdmin.is, ChannelStreamAdmin);\n\n//# sourceURL=webpack:///./src/channelstream-admin/channelstream-admin.js?");

/***/ }),

/***/ "./src/channelstream-admin/index.js":
/*!******************************************!*\
  !*** ./src/channelstream-admin/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./channelstream-admin.html */ \"./src/channelstream-admin/channelstream-admin.html\");\n\n//# sourceURL=webpack:///./src/channelstream-admin/index.js?");

/***/ }),

/***/ "./src/channelstream-admin/redux/current_actions/index.js":
/*!****************************************************************!*\
  !*** ./src/channelstream-admin/redux/current_actions/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar types = exports.types = {\n    CURRENT_ACTION_START: 'CURRENT_ACTION_START',\n    CURRENT_ACTION_FINISH: 'CURRENT_ACTION_FINISH',\n    CURRENT_ACTION_ERROR: 'CURRENT_ACTION_ERROR'\n};\n\nvar update = function update(state, mutations) {\n    return Object.assign({}, state, mutations);\n};\n\nvar actions = exports.actions = {\n    currentActionStart: function currentActionStart(subtype, payload) {\n        return {\n            type: types.CURRENT_ACTION_START,\n            subtype: subtype,\n            payload: payload\n        };\n    },\n    currentActionFinish: function currentActionFinish(subtype, payload) {\n        return {\n            type: types.CURRENT_ACTION_FINISH,\n            subtype: subtype,\n            payload: payload\n        };\n    },\n    currentActionError: function currentActionError(subtype, error) {\n        return {\n            type: types.CURRENT_ACTION_ERROR,\n            subtype: subtype,\n            payload: error\n        };\n    }\n};\n\nvar INITIAL_STATE = {\n    active: [],\n    failed: {},\n    activeCount: 0\n};\n\nvar reducer = exports.reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.CURRENT_ACTION_START:\n            state = _extends({}, state, {\n                active: [].concat(_toConsumableArray(state.active), [action.subtype])\n            });\n            break;\n        case types.CURRENT_ACTION_FINISH:\n            state = _extends({}, state, {\n                active: state.active.filter(function (item) {\n                    return action.subtype !== item;\n                })\n            });\n            break;\n        case types.CURRENT_ACTION_ERROR:\n            state = _extends({}, state, {\n                active: state.active.filter(function (item) {\n                    return action.subtype !== item;\n                }),\n                failed: _extends({}, state.failed, _defineProperty({}, action.subtype, action.payload))\n            });\n            break;\n    }\n    state.activeCount = state.active.length;\n    return state;\n};\n\nexports.default = reducer;\n\n//# sourceURL=webpack:///./src/channelstream-admin/redux/current_actions/index.js?");

/***/ }),

/***/ "./src/channelstream-admin/redux/server_info/channels.js":
/*!***************************************************************!*\
  !*** ./src/channelstream-admin/redux/server_info/channels.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar types = exports.types = {\n    CHANNELS_SET: 'channelStats/SET'\n};\n\nvar update = function update(state, mutations) {\n    return Object.assign({}, state, mutations);\n};\n\nvar actions = exports.actions = {\n    set: function set(channels) {\n        return {\n            type: types.CHANNELS_SET,\n            channels: channels\n        };\n    }\n};\n\nvar INITIAL_STATE = [];\n\nvar reducer = exports.reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.CHANNELS_SET:\n            state = [].concat(_toConsumableArray(action.channels));\n            break;\n    }\n    return state;\n};\n\nexports.default = reducer;\n\n//# sourceURL=webpack:///./src/channelstream-admin/redux/server_info/channels.js?");

/***/ }),

/***/ "./src/channelstream-admin/redux/server_info/index.js":
/*!************************************************************!*\
  !*** ./src/channelstream-admin/redux/server_info/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _redux = __webpack_require__(/*! ../../../../node_modules/redux/dist/redux */ \"./node_modules/redux/dist/redux.js\");\n\nvar _channels = __webpack_require__(/*! ./channels */ \"./src/channelstream-admin/redux/server_info/channels.js\");\n\nvar _channels2 = _interopRequireDefault(_channels);\n\nvar _server_stats = __webpack_require__(/*! ./server_stats */ \"./src/channelstream-admin/redux/server_info/server_stats.js\");\n\nvar _server_stats2 = _interopRequireDefault(_server_stats);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar combinedReducers = (0, _redux.combineReducers)({ serverStats: _server_stats2.default, channels: _channels2.default });\nexports.default = combinedReducers;\n\n//# sourceURL=webpack:///./src/channelstream-admin/redux/server_info/index.js?");

/***/ }),

/***/ "./src/channelstream-admin/redux/server_info/server_stats.js":
/*!*******************************************************************!*\
  !*** ./src/channelstream-admin/redux/server_info/server_stats.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar types = exports.types = {\n    SET: 'serverStats/SET'\n};\n\nvar actions = exports.actions = {\n    set: function set(stats) {\n        return {\n            type: types.SET,\n            stats: stats\n        };\n    }\n};\n\nvar INITIAL_STATE = {\n    uptime: undefined,\n    remembered_user_count: 0,\n    unique_user_count: 0,\n    total_connections: 0,\n    total_channels: 0,\n    total_unique_messages: 0,\n    total_messages: 0\n};\n\nvar reducer = exports.reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n    var action = arguments[1];\n\n    if (typeof state === 'undefined') {\n        return INITIAL_STATE;\n    }\n    switch (action.type) {\n        case types.SET:\n            state = _extends({}, action.stats);\n            break;\n    }\n    return state;\n};\n\nexports.default = reducer;\n\n//# sourceURL=webpack:///./src/channelstream-admin/redux/server_info/server_stats.js?");

/***/ }),

/***/ "./src/channelstream-admin/redux/store.js":
/*!************************************************!*\
  !*** ./src/channelstream-admin/redux/store.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReduxMixin = undefined;\n\nvar _redux = __webpack_require__(/*! ../../../node_modules/redux/dist/redux */ \"./node_modules/redux/dist/redux.js\");\n\nvar _reduxLogger = __webpack_require__(/*! ../../../node_modules/redux-logger/dist/redux-logger */ \"./node_modules/redux-logger/dist/redux-logger.js\");\n\nvar _reduxLogger2 = _interopRequireDefault(_reduxLogger);\n\nvar _polymerRedux = __webpack_require__(/*! ../../vendor/polymer-redux */ \"./src/vendor/polymer-redux.js\");\n\nvar _polymerRedux2 = _interopRequireDefault(_polymerRedux);\n\nvar _server_info = __webpack_require__(/*! ./server_info */ \"./src/channelstream-admin/redux/server_info/index.js\");\n\nvar _server_info2 = _interopRequireDefault(_server_info);\n\nvar _current_actions = __webpack_require__(/*! ./current_actions */ \"./src/channelstream-admin/redux/current_actions/index.js\");\n\nvar _current_actions2 = _interopRequireDefault(_current_actions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar combinedReducers = (0, _redux.combineReducers)({ serverInfo: _server_info2.default, currentActions: _current_actions2.default });\n\nvar store = (0, _redux.createStore)(combinedReducers, {}, (0, _redux.applyMiddleware)(_reduxLogger2.default));\nwindow.ReduxStore = store;\n// Create the PolymerRedux mixin\nvar ReduxMixin = (0, _polymerRedux2.default)(store);\n\nexports.ReduxMixin = ReduxMixin;\n\n//# sourceURL=webpack:///./src/channelstream-admin/redux/store.js?");

/***/ }),

/***/ "./src/channelstream-admin/server-info.html":
/*!**************************************************!*\
  !*** ./src/channelstream-admin/server-info.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../../bower_components/polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\n__webpack_require__(/*! ../../bower_components/iron-collapse/iron-collapse.html */ \"./bower_components/iron-collapse/iron-collapse.html\");\n\n__webpack_require__(/*! ../../bower_components/iron-icons/iron-icons.html */ \"./bower_components/iron-icons/iron-icons.html\");\n\n__webpack_require__(/*! ../../bower_components/iron-icons/social-icons.html */ \"./bower_components/iron-icons/social-icons.html\");\n\n__webpack_require__(/*! ../../bower_components/paper-badge/paper-badge.html */ \"./bower_components/paper-badge/paper-badge.html\");\n\n__webpack_require__(/*! ../../bower_components/paper-button/paper-button.html */ \"./bower_components/paper-button/paper-button.html\");\n\n__webpack_require__(/*! ../../bower_components/paper-card/paper-card.html */ \"./bower_components/paper-card/paper-card.html\");\n\n__webpack_require__(/*! ../../bower_components/paper-tooltip/paper-tooltip.html */ \"./bower_components/paper-tooltip/paper-tooltip.html\");\n\n__webpack_require__(/*! ../debug.html */ \"./src/debug.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=server-info> <template> <style>.server-stat{padding:0 15px 0 0;margin:0 25px 25px 0;display:inline-block;position:relative}.server-stat>paper-badge{--paper-badge-margin-bottom:-20px}paper-card{width:100%}paper-material{padding:25px}paper-button iron-icon{margin-right:10px}ul{margin:0;padding:0;list-style:none}.users-holder{padding-top:20px}.history-holder{padding-top:20px}</style> <div class=server-stat> Uptime [[serverStats.uptime]] </div> <div class=server-stat> Unique users remembered <paper-badge label=[[serverStats.remembered_user_count]]></paper-badge> </div> <div class=server-stat> Unique users connected <paper-badge label=[[serverStats.unique_user_count]]></paper-badge> </div> <div class=server-stat> Total connections <paper-badge label=[[serverStats.total_connections]]></paper-badge> </div> <div class=server-stat> Total channels <paper-badge label=[[serverStats.total_channels]]></paper-badge> </div> <div class=server-stat> Messages since start <paper-badge label=[[serverStats.total_unique_messages]]></paper-badge> </div> <div class=server-stat> All frames sent <paper-badge label=[[serverStats.total_messages]]></paper-badge> </div> <template is=dom-repeat items=[[channels]]> <paper-card heading=\\\"channel: [[item.name]]\\\"> <div class=card-content> <ul> <li><strong>Long name</strong>: [[item.long_name]]</li> <li><strong>last active</strong>: [[item.last_active]]</li> <li><strong>Total connections</strong>: [[item.total_connections]]</li> <li><strong>Total users</strong>: [[item.total_users]]</li> </ul> <p><strong>Config</strong></p> <app-debug data=[[item.settings]]></app-debug> <iron-collapse class$=channel-history-[[index]]> <div class=history-holder> <strong>Message history:</strong> <template is=dom-repeat items=[[item.history]]> <app-debug data=[[item]]></app-debug> </template> </div> </iron-collapse> <iron-collapse class$=channel-users-[[index]]> <div class=users-holder> <strong>Connected users:</strong> <template is=dom-repeat items=[[item.users]]> <div>[[item]]</div> </template> </div> </iron-collapse> </div> <div class=card-actions> <span> <paper-button toggles=\\\"\\\" raised=\\\"\\\" on-tap=toggleHistory data-channel$=[[item.name]] data-index$=[[index]]> <iron-icon icon=icons:history></iron-icon>History</paper-button> <paper-tooltip position=top animation-delay=0>Shows this channels history</paper-tooltip> </span> <span> <paper-button toggles=\\\"\\\" raised=\\\"\\\" on-tap=toggleUsers data-channel$=[[item.name]] data-index$=[[index]]> <iron-icon icon=social:people-outline></iron-icon>Users</paper-button> <paper-tooltip position=top animation-delay=0>Shows currently connected users</paper-tooltip> </span> </div> </paper-card> </template> </template> </dom-module>\");\n\n__webpack_require__(/*! ./server-info.js */ \"./src/channelstream-admin/server-info.js\");\n\n//# sourceURL=webpack:///./src/channelstream-admin/server-info.html?");

/***/ }),

/***/ "./src/channelstream-admin/server-info.js":
/*!************************************************!*\
  !*** ./src/channelstream-admin/server-info.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _store = __webpack_require__(/*! ./redux/store */ \"./src/channelstream-admin/redux/store.js\");\n\nvar _channels = __webpack_require__(/*! ./redux/server_info/channels */ \"./src/channelstream-admin/redux/server_info/channels.js\");\n\nvar _server_stats = __webpack_require__(/*! ./redux/server_info/server_stats */ \"./src/channelstream-admin/redux/server_info/server_stats.js\");\n\nvar _current_actions = __webpack_require__(/*! ./redux/current_actions */ \"./src/channelstream-admin/redux/current_actions/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ServerInfo = function (_Polymer$Element) {\n    _inherits(ServerInfo, _Polymer$Element);\n\n    function ServerInfo() {\n        _classCallCheck(this, ServerInfo);\n\n        return _possibleConstructorReturn(this, (ServerInfo.__proto__ || Object.getPrototypeOf(ServerInfo)).apply(this, arguments));\n    }\n\n    _createClass(ServerInfo, [{\n        key: 'toggleHistory',\n        value: function toggleHistory(event) {\n            var index = event.currentTarget.dataset['index'];\n            if (index !== undefined) {\n                this.shadowRoot.querySelector('.channel-history-' + index).toggle();\n            }\n        }\n    }, {\n        key: 'toggleUsers',\n        value: function toggleUsers(event) {\n            var index = event.currentTarget.dataset['index'];\n            if (index !== undefined) {\n                this.shadowRoot.querySelector('.channel-users-' + index).toggle();\n            }\n        }\n    }], [{\n        key: 'is',\n        get: function get() {\n            return 'server-info';\n        }\n    }, {\n        key: 'properties',\n        get: function get() {\n            return {\n                channels: {\n                    type: Array\n                },\n                serverStats: {\n                    type: Object\n                }\n            };\n        }\n    }]);\n\n    return ServerInfo;\n}(Polymer.Element);\n\ncustomElements.define(ServerInfo.is, ServerInfo);\n\n//# sourceURL=webpack:///./src/channelstream-admin/server-info.js?");

/***/ }),

/***/ "./src/debug.html":
/*!************************!*\
  !*** ./src/debug.html ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n__webpack_require__(/*! ../bower_components/polymer/polymer.html */ \"./bower_components/polymer/polymer.html\");\n\nvar RegisterHtmlTemplate = __webpack_require__(/*! polymer-webpack-loader/register-html-template */ \"./node_modules/polymer-webpack-loader/register-html-template.js\");\n\nRegisterHtmlTemplate.register(\"<dom-module id=app-debug> <template> <style>pre{padding:5px;border:1px solid}</style> <pre>[[output]]</pre> </template> </dom-module>\");\n\nvar AppDebug = function (_Polymer$Element) {\n    _inherits(AppDebug, _Polymer$Element);\n\n    function AppDebug() {\n        _classCallCheck(this, AppDebug);\n\n        return _possibleConstructorReturn(this, (AppDebug.__proto__ || Object.getPrototypeOf(AppDebug)).apply(this, arguments));\n    }\n\n    _createClass(AppDebug, [{\n        key: '_dumpOut',\n        value: function _dumpOut() {\n            this.output = JSON.stringify(this.data, null, 4);\n        }\n    }], [{\n        key: 'is',\n        get: function get() {\n            return 'app-debug';\n        }\n    }, {\n        key: 'properties',\n        get: function get() {\n            return {\n                data: {\n                    type: Object\n                }\n            };\n        }\n    }, {\n        key: 'observers',\n        get: function get() {\n            return ['_dumpOut(data.*)'];\n        }\n    }]);\n\n    return AppDebug;\n}(Polymer.Element);\n\ncustomElements.define(AppDebug.is, AppDebug);\n\n//# sourceURL=webpack:///./src/debug.html?");

/***/ }),

/***/ "./src/vendor/polymer-redux.js":
/*!*************************************!*\
  !*** ./src/vendor/polymer-redux.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PolymerRedux = function () {\n    'use strict';\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n        win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n        win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n        win = self;\n    } else {\n        win = {};\n    }\n\n    var window_1 = win;\n\n    var console_1 = console;\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }return target;\n    };\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    // Expose globals\n    var CustomEvent = window_1.CustomEvent;\n    var Polymer = window_1.Polymer;\n\n    /**\n     * Polymer Redux\n     *\n     * Creates a Class mixin for decorating Elements with a given Redux store.\n     *\n     * @polymerMixin\n     *\n     * @param {Object} store Redux store.\n     * @return {Function} Class mixin.\n     */\n\n    function PolymerRedux(store) {\n        if (!store) {\n            throw new TypeError('PolymerRedux: expecting a redux store.');\n        } else if (!['getState', 'dispatch', 'subscribe'].every(function (k) {\n            return typeof store[k] === 'function';\n        })) {\n            throw new TypeError('PolymerRedux: invalid store object.');\n        }\n\n        var subscribers = new Map();\n\n        /**\n         * Binds element's properties to state changes from the Redux store.\n         *\n         * @example\n         *     const update = bind(el, props) // set bindings\n         *     update(state) // manual update\n         *\n         * @private\n         * @param {HTMLElement} element\n         * @param {Object} properties\n         * @return {Function} Update function.\n         */\n        var bind = function bind(element, properties) {\n            var bindings = Object.keys(properties).filter(function (name) {\n                var property = properties[name];\n                if (Object.prototype.hasOwnProperty.call(property, 'statePath')) {\n                    if (!property.readOnly && property.notify) {\n                        console_1.warn('PolymerRedux: <' + element.constructor.is + '>.' + name + ' has \"notify\" enabled, two-way bindings goes against Redux\\'s paradigm');\n                    }\n                    return true;\n                }\n                return false;\n            });\n\n            /**\n             * Updates an element's properties with the given state.\n             *\n             * @private\n             * @param {Object} state\n             */\n            var update = function update(state) {\n                var propertiesChanged = false;\n                bindings.forEach(function (name) {\n                    // Perhaps .reduce() to a boolean?\n                    var statePath = properties[name].statePath;\n\n                    var value = typeof statePath === 'function' ? statePath.call(element, state) : Polymer.Path.get(state, statePath);\n\n                    var changed = element._setPendingPropertyOrPath(name, value, true);\n                    propertiesChanged = propertiesChanged || changed;\n                });\n                if (propertiesChanged) {\n                    element._invalidateProperties();\n                }\n            };\n\n            // Redux listener\n            var unsubscribe = store.subscribe(function () {\n                var detail = store.getState();\n                update(detail);\n\n                element.dispatchEvent(new CustomEvent('state-changed', { detail: detail }));\n            });\n\n            subscribers.set(element, unsubscribe);\n\n            return update(store.getState());\n        };\n\n        /**\n         * Unbinds an element from state changes in the Redux store.\n         *\n         * @private\n         * @param {HTMLElement} element\n         */\n        var unbind = function unbind(element) {\n            var off = subscribers.get(element);\n            if (typeof off === 'function') {\n                off();\n            }\n        };\n\n        /**\n         * Merges a property's object value using the defaults way.\n         *\n         * @private\n         * @param {Object} what Initial prototype\n         * @param {String} which Property to collect.\n         * @return {Object} the collected values\n         */\n        var collect = function collect(what, which) {\n            var res = {};\n            while (what) {\n                res = _extends({}, what[which], res); // Respect prototype priority\n                what = Object.getPrototypeOf(what);\n            }\n            return res;\n        };\n\n        /**\n         * ReduxMixin\n         *\n         * @example\n         *     const ReduxMixin = PolymerRedux(store)\n         *     class Foo extends ReduxMixin(Polymer.Element) { }\n         *\n         * @polymerMixinClass\n         *\n         * @param {Polymer.Element} parent The polymer parent element.\n         * @return {Function} PolymerRedux mixed class.\n         */\n        return function (parent) {\n            return function (_parent) {\n                _inherits(ReduxMixin, _parent);\n\n                function ReduxMixin() {\n                    _classCallCheck(this, ReduxMixin);\n\n                    // Collect the action creators first as property changes trigger\n                    // dispatches from observers, see #65, #66, #67\n                    var _this2 = _possibleConstructorReturn(this, (ReduxMixin.__proto__ || Object.getPrototypeOf(ReduxMixin)).call(this));\n\n                    var actions = collect(_this2.constructor, 'actions');\n                    Object.defineProperty(_this2, '_reduxActions', {\n                        configurable: true,\n                        value: actions\n                    });\n                    return _this2;\n                }\n\n                _createClass(ReduxMixin, [{\n                    key: 'connectedCallback',\n                    value: function connectedCallback() {\n                        _get(ReduxMixin.prototype.__proto__ || Object.getPrototypeOf(ReduxMixin.prototype), 'connectedCallback', this).call(this);\n                        var properties = collect(this.constructor, 'properties');\n                        bind(this, properties);\n                    }\n                }, {\n                    key: 'disconnectedCallback',\n                    value: function disconnectedCallback() {\n                        _get(ReduxMixin.prototype.__proto__ || Object.getPrototypeOf(ReduxMixin.prototype), 'disconnectedCallback', this).call(this);\n                        unbind(this);\n                    }\n\n                    /**\n                     * Dispatches an action to the Redux store.\n                     *\n                     * @example\n                     *     element.dispatch({ type: 'ACTION' })\n                     *\n                     * @example\n                     *     element.dispatch('actionCreator', 'foo', 'bar')\n                     *\n                     * @example\n                     *     element.dispatch((dispatch) => {\n                    *         dispatch({ type: 'MIDDLEWARE'})\n                    *     })\n                     *\n                     * @param  {...*} args\n                     * @return {Object} The action.\n                     */\n\n                }, {\n                    key: 'dispatch',\n                    value: function dispatch() {\n                        var _this = this;\n\n                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                            args[_key] = arguments[_key];\n                        }\n\n                        var actions = this._reduxActions;\n\n                        // Action creator\n                        var action = args[0];\n\n                        if (typeof action === 'string') {\n                            if (typeof actions[action] !== 'function') {\n                                throw new TypeError('PolymerRedux: <' + this.constructor.is + '> invalid action creator \"' + action + '\"');\n                            }\n                            action = actions[action].apply(actions, _toConsumableArray(args.slice(1)));\n                        }\n\n                        // Proxy async dispatch\n                        if (typeof action === 'function') {\n                            var originalAction = action;\n                            action = function action() {\n                                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                                    args[_key2] = arguments[_key2];\n                                }\n\n                                // Replace redux dispatch\n                                args.splice(0, 1, function () {\n                                    return _this.dispatch.apply(_this, arguments);\n                                });\n                                return originalAction.apply(undefined, args);\n                            };\n\n                            // Copy props from the original action to the proxy.\n                            // see https://github.com/tur-nr/polymer-redux/issues/98\n                            Object.keys(originalAction).forEach(function (prop) {\n                                action[prop] = originalAction[prop];\n                            });\n                        }\n\n                        return store.dispatch(action);\n                    }\n\n                    /**\n                     * Gets the current state in the Redux store.\n                     *\n                     * @return {*}\n                     */\n\n                }, {\n                    key: 'getState',\n                    value: function getState() {\n                        return store.getState();\n                    }\n                }]);\n\n                return ReduxMixin;\n            }(parent);\n        };\n    }\n\n    return PolymerRedux;\n}();\n\nexports.default = PolymerRedux;\n\n/*** EXPORTS FROM exports-loader ***/\n\nmodule.exports = PolymerRedux;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./src/vendor/polymer-redux.js?");

/***/ })

/******/ });